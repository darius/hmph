import actors
import builtin
import envs
import registry

L1069 = builtin.List(elements=())
L1068 = actors.ActorEditor(editable=False,
                           actor=L1069)
L709 = builtin.String(str='<blockquote> <p></blockquote>')
L1349 = actors.ActorEditor(editable=False,
                           actor=L709)
L157 = envs.Env(parent=None)
L156 = envs.Env(parent=L157)
L181 = envs.Env(parent=L156)
L193 = envs.Env(parent=L181)
L237 = envs.Env(parent=L193)
L236 = envs.Env(parent=L237)
L200 = actors.Script(elements=[actors.Method(body=actors.Expression(text='question',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='question'),
                               actors.Method(body=actors.Expression(text='call on: yesbox',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='call on: nobox',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L197 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make asker',
                                                                    inner_map={'asker': L200}),
                                             serial_id=0,
                                             parameters=['node'],
                                             selector='on:')],
                     next_serial_id=1)
L235 = actors.Actor(env=L236,
                    script=L197)
L234 = builtin.Box(initial_value=L235)
L896 = actors.ActorEditor(editable=False,
                          actor=L234)
L1415 = builtin.Number(n=25.0)
L1468 = actors.ActorEditor(editable=False,
                           actor=L1415)
L868 = builtin.BoxMaker()
L1074 = actors.ActorEditor(editable=False,
                           actor=L868)
L624 = envs.Env(parent=None)
L726 = builtin.MailDirectory(env=envs.Env(parent=L624))
L1194 = actors.ActorEditor(editable=False,
                           actor=L726)
L361 = builtin.BoxMaker()
L360 = actors.ActorEditor(editable=False,
                          actor=L361)
L768 = builtin.String(str='Wavy!')
L767 = actors.ActorEditor(editable=False,
                          actor=L768)
L740 = builtin.Number(n=10)
L739 = actors.ActorEditor(editable=False,
                          actor=L740)
L108 = envs.Env(parent=None)
L145 = builtin.MailDirectory(env=envs.Env(parent=L108))
L1196 = actors.ActorEditor(editable=False,
                           actor=L145)
L247 = builtin.String(str='Is it easily frightened?')
L521 = actors.ActorEditor(editable=False,
                          actor=L247)
L168 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1328 = actors.ActorEditor(editable=False,
                           actor=L168)
L869 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1597 = actors.ActorEditor(editable=False,
                           actor=L869)
L354 = actors.Script(elements=[],
                     next_serial_id=0)
L352 = actors.Actor(env=envs.Env(parent=L156),
                    script=L354)
L1400 = actors.ActorEditor(editable=True,
                           actor=L352)
L4 = builtin.Boolean(value=False,
                     script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                         inner_map={}),
                                                                  serial_id=0,
                                                                  parameters=[],
                                                                  selector='not'),
                                                    actors.Method(body=actors.Expression(text='falseaction run',
                                                                                         inner_map={}),
                                                                  serial_id=1,
                                                                  parameters=['trueaction',
                                                                              'falseaction'],
                                                                  selector='iftrue:iffalse:')],
                                          next_serial_id=2))
L3 = actors.ActorEditor(editable=False,
                        actor=L4)
L16 = builtin.Boolean(value=False,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='falsevalue',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['truevalue',
                                                                               'falsevalue'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L38 = builtin.Box(initial_value=L16)
L1006 = actors.ActorEditor(editable=False,
                           actor=L38)
L1280 = envs.Env(parent=None)
L1279 = actors.Actor(env=L1280,
                     script=actors.Script(elements=[],
                                          next_serial_id=0))
L1278 = actors.ActorEditor(editable=True,
                           actor=L1279)
L857 = envs.Env(parent=None)
L901 = envs.Env(parent=L857)
L920 = actors.Example(expression=actors.Expression(text='1 * 2 * 3 * 4 * 5',
                                                   inner_map={}),
                      serial_id=0)
L919 = actors.Script(elements=[L920],
                     next_serial_id=1)
L917 = actors.Actor(env=envs.Env(parent=L901),
                    script=L919)
L923 = actors.ActorEditor(editable=True,
                          actor=L917)
L808 = envs.Env(parent=None)
L807 = envs.Env(parent=L808)
L847 = actors.Script(elements=[],
                     next_serial_id=0)
L845 = actors.Actor(env=envs.Env(parent=L807),
                    script=L847)
L1342 = actors.ActorEditor(editable=True,
                           actor=L845)
L215 = envs.Env(parent=L181)
L257 = envs.Env(parent=L215)
L256 = envs.Env(parent=L257)
L230 = actors.Script(elements=[actors.Text(body="I'm out of ideas about your animal -- please tell me its name and a question to ask in the future, such that yes is the right answer for it.",
                                           serial_id=0),
                               actors.Method(body=actors.Expression(text="node <- (makebranch on: question ifyes: (makebox holding: (makeguess for: animal)) ifno: (makebox holding: guessernode)).\r\n'Thanks, I will remember.'",
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=['animal',
                                                         'question'],
                                             selector='name:question:')],
                     next_serial_id=3)
L223 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'Is it a ' + animal + '?'",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='question'),
                               actors.Method(body=actors.Expression(text="'Wavy!'",
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='make terminus',
                                                                    inner_map={'terminus': L230}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L220 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make guesser',
                                                                    inner_map={'guesser': L223}),
                                             serial_id=0,
                                             parameters=['node'],
                                             selector='on:')],
                     next_serial_id=1)
L255 = actors.Actor(env=L256,
                    script=L220)
L254 = builtin.Box(initial_value=L255)
L1472 = actors.ActorEditor(editable=False,
                           actor=L254)
L526 = envs.Env(parent=None)
L525 = envs.Env(parent=L526)
L773 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                   inner_map={}),
                      serial_id=1)
L776 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                   inner_map={}),
                      serial_id=2)
L573 = actors.Script(elements=[],
                     next_serial_id=0)
L780 = actors.Example(expression=actors.Expression(text='make Foo',
                                                   inner_map={'Foo': L573}),
                      serial_id=4)
L783 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                   inner_map={}),
                      serial_id=6)
L785 = actors.Example(expression=actors.Expression(text='box get',
                                                   inner_map={}),
                      serial_id=7)
L787 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                   inner_map={}),
                      serial_id=8)
L789 = actors.Example(expression=actors.Expression(text="['hello']",
                                                   inner_map={}),
                      serial_id=9)
L794 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                   inner_map={}),
                      serial_id=11)
L797 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                   inner_map={}),
                      serial_id=13)
L801 = actors.Example(expression=actors.Expression(text='http://localhost:8080/id/5292533547202728044',
                                                   inner_map={}),
                      serial_id=16)
L770 = actors.Actor(env=L525,
                    script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                               serial_id=0),
                                                   L773,
                                                   L776,
                                                   actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                               serial_id=3),
                                                   L780,
                                                   actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                               serial_id=5),
                                                   L783,
                                                   L785,
                                                   L787,
                                                   L789,
                                                   actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                               serial_id=10),
                                                   L794,
                                                   actors.Text(body='You can create your own mailbox:',
                                                               serial_id=12),
                                                   L797,
                                                   actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                               serial_id=14),
                                                   actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                               serial_id=15),
                                                   L801],
                                         next_serial_id=17))
L769 = actors.ActorEditor(editable=True,
                          actor=L770)
L1460 = builtin.List(elements=(builtin.String(str='hello'),))
L1459 = actors.ActorEditor(editable=False,
                           actor=L1460)
L593 = builtin.Box(initial_value=L4)
L1474 = actors.ActorEditor(editable=False,
                           actor=L593)
L253 = builtin.String(str='Does it meow?')
L964 = actors.ActorEditor(editable=False,
                          actor=L253)
L527 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L549 = builtin.Box(initial_value=L527)
L1520 = actors.ActorEditor(editable=False,
                           actor=L549)
L241 = envs.Env(parent=L193)
L240 = envs.Env(parent=L241)
L1341 = envs.Env(parent=L240)
L1339 = actors.Actor(env=envs.Env(parent=L1341),
                     script=L200)
L1338 = actors.ActorEditor(editable=True,
                           actor=L1339)
L1428 = builtin.List(elements=(builtin.String(str='hello'),))
L1483 = actors.ActorEditor(editable=False,
                           actor=L1428)
L900 = envs.Env(parent=L901)
L907 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L898 = actors.Actor(env=envs.Env(parent=L900),
                    script=L907)
L897 = actors.ActorEditor(editable=True,
                          actor=L898)
L926 = builtin.Box(initial_value=builtin.List(elements=()))
L1449 = actors.ActorEditor(editable=False,
                           actor=L926)
L486 = builtin.Number(n=5.0)
L1325 = actors.ActorEditor(editable=False,
                           actor=L486)
L1121 = envs.Env(parent=None)
L1120 = envs.Env(parent=L1121)
L1119 = actors.Actor(env=L1120,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    actors.Example(expression=actors.Expression(text='2 + 3',
                                                                                                inner_map={}),
                                                                   serial_id=1),
                                                    actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                                                                inner_map={}),
                                                                   serial_id=2),
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    actors.Example(expression=actors.Expression(text='make Foo',
                                                                                                inner_map={}),
                                                                   serial_id=4),
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                                                                inner_map={}),
                                                                   serial_id=6),
                                                    actors.Example(expression=actors.Expression(text='box get',
                                                                                                inner_map={}),
                                                                   serial_id=7),
                                                    actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                                                                inner_map={}),
                                                                   serial_id=8),
                                                    actors.Example(expression=actors.Expression(text="['hello']",
                                                                                                inner_map={}),
                                                                   serial_id=9),
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    actors.Example(expression=actors.Expression(text='maildirectory',
                                                                                                inner_map={}),
                                                                   serial_id=11),
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                                                                inner_map={}),
                                                                   serial_id=13),
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15)],
                                          next_serial_id=16))
L1118 = actors.ActorEditor(editable=True,
                           actor=L1119)
L89 = builtin.Number(n=25.0)
L88 = actors.ActorEditor(editable=False,
                         actor=L89)
L937 = builtin.Number(n=25.0)
L1298 = actors.ActorEditor(editable=False,
                           actor=L937)
L626 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='trueaction run',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['trueaction',
                                                                                'falseaction'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1005 = actors.ActorEditor(editable=False,
                           actor=L626)
L15 = envs.Env(parent=None)
L84 = actors.Actor(env=L15,
                   script=actors.Script(elements=[],
                                        next_serial_id=0))
L83 = actors.ActorEditor(editable=True,
                         actor=L84)
L974 = builtin.Number(n=25.0)
L1116 = actors.ActorEditor(editable=False,
                           actor=L974)
L189 = actors.Script(elements=[actors.Method(body=actors.Expression(text='(box get) on: box',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['box'],
                                             selector='on:')],
                     next_serial_id=1)
L260 = actors.Example(expression=actors.Expression(text='make call',
                                                   inner_map={'call': L189}),
                      serial_id=0)
L207 = actors.Script(elements=[actors.Method(body=actors.Expression(text='question',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='question'),
                               actors.Method(body=actors.Expression(text='call on: yesbox',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='call on: nobox',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L194 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make askernode\r\n',
                                                                    inner_map={'askernode': L197,
                                                                               'asker': L207}),
                                             serial_id=0,
                                             parameters=['question',
                                                         'yesbox',
                                                         'nobox'],
                                             selector='on:ifyes:ifno:')],
                     next_serial_id=1)
L263 = actors.Example(expression=actors.Expression(text='make makebranch',
                                                   inner_map={'makebranch': L194}),
                      serial_id=1)
L219 = actors.Script(elements=[],
                     next_serial_id=0)
L216 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make guessernode',
                                                                    inner_map={'guesser': L219,
                                                                               'guessernode': L220}),
                                             serial_id=0,
                                             parameters=['animal'],
                                             selector='for:')],
                     next_serial_id=1)
L265 = actors.Example(expression=actors.Expression(text='make makeguess',
                                                   inner_map={'makeguess': L216}),
                      serial_id=2)
L267 = actors.Example(expression=actors.Expression(text="let root = box holding: (makeguess for: 'dog')",
                                                   inner_map={}),
                      serial_id=3)
L269 = actors.Example(expression=actors.Expression(text="let root = makebox holding: (makeguess for: 'dog')",
                                                   inner_map={}),
                      serial_id=4)
L271 = actors.Example(expression=actors.Expression(text='call on: root',
                                                   inner_map={}),
                      serial_id=6)
L276 = actors.Example(expression=actors.Expression(text='call on: root',
                                                   inner_map={}),
                      serial_id=7)
L184 = actors.Script(elements=[actors.Method(body=actors.Expression(text='call on: root',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='run')],
                     next_serial_id=1)
L281 = actors.Example(expression=actors.Expression(text='make playgame',
                                                   inner_map={'playgame': L184}),
                      serial_id=8)
L259 = actors.Script(elements=[L260,
                               L263,
                               L265,
                               L267,
                               L269,
                               L271,
                               L276,
                               L281],
                     next_serial_id=9)
L180 = actors.Actor(env=L181,
                    script=L259)
L262 = actors.ActorEditor(editable=True,
                          actor=L180)
L298 = envs.Env(parent=L156)
L312 = envs.Env(parent=L298)
L346 = envs.Env(parent=L312)
L345 = envs.Env(parent=L346)
L1083 = envs.Env(parent=L345)
L323 = actors.Script(elements=[actors.Text(body="I'm out of guesses about your animal.  Please tell me its name and a new question I can ask, so that your animal has a yes answer.  Thanks!",
                                           serial_id=0),
                               actors.Method(body=actors.Expression(text="box <- (makequestion asking: question ifyes: (makeguess name: animal parent: box) ifno: (box get)).\r\n'OK!'\r\n",
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=['animal',
                                                         'question'],
                                             selector='name:question:')],
                     next_serial_id=2)
L1081 = actors.Actor(env=envs.Env(parent=L1083),
                     script=L323)
L1080 = actors.ActorEditor(editable=True,
                           actor=L1081)
L107 = envs.Env(parent=L108)
L128 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L131 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L124 = actors.Actor(env=L107,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L128,
                                                                                                   'mailbox': L131}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1115 = actors.ActorEditor(editable=True,
                           actor=L124)
L623 = envs.Env(parent=L624)
L635 = envs.Env(parent=L623)
L686 = actors.Example(expression=actors.Expression(text='let stamppair = makestamp run',
                                                   inner_map={}),
                      serial_id=0)
L689 = actors.Example(expression=actors.Expression(text='let htmlstamp = stamppair at: 1',
                                                   inner_map={}),
                      serial_id=1)
L691 = actors.Example(expression=actors.Expression(text='let htmlguard = stamppair at: 2',
                                                   inner_map={}),
                      serial_id=2)
L643 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'<' + tag + (attributes foldr: showattr initially: '>')",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='show')],
                     next_serial_id=1)
L651 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'<' + tag + (attributes foldr: showattr initially: '>') + \r\n  (elements foldr: showattr initially: '') + \r\n  '</' + tag + '>'",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='show')],
                     next_serial_id=1)
L658 = actors.Script(elements=[],
                     next_serial_id=0)
L659 = actors.Script(elements=[],
                     next_serial_id=0)
L660 = actors.Script(elements=[],
                     next_serial_id=0)
L661 = actors.Script(elements=[],
                     next_serial_id=0)
L640 = actors.Script(elements=[actors.Method(body=actors.Expression(text='stringguard check: tag.\r\nlistguard check: attributes.\r\nhtmlstamp stamp: make element',
                                                                    inner_map={'element': L643}),
                                             serial_id=0,
                                             parameters=['tag',
                                                         'attributes'],
                                             selector='lonetag:attributes:'),
                               actors.Text(body='XXX must check each attribute as well',
                                           serial_id=1),
                               actors.Method(body=actors.Expression(text='markup lonetag: tag attributes: []',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=['tag'],
                                             selector='lonetag:'),
                               actors.Method(body=actors.Expression(text='stringguard check: tag.\r\nlistguard check: attributes.\r\nlistguard check: elements.\r\nhtmlstamp stamp: make element',
                                                                    inner_map={'element': L651}),
                                             serial_id=3,
                                             parameters=['tag',
                                                         'attributes',
                                                         'elements'],
                                             selector='tag:attributes:elements:'),
                               actors.Method(body=actors.Expression(text='markup tag: tag attributes: [] elements: elements',
                                                                    inner_map={}),
                                             serial_id=4,
                                             parameters=['tag',
                                                         'elements'],
                                             selector='tag:elements:'),
                               actors.Method(body=actors.Expression(text='if true: (htmlguard passes: object)\r\n   then: make onhtml\r\n   else: (if true: (listguard passes: object)\r\n               then: make onlist\r\n               else: (if true: (stringguard passes: object)\r\n                           then: make onstring\r\n                           else: make onerror))',
                                                                    inner_map={'onerror': L658,
                                                                               'onlist': L659,
                                                                               'onhtml': L660,
                                                                               'onstring': L661}),
                                             serial_id=5,
                                             parameters=['object'],
                                             selector='coerce:')],
                     next_serial_id=6)
L693 = actors.Example(expression=actors.Expression(text='make markup',
                                                   inner_map={'markup': L640}),
                      serial_id=4)
L664 = actors.Script(elements=[actors.Method(body=actors.Expression(text="markup lonetag: 'p'",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='p'),
                               actors.Method(body=actors.Expression(text="markup tag: 'blockquote' elements: elements",
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=['elements'],
                                             selector='blockquote:')],
                     next_serial_id=2)
L695 = actors.Example(expression=actors.Expression(text='make html',
                                                   inner_map={'html': L664}),
                      serial_id=5)
L675 = actors.Script(elements=[actors.Method(body=actors.Expression(text='name htmlescaped + \'="\' +value htmlescaped + \'"\'',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='show'),
                               actors.Text(body='XXX need to html-escape the strings',
                                           serial_id=1)],
                     next_serial_id=2)
L672 = actors.Script(elements=[actors.Method(body=actors.Expression(text='stringguard check: name.\r\nstringguard check: value.\r\nmake attribute',
                                                                    inner_map={'attribute': L675}),
                                             serial_id=0,
                                             parameters=['name',
                                                         'value'],
                                             selector='name:value:')],
                     next_serial_id=1)
L697 = actors.Example(expression=actors.Expression(text='make makeattr',
                                                   inner_map={'makeattr': L672}),
                      serial_id=8)
L681 = actors.Script(elements=[actors.Method(body=actors.Expression(text="' ' + attribute show + string",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['attribute',
                                                         'string'],
                                             selector='left:right:'),
                               actors.Text(body='XXX rename this since it generically applies to html elements',
                                           serial_id=1)],
                     next_serial_id=2)
L699 = actors.Example(expression=actors.Expression(text='make showattr',
                                                   inner_map={'showattr': L681}),
                      serial_id=9)
L701 = actors.Example(expression=actors.Expression(text='html p show',
                                                   inner_map={}),
                      serial_id=12)
L704 = actors.Example(expression=actors.Expression(text='(html blockquote: []) show',
                                                   inner_map={}),
                      serial_id=14)
L707 = actors.Example(expression=actors.Expression(text='(html blockquote: [html p]) show',
                                                   inner_map={}),
                      serial_id=15)
L710 = actors.Example(expression=actors.Expression(text="(html blockquote: ['hello']) show",
                                                   inner_map={}),
                      serial_id=16)
L685 = actors.Script(elements=[L686,
                               L689,
                               L691,
                               L693,
                               L695,
                               L697,
                               L699,
                               L701,
                               L704,
                               L707,
                               L710],
                     next_serial_id=17)
L634 = actors.Actor(env=L635,
                    script=L685)
L688 = actors.ActorEditor(editable=True,
                          actor=L634)
L1591 = envs.Env(parent=L236)
L1589 = actors.Actor(env=envs.Env(parent=L1591),
                     script=L200)
L1588 = actors.ActorEditor(editable=True,
                           actor=L1589)
L932 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                   inner_map={}),
                      serial_id=1)
L935 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                   inner_map={}),
                      serial_id=2)
L939 = actors.Example(expression=actors.Expression(text='make Foo',
                                                   inner_map={'Foo': L354}),
                      serial_id=4)
L942 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                   inner_map={}),
                      serial_id=6)
L944 = actors.Example(expression=actors.Expression(text='box get',
                                                   inner_map={}),
                      serial_id=7)
L946 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                   inner_map={}),
                      serial_id=8)
L948 = actors.Example(expression=actors.Expression(text="['hello']",
                                                   inner_map={}),
                      serial_id=9)
L953 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                   inner_map={}),
                      serial_id=11)
L956 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                   inner_map={}),
                      serial_id=13)
L337 = actors.Example(expression=actors.Expression(text='let gamebox = makebox holding: 0',
                                                   inner_map={}),
                      serial_id=1)
L316 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'Is it a ' + animal + '?'\r\n",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='run'),
                               actors.Method(body=actors.Expression(text="'Thank you!'\r\n",
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='make question',
                                                                    inner_map={'question': L323}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L313 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make guess\r\n',
                                                                    inner_map={'guess': L316}),
                                             serial_id=0,
                                             parameters=['animal',
                                                         'box'],
                                             selector='name:parent:')],
                     next_serial_id=1)
L340 = actors.Example(expression=actors.Expression(text='make makeguess',
                                                   inner_map={'makeguess': L313}),
                      serial_id=2)
L342 = actors.Example(expression=actors.Expression(text="makeguess name: 'dog' parent: gamebox",
                                                   inner_map={}),
                      serial_id=3)
L348 = actors.Example(expression=actors.Expression(text='gamebox get',
                                                   inner_map={}),
                      serial_id=4)
L336 = actors.Script(elements=[L337,
                               L340,
                               L342,
                               L348],
                     next_serial_id=5)
L960 = actors.Example(expression=actors.Expression(text='make animalgame',
                                                   inner_map={'animalgame': L336}),
                      serial_id=16)
L962 = actors.Example(expression=actors.Expression(text='make newanimalgame',
                                                   inner_map={'newanimalgame': L259}),
                      serial_id=17)
L929 = actors.Actor(env=L156,
                    script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                               serial_id=0),
                                                   L932,
                                                   L935,
                                                   actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                               serial_id=3),
                                                   L939,
                                                   actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                               serial_id=5),
                                                   L942,
                                                   L944,
                                                   L946,
                                                   L948,
                                                   actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                               serial_id=10),
                                                   L953,
                                                   actors.Text(body='You can create your own mailbox:',
                                                               serial_id=12),
                                                   L956,
                                                   actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                               serial_id=14),
                                                   actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                               serial_id=15),
                                                   L960,
                                                   L962],
                                         next_serial_id=18))
L928 = actors.ActorEditor(editable=True,
                          actor=L929)
L585 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='trueaction run',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['trueaction',
                                                                                'falseaction'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1598 = actors.ActorEditor(editable=False,
                           actor=L585)
L703 = builtin.String(str='<p>')
L1557 = actors.ActorEditor(editable=False,
                           actor=L703)
L27 = builtin.Boolean(value=True,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='truevalue',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['truevalue',
                                                                               'falsevalue'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L1599 = actors.ActorEditor(editable=False,
                           actor=L27)
L743 = envs.Env(parent=None)
L742 = actors.Actor(env=L743,
                    script=actors.Script(elements=[],
                                         next_serial_id=0))
L741 = actors.ActorEditor(editable=True,
                          actor=L742)
L1310 = builtin.String(str='Is it a cat?')
L1309 = actors.ActorEditor(editable=False,
                           actor=L1310)
L1355 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1357 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L151 = actors.Script(elements=[],
                     next_serial_id=0)
L1361 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L151}),
                       serial_id=4)
L1364 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1366 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1368 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1370 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1375 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1378 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1382 = actors.Example(expression=actors.Expression(text='let tome = mailbox sender',
                                                    inner_map={}),
                       serial_id=16)
L149 = actors.Script(elements=[actors.Text(body='Hi me, how are me?\r\n',
                                           serial_id=0)],
                     next_serial_id=1)
L1384 = actors.Example(expression=actors.Expression(text='tome send: make message',
                                                    inner_map={'message': L149}),
                       serial_id=17)
L1386 = actors.Example(expression=actors.Expression(text='2 * 3',
                                                    inner_map={}),
                       serial_id=18)
L1389 = actors.Example(expression=actors.Expression(text='2 / 0',
                                                    inner_map={}),
                       serial_id=19)
L1391 = actors.Example(expression=actors.Expression(text='let pair = makestamp run',
                                                    inner_map={}),
                       serial_id=20)
L1352 = actors.Actor(env=L107,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1355,
                                                    L1357,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1361,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1364,
                                                    L1366,
                                                    L1368,
                                                    L1370,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1375,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1378,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1382,
                                                    L1384,
                                                    L1386,
                                                    L1389,
                                                    L1391],
                                          next_serial_id=21))
L1351 = actors.ActorEditor(editable=True,
                           actor=L1352)
L1336 = builtin.Number(n=29.0)
L1335 = actors.ActorEditor(editable=False,
                           actor=L1336)
L311 = actors.Actor(env=L312,
                    script=L313)
L1442 = actors.ActorEditor(editable=True,
                           actor=L311)
L300 = envs.Env(parent=L298)
L330 = envs.Env(parent=L300)
L304 = actors.Script(elements=[actors.Method(body=actors.Expression(text='query',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='question'),
                               actors.Method(body=actors.Expression(text='onyes\r\n',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='onno\r\n',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L328 = actors.Actor(env=envs.Env(parent=L330),
                    script=L304)
L327 = builtin.Box(initial_value=L328)
L1296 = actors.ActorEditor(editable=False,
                           actor=L327)
L706 = builtin.String(str='<blockquote></blockquote>')
L1197 = actors.ActorEditor(editable=False,
                           actor=L706)
L519 = builtin.Stamp()
L1558 = actors.ActorEditor(editable=False,
                           actor=L519)
L520 = builtin.StampGuard(stamp=L519)
L1311 = actors.ActorEditor(editable=False,
                           actor=L520)
L77 = builtin.Number(n=5.0)
L76 = actors.ActorEditor(editable=False,
                         actor=L77)
L441 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1493 = actors.ActorEditor(editable=False,
                           actor=L441)
L1319 = builtin.String(str='<p/>')
L1318 = actors.ActorEditor(editable=False,
                           actor=L1319)
L14 = envs.Env(parent=L15)
L71 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'Hello, Alex! How are you?'",
                                                                   inner_map={}),
                                            serial_id=0,
                                            parameters=[],
                                            selector='greet')],
                    next_serial_id=1)
L69 = actors.Actor(env=envs.Env(parent=L14),
                   script=L71)
L738 = actors.ActorEditor(editable=True,
                          actor=L69)
L637 = builtin.Stamp()
L636 = builtin.StampGuard(stamp=L637)
L1403 = actors.ActorEditor(editable=False,
                           actor=L636)
L1453 = builtin.String(str='Thanks, I will remember.')
L1452 = actors.ActorEditor(editable=False,
                           actor=L1453)
L366 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L388 = builtin.Box(initial_value=L366)
L1323 = actors.ActorEditor(editable=False,
                           actor=L388)
L819 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1320 = actors.ActorEditor(editable=False,
                           actor=L819)
L140 = envs.Env(parent=L107)
L138 = actors.Actor(env=envs.Env(parent=L140),
                    script=L131)
L1054 = actors.ActorEditor(editable=True,
                           actor=L138)
L583 = envs.Env(parent=None)
L608 = builtin.MailDirectory(env=envs.Env(parent=L583))
L1488 = actors.ActorEditor(editable=False,
                           actor=L608)
L435 = envs.Env(parent=None)
L477 = builtin.MailDirectory(env=envs.Env(parent=L435))
L1322 = actors.ActorEditor(editable=False,
                           actor=L477)
L251 = envs.Env(parent=L215)
L250 = envs.Env(parent=L251)
L1073 = envs.Env(parent=L250)
L1072 = envs.Env(parent=L1073)
L1071 = actors.Actor(env=L1072,
                     script=L223)
L1070 = actors.ActorEditor(editable=True,
                           actor=L1071)
L775 = builtin.Number(n=5.0)
L1330 = actors.ActorEditor(editable=False,
                           actor=L775)
L115 = builtin.BoxMaker()
L1334 = actors.ActorEditor(editable=False,
                           actor=L115)
L1479 = builtin.String(str='Is it a dog?')
L1478 = actors.ActorEditor(editable=False,
                           actor=L1479)
L344 = actors.Actor(env=L345,
                    script=L316)
L516 = actors.ActorEditor(editable=True,
                          actor=L344)
L890 = builtin.Box(initial_value=builtin.List(elements=()))
L1313 = actors.ActorEditor(editable=False,
                           actor=L890)
L365 = envs.Env(parent=None)
L364 = envs.Env(parent=L365)
L402 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L405 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L363 = actors.Actor(env=L364,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L402,
                                                                                                   'mailbox': L405}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L362 = actors.ActorEditor(editable=True,
                          actor=L363)
L81 = builtin.List(elements=(builtin.String(str='hello'),))
L80 = actors.ActorEditor(editable=False,
                         actor=L81)
L1079 = builtin.String(str='hello')
L1272 = actors.ActorEditor(editable=False,
                           actor=L1079)
L1348 = envs.Env(parent=L256)
L1346 = actors.Actor(env=envs.Env(parent=L1348),
                     script=L223)
L1345 = actors.ActorEditor(editable=True,
                           actor=L1346)
L1011 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1014 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1017 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L71}),
                       serial_id=4)
L1020 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1022 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1024 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1026 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1029 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1032 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1036 = actors.Example(expression=actors.Expression(text="'hello alex' size",
                                                    inner_map={}),
                       serial_id=16)
L1038 = actors.Example(expression=actors.Expression(text="'hello alex' length",
                                                    inner_map={}),
                       serial_id=17)
L1040 = actors.Example(expression=actors.Expression(text='let sender = mailbox sender',
                                                    inner_map={}),
                       serial_id=18)
L67 = actors.Script(elements=[actors.Text(body='Hi, there.  ',
                                          serial_id=0)],
                    next_serial_id=1)
L1042 = actors.Example(expression=actors.Expression(text='sender send: make message',
                                                    inner_map={'message': L67}),
                       serial_id=19)
L60 = actors.Script(elements=[actors.Method(body=actors.Expression(text='votesformcdonalds <- (votesformcdonalds get + 1)',
                                                                   inner_map={}),
                                            serial_id=0,
                                            parameters=[],
                                            selector='votemcdonalds')],
                    next_serial_id=1)
L57 = actors.Script(elements=[actors.Method(body=actors.Expression(text='let votesformcdonalds = makebox holding: 0.\r\nmake ballot',
                                                                   inner_map={'ballot': L60}),
                                            serial_id=0,
                                            parameters=[],
                                            selector='run')],
                    next_serial_id=1)
L1044 = actors.Example(expression=actors.Expression(text='make makeballot',
                                                    inner_map={'makeballot': L57}),
                       serial_id=20)
L1008 = actors.Actor(env=L14,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1011,
                                                    L1014,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1017,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1020,
                                                    L1022,
                                                    L1024,
                                                    L1026,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1029,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1032,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1036,
                                                    L1038,
                                                    L1040,
                                                    L1042,
                                                    L1044],
                                          next_serial_id=21))
L1007 = actors.ActorEditor(editable=True,
                           actor=L1008)
L1273 = actors.ActorEditor(editable=True,
                           actor=L328)
L502 = builtin.List(elements=(builtin.String(str='hello'),))
L1300 = actors.ActorEditor(editable=False,
                           actor=L502)
L1303 = builtin.Number(n=5.0)
L1302 = actors.ActorEditor(editable=False,
                           actor=L1303)
L538 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L894 = actors.ActorEditor(editable=False,
                          actor=L538)
L622 = envs.Env(parent=L623)
L719 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L620 = actors.Actor(env=envs.Env(parent=L622),
                    script=L719)
L619 = actors.ActorEditor(editable=True,
                          actor=L620)
L523 = actors.Actor(env=envs.Env(parent=L525),
                    script=L573)
L522 = actors.ActorEditor(editable=True,
                          actor=L523)
L582 = envs.Env(parent=L583)
L612 = envs.Env(parent=L582)
L601 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L610 = actors.Actor(env=envs.Env(parent=L612),
                    script=L601)
L1499 = actors.ActorEditor(editable=True,
                           actor=L610)
L192 = actors.Actor(env=L193,
                    script=L194)
L1063 = actors.ActorEditor(editable=True,
                           actor=L192)
L98 = builtin.Boolean(value=False,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='falseaction run',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['trueaction',
                                                                               'falseaction'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L97 = builtin.Box(initial_value=L98)
L96 = actors.ActorEditor(editable=False,
                         actor=L97)
L778 = builtin.Number(n=25.0)
L1522 = actors.ActorEditor(editable=False,
                           actor=L778)
L571 = builtin.MailDirectory(env=envs.Env(parent=L526))
L1600 = actors.ActorEditor(editable=False,
                           actor=L571)
L147 = actors.Actor(env=envs.Env(parent=L107),
                    script=L149)
L1075 = actors.ActorEditor(editable=True,
                           actor=L147)
L514 = actors.Actor(env=L435,
                    script=actors.Script(elements=[],
                                         next_serial_id=0))
L1316 = actors.ActorEditor(editable=True,
                           actor=L514)
L55 = actors.Actor(env=envs.Env(parent=L14),
                   script=L57)
L1448 = actors.ActorEditor(editable=True,
                           actor=L55)
L761 = builtin.Number(n=42.0)
L760 = builtin.Box(initial_value=L761)
L759 = actors.ActorEditor(editable=False,
                          actor=L760)
L1466 = actors.ActorEditor(editable=False,
                           actor=L98)
L1594 = builtin.String(str='Is it a dog?')
L1593 = actors.ActorEditor(editable=False,
                           actor=L1594)
L971 = builtin.Number(n=5.0)
L1067 = actors.ActorEditor(editable=False,
                           actor=L971)
L239 = actors.Actor(env=L240,
                    script=L197)
L238 = builtin.Box(initial_value=L239)
L359 = actors.ActorEditor(editable=False,
                          actor=L238)
L258 = builtin.String(str='dog')
L1465 = actors.ActorEditor(editable=False,
                           actor=L258)
L728 = actors.StampedActor(stamp=L519,
                           actor=builtin.String(str='hello'))
L1519 = actors.ActorEditor(editable=False,
                           actor=L728)
L426 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L452 = builtin.Box(initial_value=L426)
L1457 = actors.ActorEditor(editable=False,
                           actor=L452)
L1470 = builtin.String(str='hello world!')
L1469 = actors.ActorEditor(editable=False,
                           actor=L1470)
L679 = actors.Actor(env=envs.Env(parent=L635),
                    script=L681)
L1451 = actors.ActorEditor(editable=True,
                           actor=L679)
L91 = builtin.String(str='Is it a dog?')
L90 = actors.ActorEditor(editable=False,
                         actor=L91)
L65 = actors.Actor(env=envs.Env(parent=L14),
                   script=L67)
L74 = builtin.Box(initial_value=builtin.List(elements=(L65,)))
L1592 = actors.ActorEditor(editable=False,
                           actor=L74)
L910 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L924 = actors.Actor(env=envs.Env(parent=L900),
                    script=L910)
L1462 = actors.ActorEditor(editable=True,
                           actor=L924)
L13 = envs.Env(parent=L14)
L48 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                   inner_map={}),
                                            serial_id=0,
                                            parameters=[],
                                            selector='first'),
                              actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                   inner_map={}),
                                            serial_id=1,
                                            parameters=[],
                                            selector='removefirst'),
                              actors.Method(body=actors.Expression(text='sender',
                                                                   inner_map={}),
                                            serial_id=2,
                                            parameters=[],
                                            selector='sender')],
                    next_serial_id=3)
L11 = actors.Actor(env=envs.Env(parent=L13),
                   script=L48)
L10 = actors.ActorEditor(editable=True,
                         actor=L11)
L434 = envs.Env(parent=L435)
L484 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                   inner_map={}),
                      serial_id=1)
L487 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                   inner_map={}),
                      serial_id=2)
L481 = actors.Script(elements=[],
                     next_serial_id=0)
L491 = actors.Example(expression=actors.Expression(text='make Foo',
                                                   inner_map={'Foo': L481}),
                      serial_id=4)
L494 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                   inner_map={}),
                      serial_id=6)
L496 = actors.Example(expression=actors.Expression(text='box get',
                                                   inner_map={}),
                      serial_id=7)
L498 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                   inner_map={}),
                      serial_id=8)
L500 = actors.Example(expression=actors.Expression(text="['hello']",
                                                   inner_map={}),
                      serial_id=9)
L505 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                   inner_map={}),
                      serial_id=11)
L508 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                   inner_map={}),
                      serial_id=13)
L474 = actors.Script(elements=[],
                     next_serial_id=0)
L512 = actors.Example(expression=actors.Expression(text='mailbox sender send: make message',
                                                   inner_map={'message': L474}),
                      serial_id=16)
L433 = actors.Actor(env=L434,
                    script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                               serial_id=0),
                                                   L484,
                                                   L487,
                                                   actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                               serial_id=3),
                                                   L491,
                                                   actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                               serial_id=5),
                                                   L494,
                                                   L496,
                                                   L498,
                                                   L500,
                                                   actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                               serial_id=10),
                                                   L505,
                                                   actors.Text(body='You can create your own mailbox:',
                                                               serial_id=12),
                                                   L508,
                                                   actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                               serial_id=14),
                                                   actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                               serial_id=15),
                                                   L512],
                                         next_serial_id=17))
L432 = actors.ActorEditor(editable=True,
                          actor=L433)
L421 = actors.Script(elements=[],
                     next_serial_id=0)
L419 = actors.Actor(env=envs.Env(parent=L364),
                    script=L421)
L1443 = actors.ActorEditor(editable=True,
                           actor=L419)
L889 = envs.Env(parent=L434)
L460 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L892 = actors.Actor(env=envs.Env(parent=L889),
                    script=L460)
L1406 = actors.ActorEditor(editable=True,
                           actor=L892)
L1271 = builtin.Number(n=5.0)
L1270 = actors.ActorEditor(editable=False,
                           actor=L1271)
L1203 = envs.Env(parent=None)
L1202 = envs.Env(parent=L1203)
L1201 = actors.Actor(env=L1202,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    actors.Example(expression=actors.Expression(text='2 + 3',
                                                                                                inner_map={}),
                                                                   serial_id=1),
                                                    actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                                                                inner_map={}),
                                                                   serial_id=2),
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    actors.Example(expression=actors.Expression(text='make Foo',
                                                                                                inner_map={}),
                                                                   serial_id=4),
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                                                                inner_map={}),
                                                                   serial_id=6),
                                                    actors.Example(expression=actors.Expression(text='box get',
                                                                                                inner_map={}),
                                                                   serial_id=7),
                                                    actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                                                                inner_map={}),
                                                                   serial_id=8),
                                                    actors.Example(expression=actors.Expression(text="['hello']",
                                                                                                inner_map={}),
                                                                   serial_id=9),
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    actors.Example(expression=actors.Expression(text='maildirectory',
                                                                                                inner_map={}),
                                                                   serial_id=11),
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                                                                inner_map={}),
                                                                   serial_id=13),
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15)],
                                          next_serial_id=16))
L1200 = actors.ActorEditor(editable=True,
                           actor=L1201)
L425 = actors.ActorEditor(editable=False,
                          actor=L426)
L1343 = actors.ActorEditor(editable=False,
                           actor=L761)
L252 = builtin.String(str='cat')
L1274 = actors.ActorEditor(editable=False,
                           actor=L252)
L632 = builtin.BoxMaker()
L1482 = actors.ActorEditor(editable=False,
                           actor=L632)
L662 = actors.Actor(env=envs.Env(parent=L635),
                    script=L664)
L1117 = actors.ActorEditor(editable=True,
                           actor=L662)
L1524 = actors.ActorEditor(editable=False,
                           actor=L366)
L116 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falseaction run',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['trueaction',
                                                                                'falseaction'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1450 = actors.ActorEditor(editable=False,
                           actor=L116)
L1388 = builtin.Number(n=6.0)
L1475 = actors.ActorEditor(editable=False,
                           actor=L1388)
L417 = builtin.MailDirectory(env=envs.Env(parent=L365))
L1324 = actors.ActorEditor(editable=False,
                           actor=L417)
L884 = builtin.Number(n=25.0)
L883 = actors.ActorEditor(editable=False,
                          actor=L884)
L669 = builtin.List(elements=(L637,
                              L636))
L1447 = actors.ActorEditor(editable=False,
                           actor=L669)
L537 = builtin.BoxMaker()
L1186 = actors.ActorEditor(editable=False,
                           actor=L537)
L591 = builtin.BoxMaker()
L1523 = actors.ActorEditor(editable=False,
                           actor=L591)
L287 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L290 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L283 = actors.Actor(env=L156,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L287,
                                                                                                   'mailbox': L290}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1595 = actors.ActorEditor(editable=True,
                           actor=L283)
L275 = envs.Env(parent=L256)
L274 = envs.Env(parent=L275)
L1053 = envs.Env(parent=L274)
L1051 = actors.Actor(env=envs.Env(parent=L1053),
                     script=L230)
L1050 = actors.ActorEditor(editable=True,
                           actor=L1051)
L187 = actors.Actor(env=envs.Env(parent=L181),
                    script=L189)
L885 = actors.ActorEditor(editable=True,
                          actor=L187)
L1013 = builtin.Number(n=5.0)
L1268 = actors.ActorEditor(editable=False,
                           actor=L1013)
L858 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L902 = builtin.Box(initial_value=L858)
L1114 = actors.ActorEditor(editable=False,
                           actor=L902)
L1195 = actors.ActorEditor(editable=False,
                           actor=L637)
L835 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L838 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L831 = actors.Actor(env=L807,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L835,
                                                                                                   'mailbox': L838}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1587 = actors.ActorEditor(editable=True,
                           actor=L831)
L414 = actors.Script(elements=[actors.Method(body=actors.Expression(text='let ballotbox = makebox holding: 0',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='run')],
                     next_serial_id=1)
L412 = actors.Actor(env=envs.Env(parent=L364),
                    script=L414)
L766 = actors.ActorEditor(editable=True,
                          actor=L412)
L1275 = actors.ActorEditor(editable=True,
                           actor=L65)
L1502 = envs.Env(parent=None)
L1501 = actors.Actor(env=L1502,
                     script=actors.Script(elements=[],
                                          next_serial_id=0))
L1500 = actors.ActorEditor(editable=True,
                           actor=L1501)
L1399 = builtin.Number(n=7.0)
L1398 = actors.ActorEditor(editable=False,
                           actor=L1399)
L376 = builtin.BoxMaker()
L576 = actors.ActorEditor(editable=False,
                          actor=L376)
L1396 = builtin.String(str='<p>')
L1395 = actors.ActorEditor(editable=False,
                           actor=L1396)
L950 = builtin.List(elements=(builtin.String(str='hello'),))
L1496 = actors.ActorEditor(editable=False,
                           actor=L950)
L809 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1297 = actors.ActorEditor(editable=False,
                           actor=L809)
L347 = builtin.String(str='dog')
L1301 = actors.ActorEditor(editable=False,
                           actor=L347)
L158 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L577 = actors.ActorEditor(editable=False,
                          actor=L158)
L440 = builtin.BoxMaker()
L1477 = actors.ActorEditor(editable=False,
                           actor=L440)
L716 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L712 = actors.Actor(env=L623,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L716,
                                                                                                   'mailbox': L719}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1476 = actors.ActorEditor(editable=True,
                           actor=L712)
L848 = builtin.MailDirectory(env=envs.Env(parent=L808))
L1337 = actors.ActorEditor(editable=False,
                           actor=L848)
L105 = actors.Actor(env=envs.Env(parent=L107),
                    script=L151)
L104 = actors.ActorEditor(editable=True,
                          actor=L105)
L457 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L453 = actors.Actor(env=L434,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L457,
                                                                                                   'mailbox': L460}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1332 = actors.ActorEditor(editable=True,
                           actor=L453)
L79 = builtin.Number(n=25.0)
L78 = actors.ActorEditor(editable=False,
                         actor=L79)
L1315 = builtin.Number(n=0.0)
L1314 = actors.ActorEditor(editable=False,
                           actor=L1315)
L141 = actors.Actor(env=envs.Env(parent=L140),
                    script=L128)
L882 = actors.ActorEditor(editable=True,
                          actor=L141)
L1563 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1565 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1568 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L919}),
                       serial_id=4)
L1571 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1573 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1575 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1577 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1580 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1583 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1560 = actors.Actor(env=L901,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1563,
                                                    L1565,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1568,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1571,
                                                    L1573,
                                                    L1575,
                                                    L1577,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1580,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1583,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15)],
                                          next_serial_id=16))
L1559 = actors.ActorEditor(editable=True,
                           actor=L1560)
L575 = builtin.String(str='Hello, Alex!')
L574 = actors.ActorEditor(editable=False,
                          actor=L575)
L1455 = builtin.Number(n=5.0)
L1454 = actors.ActorEditor(editable=False,
                           actor=L1455)
L391 = envs.Env(parent=L364)
L389 = actors.Actor(env=envs.Env(parent=L391),
                    script=L405)
L1402 = actors.ActorEditor(editable=True,
                           actor=L389)
L1359 = builtin.Number(n=25.0)
L1494 = actors.ActorEditor(editable=False,
                           actor=L1359)
L830 = builtin.Box(initial_value=L809)
L1299 = actors.ActorEditor(editable=False,
                           actor=L830)
L922 = builtin.Number(n=120.0)
L1446 = actors.ActorEditor(editable=False,
                           actor=L922)
L123 = builtin.Box(initial_value=L116)
L1062 = actors.ActorEditor(editable=False,
                           actor=L123)
L469 = envs.Env(parent=L434)
L467 = actors.Actor(env=envs.Env(parent=L469),
                    script=L460)
L1397 = actors.ActorEditor(editable=True,
                           actor=L467)
L763 = builtin.List(elements=(builtin.String(str='hello'),))
L762 = actors.ActorEditor(editable=False,
                          actor=L763)
L999 = actors.Actor(env=L365,
                    script=actors.Script(elements=[],
                                         next_serial_id=0))
L1317 = actors.ActorEditor(editable=True,
                           actor=L999)
L1464 = builtin.Number(n=0)
L1463 = actors.ActorEditor(editable=False,
                           actor=L1464)
L1440 = actors.ActorEditor(editable=True,
                           actor=L255)
L791 = builtin.List(elements=(builtin.String(str='hello'),))
L1066 = actors.ActorEditor(editable=False,
                           actor=L791)
L1078 = builtin.List(elements=(L1079,))
L1077 = actors.ActorEditor(editable=False,
                           actor=L1078)
L617 = actors.Script(elements=[],
                     next_serial_id=0)
L580 = actors.Actor(env=envs.Env(parent=L582),
                    script=L617)
L579 = actors.ActorEditor(editable=True,
                          actor=L580)
L95 = builtin.BoxMaker()
L94 = actors.ActorEditor(editable=False,
                         actor=L95)
L214 = actors.Actor(env=L215,
                    script=L216)
L1269 = actors.ActorEditor(editable=True,
                           actor=L214)
L1490 = builtin.String(str='Thank you!')
L1489 = actors.ActorEditor(editable=False,
                           actor=L1490)
L1049 = actors.Script(elements=[],
                      next_serial_id=0)
L1047 = actors.Actor(env=envs.Env(parent=L635),
                     script=L1049)
L1046 = actors.ActorEditor(editable=True,
                           actor=L1047)
L280 = envs.Env(parent=L236)
L278 = actors.Actor(env=envs.Env(parent=L280),
                    script=L200)
L1327 = actors.ActorEditor(editable=True,
                           actor=L278)
L1307 = envs.Env(parent=L345)
L1305 = actors.Actor(env=envs.Env(parent=L1307),
                     script=L323)
L1304 = actors.ActorEditor(editable=True,
                           actor=L1305)
L297 = actors.Actor(env=L298,
                    script=L336)
L339 = actors.ActorEditor(editable=True,
                          actor=L297)
L1441 = actors.ActorEditor(editable=False,
                           actor=L858)
L93 = builtin.String(str='Thanks, I will remember.')
L92 = actors.ActorEditor(editable=False,
                         actor=L93)
L249 = actors.Actor(env=L250,
                    script=L220)
L1065 = actors.ActorEditor(editable=True,
                           actor=L249)
L598 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L594 = actors.Actor(env=L582,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L598,
                                                                                                   'mailbox': L601}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1344 = actors.ActorEditor(editable=True,
                           actor=L594)
L633 = builtin.TypeGuard(sample_instance=())
L1596 = actors.ActorEditor(editable=False,
                           actor=L633)
L1199 = builtin.String(str='hello world!hello world!')
L1198 = actors.ActorEditor(editable=False,
                           actor=L1199)
L334 = envs.Env(parent=L312)
L333 = envs.Env(parent=L334)
L1193 = envs.Env(parent=L333)
L1191 = actors.Actor(env=envs.Env(parent=L1193),
                     script=L323)
L1190 = actors.ActorEditor(editable=True,
                           actor=L1191)
L273 = actors.Actor(env=L274,
                    script=L223)
L1467 = actors.ActorEditor(editable=True,
                           actor=L273)
L63 = builtin.MailDirectory(env=envs.Env(parent=L15))
L1064 = actors.ActorEditor(editable=False,
                           actor=L63)
L41 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                   inner_map={}),
                                            serial_id=0,
                                            parameters=['message'],
                                            selector='send:')],
                    next_serial_id=1)
L44 = actors.Actor(env=L14,
                   script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                       inner_map={'sender': L41,
                                                                                                  'mailbox': L48}),
                                                                serial_id=0,
                                                                parameters=[],
                                                                selector='run')],
                                        next_serial_id=1))
L1495 = actors.ActorEditor(editable=True,
                           actor=L44)
L479 = actors.Actor(env=envs.Env(parent=L434),
                    script=L481)
L1492 = actors.ActorEditor(editable=True,
                           actor=L479)
L969 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                   inner_map={}),
                      serial_id=1)
L972 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                   inner_map={}),
                      serial_id=2)
L976 = actors.Example(expression=actors.Expression(text='make Foo',
                                                   inner_map={'Foo': L421}),
                      serial_id=4)
L979 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                   inner_map={}),
                      serial_id=6)
L981 = actors.Example(expression=actors.Expression(text='box get',
                                                   inner_map={}),
                      serial_id=7)
L983 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                   inner_map={}),
                      serial_id=8)
L985 = actors.Example(expression=actors.Expression(text="['hello']",
                                                   inner_map={}),
                      serial_id=9)
L990 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                   inner_map={}),
                      serial_id=11)
L993 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                   inner_map={}),
                      serial_id=13)
L396 = actors.Script(elements=[actors.Text(body='Hi - time to vote on where to go out for lunch.  Pick a method for the restaurant you like and click it.',
                                           serial_id=0),
                               actors.Method(body=actors.Expression(text='',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='voteforstarbucks')],
                     next_serial_id=2)
L997 = actors.Example(expression=actors.Expression(text='mailbox sender send: make message',
                                                   inner_map={'message': L396}),
                      serial_id=16)
L1001 = actors.Example(expression=actors.Expression(text='makek makeballot',
                                                    inner_map={}),
                       serial_id=17)
L1003 = actors.Example(expression=actors.Expression(text='make makeballot',
                                                    inner_map={'makeballot': L414}),
                       serial_id=18)
L966 = actors.Actor(env=L364,
                    script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                               serial_id=0),
                                                   L969,
                                                   L972,
                                                   actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                               serial_id=3),
                                                   L976,
                                                   actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                               serial_id=5),
                                                   L979,
                                                   L981,
                                                   L983,
                                                   L985,
                                                   actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                               serial_id=10),
                                                   L990,
                                                   actors.Text(body='You can create your own mailbox:',
                                                               serial_id=12),
                                                   L993,
                                                   actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                               serial_id=14),
                                                   actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                               serial_id=15),
                                                   L997,
                                                   L1001,
                                                   L1003],
                                         next_serial_id=19))
L965 = actors.ActorEditor(editable=True,
                          actor=L966)
L155 = envs.Env(parent=L156)
L153 = actors.Actor(env=envs.Env(parent=L155),
                    script=L290)
L152 = actors.ActorEditor(editable=True,
                          actor=L153)
L625 = builtin.StampMaker()
L1521 = actors.ActorEditor(editable=False,
                           actor=L625)
L109 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='trueaction run',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['trueaction',
                                                                                'falseaction'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1331 = actors.ActorEditor(editable=False,
                           actor=L109)
L87 = builtin.String(str='OK!')
L86 = actors.ActorEditor(editable=False,
                         actor=L87)
L670 = actors.Actor(env=envs.Env(parent=L635),
                    script=L672)
L1350 = actors.ActorEditor(editable=True,
                           actor=L670)
L1498 = builtin.String(str='Is it a cat?')
L1497 = actors.ActorEditor(editable=False,
                           actor=L1498)
L377 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1321 = actors.ActorEditor(editable=False,
                           actor=L377)
L2 = builtin.Number(n=6.0)
L1 = actors.ActorEditor(editable=False,
                        actor=L2)
L1405 = builtin.Number(n=25.0)
L1404 = actors.ActorEditor(editable=False,
                           actor=L1405)
L934 = builtin.Number(n=5.0)
L1326 = actors.ActorEditor(editable=False,
                           actor=L934)
L554 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L557 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L550 = actors.Actor(env=L525,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L554,
                                                                                                   'mailbox': L557}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1394 = actors.ActorEditor(editable=True,
                           actor=L550)
L335 = builtin.String(str='cat')
L1471 = actors.ActorEditor(editable=False,
                           actor=L335)
L1058 = envs.Env(parent=L300)
L1061 = actors.Script(elements=[],
                      next_serial_id=0)
L1056 = actors.Actor(env=envs.Env(parent=L1058),
                     script=L1061)
L1055 = actors.ActorEditor(editable=True,
                           actor=L1056)
L332 = actors.Actor(env=L333,
                    script=L316)
L765 = actors.ActorEditor(editable=True,
                          actor=L332)
L903 = actors.Actor(env=L901,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L907,
                                                                                                   'mailbox': L910}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1277 = actors.ActorEditor(editable=True,
                           actor=L903)
L1529 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1531 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1534 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L847}),
                       serial_id=4)
L1537 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1539 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1541 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1543 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1546 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1549 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1553 = actors.Example(expression=actors.Expression(text='http://localhost:8080/id/5186614581370432354',
                                                    inner_map={}),
                       serial_id=16)
L1555 = actors.Example(expression=actors.Expression(text='8 * 5',
                                                    inner_map={}),
                       serial_id=17)
L1526 = actors.Actor(env=L807,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1529,
                                                    L1531,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1534,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1537,
                                                    L1539,
                                                    L1541,
                                                    L1543,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1546,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1549,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1553,
                                                    L1555],
                                          next_serial_id=18))
L1525 = actors.ActorEditor(editable=True,
                           actor=L1526)
L1276 = actors.ActorEditor(editable=False,
                           actor=L527)
L1088 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1090 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L732 = actors.Script(elements=[],
                     next_serial_id=0)
L1093 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L732}),
                       serial_id=4)
L1096 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1098 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1100 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1102 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1105 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1108 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1112 = actors.Example(expression=actors.Expression(text='make htmlmodule',
                                                    inner_map={'htmlmodule': L685}),
                       serial_id=25)
L1085 = actors.Actor(env=L623,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1088,
                                                    L1090,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1093,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1096,
                                                    L1098,
                                                    L1100,
                                                    L1102,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1105,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1108,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1112],
                                          next_serial_id=26))
L1084 = actors.ActorEditor(editable=True,
                           actor=L1085)
L26 = builtin.BoxMaker()
L895 = actors.ActorEditor(editable=False,
                          actor=L26)
L489 = builtin.Number(n=25.0)
L737 = actors.ActorEditor(editable=False,
                          actor=L489)
L518 = builtin.List(elements=(L519,
                              L520))
L517 = actors.ActorEditor(editable=False,
                          actor=L518)
L987 = builtin.List(elements=(builtin.String(str='hello'),))
L1308 = actors.ActorEditor(editable=False,
                           actor=L987)
L584 = builtin.StampMaker()
L618 = actors.ActorEditor(editable=False,
                          actor=L584)
L1411 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1413 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1417 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L617}),
                       serial_id=4)
L1420 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1422 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1424 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1426 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1431 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1434 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1438 = actors.Example(expression=actors.Expression(text='let pair = makestamp run',
                                                    inner_map={}),
                       serial_id=16)
L1408 = actors.Actor(env=L582,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1411,
                                                    L1413,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1417,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1420,
                                                    L1422,
                                                    L1424,
                                                    L1426,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1431,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1434,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1438],
                                          next_serial_id=17))
L1407 = actors.ActorEditor(editable=True,
                           actor=L1408)
L1445 = builtin.Number(n=40.0)
L1444 = actors.ActorEditor(editable=False,
                           actor=L1445)
L39 = actors.Actor(env=envs.Env(parent=L13),
                   script=L41)
L1329 = actors.ActorEditor(editable=True,
                           actor=L39)
L1076 = actors.ActorEditor(editable=False,
                           actor=L16)
L182 = actors.Actor(env=envs.Env(parent=L181),
                    script=L184)
L1187 = actors.ActorEditor(editable=True,
                           actor=L182)
L887 = actors.Actor(env=envs.Env(parent=L889),
                    script=L457)
L886 = actors.ActorEditor(editable=True,
                          actor=L887)
L881 = builtin.Number(n=5.0)
L880 = actors.ActorEditor(editable=False,
                          actor=L881)
L331 = builtin.String(str='Does it meow?')
L1393 = actors.ActorEditor(editable=False,
                           actor=L331)
L143 = builtin.Box(initial_value=builtin.List(elements=()))
L1491 = actors.ActorEditor(editable=False,
                           actor=L143)
L730 = actors.Actor(env=envs.Env(parent=L623),
                    script=L732)
L1401 = actors.ActorEditor(editable=True,
                           actor=L730)
L301 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make yesnoquestion\r\n',
                                                                    inner_map={'yesnoquestion': L304}),
                                             serial_id=2,
                                             parameters=['query',
                                                         'onyes',
                                                         'onno'],
                                             selector='asking:ifyes:ifno:')],
                     next_serial_id=3)
L299 = actors.Actor(env=L300,
                    script=L301)
L1333 = actors.ActorEditor(editable=True,
                           actor=L299)
L638 = actors.Actor(env=envs.Env(parent=L635),
                    script=L640)
L1473 = actors.ActorEditor(editable=True,
                           actor=L638)
L806 = envs.Env(parent=L807)
L804 = actors.Actor(env=envs.Env(parent=L806),
                    script=L838)
L803 = actors.ActorEditor(editable=True,
                          actor=L804)
L566 = envs.Env(parent=L525)
L564 = actors.Actor(env=envs.Env(parent=L566),
                    script=L557)
L578 = actors.ActorEditor(editable=True,
                          actor=L564)
L1487 = envs.Env(parent=L1072)
L1485 = actors.Actor(env=envs.Env(parent=L1487),
                     script=L230)
L1484 = actors.ActorEditor(editable=True,
                           actor=L1485)
L855 = builtin.MailDirectory(env=envs.Env(parent=L857))
L854 = actors.ActorEditor(editable=False,
                          actor=L855)
L350 = builtin.MailDirectory(env=envs.Env(parent=L157))
L1312 = actors.ActorEditor(editable=False,
                           actor=L350)
L1189 = builtin.String(str='Is it a dog?')
L1188 = actors.ActorEditor(editable=False,
                           actor=L1189)
L179 = builtin.Box(initial_value=L158)
L1456 = actors.ActorEditor(editable=False,
                           actor=L179)
L1481 = builtin.String(str='Is it a dog?')
L1480 = actors.ActorEditor(editable=False,
                           actor=L1481)
L1372 = builtin.List(elements=(builtin.String(str='hello'),))
L1458 = actors.ActorEditor(editable=False,
                           actor=L1372)
L0 = registry.HmphSystem(editor_of_actor={L1069: L1068,
                                          L709: L1349,
                                          L584: L618,
                                          L234: L896,
                                          L999: L1317,
                                          L361: L360,
                                          L1352: L1351,
                                          L1310: L1309,
                                          L69: L738,
                                          L1470: L1469,
                                          L4: L3,
                                          L38: L1006,
                                          L917: L923,
                                          L845: L1342,
                                          L1479: L1478,
                                          L1460: L1459,
                                          L1199: L1198,
                                          L636: L1403,
                                          L84: L83,
                                          L147: L1075,
                                          L158: L577,
                                          L1428: L1483,
                                          L898: L897,
                                          L335: L1471,
                                          L1189: L1188,
                                          L594: L1344,
                                          L538: L894,
                                          L187: L885,
                                          L1051: L1050,
                                          L626: L1005,
                                          L726: L1194,
                                          L105: L104,
                                          L974: L1116,
                                          L1047: L1046,
                                          L1081: L1080,
                                          L1119: L1118,
                                          L87: L86,
                                          L440: L1477,
                                          L929: L928,
                                          L1396: L1395,
                                          L742: L741,
                                          L890: L1313,
                                          L1501: L1500,
                                          L419: L1443,
                                          L1455: L1454,
                                          L347: L1301,
                                          L79: L78,
                                          L327: L1296,
                                          L620: L619,
                                          L26: L895,
                                          L926: L1449,
                                          L1319: L1318,
                                          L477: L1322,
                                          L63: L1064,
                                          L388: L1323,
                                          L868: L1074,
                                          L433: L432,
                                          L1415: L1468,
                                          L1078: L1077,
                                          L575: L574,
                                          L903: L1277,
                                          L1589: L1588,
                                          L278: L1327,
                                          L1191: L1190,
                                          L855: L854,
                                          L254: L1472,
                                          L97: L96,
                                          L1079: L1272,
                                          L564: L578,
                                          L1008: L1007,
                                          L858: L1441,
                                          L1056: L1055,
                                          L182: L1187,
                                          L706: L1197,
                                          L523: L522,
                                          L247: L521,
                                          L502: L1300,
                                          L881: L880,
                                          L571: L1600,
                                          L1339: L1338,
                                          L214: L1269,
                                          L730: L1401,
                                          L55: L1448,
                                          L760: L759,
                                          L809: L1297,
                                          L65: L1275,
                                          L1303: L1302,
                                          L740: L739,
                                          L258: L1465,
                                          L728: L1519,
                                          L452: L1457,
                                          L91: L90,
                                          L74: L1592,
                                          L924: L1462,
                                          L98: L1466,
                                          L352: L1400,
                                          L892: L1406,
                                          L1271: L1270,
                                          L1201: L1200,
                                          L608: L1488,
                                          L761: L1343,
                                          L441: L1493,
                                          L252: L1274,
                                          L632: L1482,
                                          L662: L1117,
                                          L1359: L1494,
                                          L1388: L1475,
                                          L1315: L1314,
                                          L869: L1597,
                                          L1453: L1452,
                                          L537: L1186,
                                          L804: L803,
                                          L633: L1596,
                                          L937: L1298,
                                          L770: L769,
                                          L1013: L1268,
                                          L819: L1320,
                                          L637: L1195,
                                          L831: L1587,
                                          L93: L92,
                                          L412: L766,
                                          L77: L76,
                                          L703: L1557,
                                          L376: L576,
                                          L778: L1522,
                                          L1594: L1593,
                                          L971: L1067,
                                          L426: L425,
                                          L145: L1196,
                                          L950: L1496,
                                          L712: L1476,
                                          L1485: L1484,
                                          L679: L1451,
                                          L453: L1332,
                                          L238: L359,
                                          L389: L1402,
                                          L168: L1328,
                                          L366: L1524,
                                          L253: L964,
                                          L1445: L1444,
                                          L768: L767,
                                          L1560: L1559,
                                          L830: L1299,
                                          L116: L1450,
                                          L123: L1062,
                                          L1399: L1398,
                                          L763: L762,
                                          L141: L882,
                                          L1085: L1084,
                                          L591: L1523,
                                          L255: L1440,
                                          L580: L579,
                                          L791: L1066,
                                          L775: L1330,
                                          L486: L1325,
                                          L16: L1076,
                                          L124: L1115,
                                          L95: L94,
                                          L514: L1316,
                                          L934: L1326,
                                          L519: L1558,
                                          L27: L1599,
                                          L1305: L1304,
                                          L1408: L1407,
                                          L902: L1114,
                                          L669: L1447,
                                          L138: L1054,
                                          L249: L1065,
                                          L922: L1446,
                                          L1279: L1278,
                                          L332: L765,
                                          L273: L1467,
                                          L966: L965,
                                          L593: L1474,
                                          L44: L1495,
                                          L417: L1324,
                                          L479: L1492,
                                          L1346: L1345,
                                          L11: L10,
                                          L625: L1521,
                                          L109: L1331,
                                          L585: L1598,
                                          L670: L1350,
                                          L1498: L1497,
                                          L377: L1321,
                                          L89: L88,
                                          L1405: L1404,
                                          L848: L1337,
                                          L467: L1397,
                                          L363: L362,
                                          L884: L883,
                                          L634: L688,
                                          L1071: L1070,
                                          L1526: L1525,
                                          L283: L1595,
                                          L115: L1334,
                                          L81: L80,
                                          L527: L1276,
                                          L489: L737,
                                          L520: L1311,
                                          L311: L1442,
                                          L2: L1,
                                          L192: L1063,
                                          L180: L262,
                                          L297: L339,
                                          L549: L1520,
                                          L39: L1329,
                                          L1336: L1335,
                                          L344: L516,
                                          L1464: L1463,
                                          L887: L886,
                                          L299: L1333,
                                          L610: L1499,
                                          L331: L1393,
                                          L143: L1491,
                                          L518: L517,
                                          L550: L1394,
                                          L638: L1473,
                                          L153: L152,
                                          L328: L1273,
                                          L1490: L1489,
                                          L350: L1312,
                                          L987: L1308,
                                          L179: L1456,
                                          L1481: L1480,
                                          L1372: L1458},
                         accounts=['4227047065147840205',
                                   '8511836882149982016',
                                   '15354271914547105265',
                                   '5292533547202728044',
                                   '16495268673511082035',
                                   'CCDF40493E712274L',
                                   '987ba6d80c536ef72fd3',
                                   '4edd14e178ad0c694a5f',
                                   '959c6923ca073aa23ec2',
                                   '84af1be6f390fc4f0d92',
                                   '7aa131ceb0eae191a3ed',
                                   '740e543a73fba8ae453f'],
                         at_id={'3852696174487011421': registry.Entry(timestamp=1104697525.0871,
                                                                      actor=L1195),
                                'd0f449aa58533e36ea69': registry.Entry(timestamp=1109433966.3965299,
                                                                       actor=L219),
                                '389f782794ad82bf42c2': registry.Entry(timestamp=1109435020.479353,
                                                                       actor=L1497),
                                'fc1d1a3284d605538654': registry.Entry(timestamp=1109422775.0987959,
                                                                       actor=L354),
                                '92077dd35d38c54b1d7a': registry.Entry(timestamp=1109433506.8028109,
                                                                       actor=L189),
                                'e0a19b1b2095e54a1a98': registry.Entry(timestamp=1109428828.339134,
                                                                       actor=L328),
                                '563ca179481499c18ab6': registry.Entry(timestamp=1109435048.1022961,
                                                                       actor=L93),
                                '177af5534bd8e4a0efef': registry.Entry(timestamp=1109434948.9887691,
                                                                       actor=L94),
                                '33e43cb0a69702868a1b': registry.Entry(timestamp=1109435117.5115161,
                                                                       actor=L1345),
                                'a9dd87deafb6771dc685': registry.Entry(timestamp=1109433538.641732,
                                                                       actor=L179),
                                '661509098043722411': registry.Entry(timestamp=1104650549.6519859,
                                                                     actor=L1523),
                                '2452790028842326399': registry.Entry(timestamp=1104650712.6615851,
                                                                      actor=L1482),
                                '244593790248987534': registry.Entry(timestamp=1104696067.7436399,
                                                                     actor=L1350),
                                '7733755804024661725': registry.Entry(timestamp=1104730507.793503,
                                                                      actor=L847),
                                'd3f069172de864d5ed94': registry.Entry(timestamp=1105921788.5114219,
                                                                       actor=L576),
                                '585cf6e821add948341f': registry.Entry(timestamp=1108956454.2687061,
                                                                       actor=L2),
                                '9923278975221135661': registry.Entry(timestamp=1104650760.2987189,
                                                                      actor=L1311),
                                '12946586331713097828': registry.Entry(timestamp=1104650753.210412,
                                                                       actor=L519),
                                '701718880621245410': registry.Entry(timestamp=1104689955.3227019,
                                                                     actor=L640),
                                '2169573376375311512': registry.Entry(timestamp=1104732128.235605,
                                                                      actor=L1398),
                                '425401d16cbbcb013414': registry.Entry(timestamp=1109424299.651423,
                                                                       actor=L1301),
                                '7488614337481629366': registry.Entry(timestamp=1104732124.7329731,
                                                                      actor=L1270),
                                'b02f708094d7017ff9ca': registry.Entry(timestamp=1109428831.4527409,
                                                                       actor=L331),
                                '4716280173295595176': registry.Entry(timestamp=1104632228.340987,
                                                                      actor=L1494),
                                '6ea8e4e7c59015808866': registry.Entry(timestamp=1108956215.9937069,
                                                                       actor=L1006),
                                '809ca9a6a52e472c2232': registry.Entry(timestamp=1108956539.881407,
                                                                       actor=L574),
                                '2fe08bfff563b4be7b88': registry.Entry(timestamp=1109428875.280458,
                                                                       actor=L1593),
                                '14f6bb412e4e8dba28e7': registry.Entry(timestamp=1105921513.4537351,
                                                                       actor=L1116),
                                '752780470375236548': registry.Entry(timestamp=1104650712.6552,
                                                                     actor=L1401),
                                '13472432016877657261': registry.Entry(timestamp=1104650549.645519,
                                                                       actor=L579),
                                '86494131c70f31e05c76': registry.Entry(timestamp=1105921566.047498,
                                                                       actor=L1443),
                                '95e56b4ad9bd4778155e': registry.Entry(timestamp=1109435020.4820459,
                                                                       actor=L1498),
                                'aeca121725efb320e1bd': registry.Entry(timestamp=1109435097.3057289,
                                                                       actor=L1588),
                                '10397032148789093459': registry.Entry(timestamp=1104732128.235873,
                                                                       actor=L1399),
                                '6ad807ecfa9819fc5274': registry.Entry(timestamp=1108956554.296838,
                                                                       actor=L738),
                                '27a3eaafc2929449c2': registry.Entry(timestamp=1108412240.3505909,
                                                                     actor=L1316),
                                'f6599863150eeb0c6b2c': registry.Entry(timestamp=1109434795.847883,
                                                                       actor=L273),
                                '7773452571940476712': registry.Entry(timestamp=1104697525.0874059,
                                                                      actor=L637),
                                '8260809509679861109': registry.Entry(timestamp=1104633042.4136021,
                                                                      actor=L882),
                                '13289750248154104862': registry.Entry(timestamp=1104730109.325695,
                                                                       actor=L1276),
                                '9876815513572400324': registry.Entry(timestamp=1104650549.6620231,
                                                                      actor=L1483),
                                '4023b3c507c036f50e56': registry.Entry(timestamp=1104797071.70976,
                                                                       actor=L1454),
                                '4c09de69dcaeb7cc983c': registry.Entry(timestamp=1109428388.68279,
                                                                       actor=L1296),
                                'afe0f8475c226480003e': registry.Entry(timestamp=1104797063.4905939,
                                                                       actor=L854),
                                '14572783785176608328': registry.Entry(timestamp=1104632228.3476341,
                                                                       actor=L1331),
                                '3bc09d4543e10c13c0fd': registry.Entry(timestamp=1109435162.498421,
                                                                       actor=L253),
                                'dfdddcc9276b298ffa66': registry.Entry(timestamp=1108412173.816499,
                                                                       actor=L1406),
                                '3221c3e44d26b6bbd5ad': registry.Entry(timestamp=1105921540.943424,
                                                                       actor=L971),
                                'e64afe24df26d799a9ac': registry.Entry(timestamp=1104807972.488673,
                                                                       actor=L917),
                                '17543361990980566375': registry.Entry(timestamp=1104650712.6712439,
                                                                       actor=L762),
                                'aa59537f559184f9eca2': registry.Entry(timestamp=1104797063.503005,
                                                                       actor=L1277),
                                '15235668337536127643': registry.Entry(timestamp=1104650549.6492591,
                                                                       actor=L1474),
                                '506e223cff60b5489e1b': registry.Entry(timestamp=1109435078.919728,
                                                                       actor=L184),
                                'bd4007d9b81ff6015fa': registry.Entry(timestamp=1109677352.059732,
                                                                      actor=L1187),
                                '66e67041b7181b22690': registry.Entry(timestamp=1104797063.3189459,
                                                                      actor=L919),
                                '9f783033e4c251e7aecd': registry.Entry(timestamp=1109435120.1054151,
                                                                       actor=L1479),
                                '1823737881735097641': registry.Entry(timestamp=1104633108.6909039,
                                                                      actor=L741),
                                '6231133fb36d5570d27a': registry.Entry(timestamp=1109434995.1101241,
                                                                       actor=L1452),
                                '2291036927185731541': registry.Entry(timestamp=1104650712.656209,
                                                                      actor=L732),
                                '16832713526910606204': registry.Entry(timestamp=1104732473.8273611,
                                                                       actor=L1469),
                                '5ce1f20ddbfb0d7dbdc8': registry.Entry(timestamp=1109422775.132426,
                                                                       actor=L1595),
                                '10238622742572975996': registry.Entry(timestamp=1104696935.0587831,
                                                                       actor=L643),
                                'feab0d101efa1eb7800c': registry.Entry(timestamp=1105921822.377749,
                                                                       actor=L999),
                                '6368b3eb10785a7e39c3': registry.Entry(timestamp=1104797063.330265,
                                                                       actor=L1597),
                                '8635995105440979424': registry.Entry(timestamp=1104650712.6806979,
                                                                      actor=L619),
                                '1955787528046718785': registry.Entry(timestamp=1104689968.784857,
                                                                      actor=L638),
                                '4b6ad410a34d5b6c16ee': registry.Entry(timestamp=1105921803.8393171,
                                                                       actor=L766),
                                '5b0ee41b18f3e75167a2': registry.Entry(timestamp=1104797063.3379431,
                                                                       actor=L1441),
                                'd09a2d478bd604dc3907': registry.Entry(timestamp=1109435120.102756,
                                                                       actor=L1478),
                                '4eec14b8e7620b9cbbf6': registry.Entry(timestamp=1104797063.3455911,
                                                                       actor=L1459),
                                '5f250d31a4b5ac2e53cb': registry.Entry(timestamp=1109435010.016041,
                                                                       actor=L1472),
                                '9360497806179331195': registry.Entry(timestamp=1104650930.792357,
                                                                      actor=L728),
                                'd56af1fc4e478d2676e4': registry.Entry(timestamp=1109424447.451117,
                                                                       actor=L1188),
                                '17127538032127337902': registry.Entry(timestamp=1104730109.318953,
                                                                       actor=L1186),
                                'f087d80a9309247b65a': registry.Entry(timestamp=1108956695.1802731,
                                                                      actor=L11),
                                '844713905205980550': registry.Entry(timestamp=1104730109.319428,
                                                                     actor=L894),
                                '17611950891294426261': registry.Entry(timestamp=1104690171.623419,
                                                                       actor=L1596),
                                'f58848882bb5b9bb3ac8': registry.Entry(timestamp=1109433508.5816081,
                                                                       actor=L187),
                                '1d080e958d08e20c362b': registry.Entry(timestamp=1109434485.9212029,
                                                                       actor=L220),
                                'f8ff73eb7cf1b9941a73': registry.Entry(timestamp=1109428388.6854019,
                                                                       actor=L327),
                                '9057425907194955737': registry.Entry(timestamp=1105488351.8877051,
                                                                      actor=L688),
                                '3518475730128674669': registry.Entry(timestamp=1104730507.83989,
                                                                      actor=L803),
                                '4227047065147840205': registry.Entry(timestamp=1104650529.884198,
                                                                      actor=L1351),
                                '12634790733065757812': registry.Entry(timestamp=1104632228.343287,
                                                                       actor=L151),
                                '12685563122316055259': registry.Entry(timestamp=1104706912.387881,
                                                                       actor=L658),
                                'fcceeb077cb614ca85f8': registry.Entry(timestamp=1105921806.0911419,
                                                                       actor=L760),
                                'a51f96a48acf383d67b6': registry.Entry(timestamp=1108956747.618078,
                                                                       actor=L84),
                                '8511836882149982016': registry.Entry(timestamp=1104650706.713083,
                                                                      actor=L1407),
                                '3324730690425372007': registry.Entry(timestamp=1104650549.6319871,
                                                                      actor=L1302),
                                'eaad67a6f405387e7f63': registry.Entry(timestamp=1109428392.426419,
                                                                       actor=L299),
                                '1f450f46787e5df1a832': registry.Entry(timestamp=1109433892.9024999,
                                                                       actor=L197),
                                'f57378bfa8f1bda4717f': registry.Entry(timestamp=1109428871.343946,
                                                                       actor=L516),
                                'e6e700e2d7e729e3e72': registry.Entry(timestamp=1104807950.8954489,
                                                                      actor=L1462),
                                '2f63027d1e8f1c1a37fd': registry.Entry(timestamp=1109428835.8189859,
                                                                       actor=L1471),
                                '9ffceadfb339bf0a37b7': registry.Entry(timestamp=1109434995.1128759,
                                                                       actor=L1453),
                                '6c6ed31f12ce3e23a22a': registry.Entry(timestamp=1109434683.425472,
                                                                       actor=L1456),
                                '14138594607498135940': registry.Entry(timestamp=1104650760.299006,
                                                                       actor=L520),
                                '9638377965285201700': registry.Entry(timestamp=1104632228.3473179,
                                                                      actor=L1334),
                                '1aa5ec03a965669b0022': registry.Entry(timestamp=1109423781.7648139,
                                                                       actor=L1056),
                                '236d38760c6a183af6f8': registry.Entry(timestamp=1108956215.9963861,
                                                                       actor=L895),
                                '1546622807325074855': registry.Entry(timestamp=1104696117.3322141,
                                                                      actor=L675),
                                '7936621921662856627': registry.Entry(timestamp=1104650549.672792,
                                                                      actor=L1499),
                                'e87eee5c7103444d365b': registry.Entry(timestamp=1108412101.378515,
                                                                       actor=L1493),
                                '941178e1441881defb2b': registry.Entry(timestamp=1108412101.4808841,
                                                                       actor=L1322),
                                '97cdf671f963709d9eb3': registry.Entry(timestamp=1108412173.8229091,
                                                                       actor=L1313),
                                '6817141969146993628': registry.Entry(timestamp=1104708982.6086359,
                                                                      actor=L1473),
                                '12545444783397887118': registry.Entry(timestamp=1104693955.28495,
                                                                       actor=L679),
                                '7a19485e947469b48f5d': registry.Entry(timestamp=1105921826.4260719,
                                                                       actor=L761),
                                '13319024784900900893': registry.Entry(timestamp=1104730507.798197,
                                                                       actor=L360),
                                '3313777953666434324': registry.Entry(timestamp=1104650549.6397591,
                                                                      actor=L1468),
                                '1061218531910574846': registry.Entry(timestamp=1104706912.3873279,
                                                                      actor=L659),
                                '59366674524a8992ec57': registry.Entry(timestamp=1105921808.808475,
                                                                       actor=L1315),
                                '34874108ea81817dd45f': registry.Entry(timestamp=1109428828.336385,
                                                                       actor=L1273),
                                '620b2cb3deba6d946d89': registry.Entry(timestamp=1109433834.8225541,
                                                                       actor=L207),
                                '11512313525346285370': registry.Entry(timestamp=1104730109.340476,
                                                                       actor=L578),
                                '2496797421715521539': registry.Entry(timestamp=1104732153.4440341,
                                                                      actor=L1079),
                                '4f4d746968439adc77f8': registry.Entry(timestamp=1108956726.5260489,
                                                                       actor=L1329),
                                'fc67e57428a80e5c577': registry.Entry(timestamp=1109434690.4835491,
                                                                      actor=L896),
                                '959c6923ca073aa23ec2': registry.Entry(timestamp=1105921745.7405829,
                                                                       actor=L965),
                                '9e1868775012070da71': registry.Entry(timestamp=1109434991.6687219,
                                                                      actor=L1050),
                                '479cbf4440b2fda712e3': registry.Entry(timestamp=1108956215.9968741,
                                                                       actor=L1599),
                                '27642d37c9e93d88a9d3': registry.Entry(timestamp=1108412173.8300371,
                                                                       actor=L886),
                                '66d46b6a4c45495d85f': registry.Entry(timestamp=1108412101.364145,
                                                                      actor=L1492),
                                'c4491d62f5b2c77c1788': registry.Entry(timestamp=1109435027.723671,
                                                                       actor=L1485),
                                '9cab7b2aaf0861d72052': registry.Entry(timestamp=1105921513.584868,
                                                                       actor=L1324),
                                'b378f20f4218f5661db8': registry.Entry(timestamp=1109428186.7802711,
                                                                       actor=L316),
                                '38674a8406c10d8acc66': registry.Entry(timestamp=1105921513.4133351,
                                                                       actor=L966),
                                '11497005180784433127': registry.Entry(timestamp=1104730109.3140781,
                                                                       actor=L522),
                                '11885770933734303644': registry.Entry(timestamp=1104689888.176734,
                                                                       actor=L1046),
                                'abd8c6c996e0bdee54ab': registry.Entry(timestamp=1105921788.513629,
                                                                       actor=L376),
                                '40318dd352f07bad2f32': registry.Entry(timestamp=1109435048.0906439,
                                                                       actor=L92),
                                '7725879995356042119': registry.Entry(timestamp=1104633105.5330541,
                                                                      actor=L1075),
                                'c28f00da84aabe9711f8': registry.Entry(timestamp=1109428846.2577951,
                                                                       actor=L1191),
                                '8275236787514389161': registry.Entry(timestamp=1104732146.0397589,
                                                                      actor=L1078),
                                '1049070116954587991': registry.Entry(timestamp=1104697494.401659,
                                                                      actor=L1349),
                                '211eb2ea127cce5956ea': registry.Entry(timestamp=1109433447.629179,
                                                                       actor=L259),
                                '6ae432c49f19b06e3dce': registry.Entry(timestamp=1109424192.8307281,
                                                                       actor=L90),
                                '6842470814180133769': registry.Entry(timestamp=1104632241.948518,
                                                                      actor=L143),
                                '3adc62bc55fb88be1f69': registry.Entry(timestamp=1108412101.3760641,
                                                                       actor=L1477),
                                '5dc7e64e69d3a5a73189': registry.Entry(timestamp=1105921748.370198,
                                                                       actor=L412),
                                '1817218079521314969': registry.Entry(timestamp=1104632228.3319261,
                                                                      actor=L76),
                                '16897814623275256082': registry.Entry(timestamp=1104632239.2551229,
                                                                       actor=L138),
                                '7984984827063085602': registry.Entry(timestamp=1104730507.8248301,
                                                                      actor=L1297),
                                '10726820175615189179': registry.Entry(timestamp=1104650549.657733,
                                                                       actor=L3),
                                '848b9113b67cd5bfccbc': registry.Entry(timestamp=1105921513.6032341,
                                                                       actor=L362),
                                'd368cd1b3e772c0dee3a': registry.Entry(timestamp=1109433734.2794211,
                                                                       actor=L216),
                                'eea508d94e56f68e728b': registry.Entry(timestamp=1108956215.9550979,
                                                                       actor=L1008),
                                'f675ab66721705423554': registry.Entry(timestamp=1109434712.600971,
                                                                       actor=L1440),
                                '15000248107523643647': registry.Entry(timestamp=1104732488.3008361,
                                                                       actor=L1470),
                                '13176058059947371572': registry.Entry(timestamp=1104697346.2155011,
                                                                       actor=L1197),
                                'b25d5843447a0422c30a': registry.Entry(timestamp=1108412101.3371241,
                                                                       actor=L1325),
                                '2a4f7a3dcd2f87a7532b': registry.Entry(timestamp=1105921690.9049809,
                                                                       actor=L396),
                                'e20bc13b888334ad3537': registry.Entry(timestamp=1108956448.854455,
                                                                       actor=L1013),
                                '15354271914547105265': registry.Entry(timestamp=1104689747.0002921,
                                                                       actor=L1084),
                                '9829540809193203453': registry.Entry(timestamp=1104633108.691174,
                                                                      actor=L742),
                                '11244828830854864470': registry.Entry(timestamp=1104633047.078866,
                                                                       actor=L1054),
                                '9e55068b582c80b9f474': registry.Entry(timestamp=1108412101.4894359,
                                                                       actor=L1397),
                                'de5f81ed1b494d3519df': registry.Entry(timestamp=1109433597.6299551,
                                                                       actor=L192),
                                '6aa8789df5ecc4190c79': registry.Entry(timestamp=1108956850.9261429,
                                                                       actor=L55),
                                'f8670e226436fa73128f': registry.Entry(timestamp=1109428826.413799,
                                                                       actor=L339),
                                '35269d3b8f3f78114257': registry.Entry(timestamp=1108956796.8554609,
                                                                       actor=L65),
                                'fa59d03a167a4c1b94ff': registry.Entry(timestamp=1109434755.246258,
                                                                       actor=L223),
                                '10330519763115726681': registry.Entry(timestamp=1104689888.177563,
                                                                       actor=L1049),
                                '93a74d12b66f1bf6d440': registry.Entry(timestamp=1109677336.731226,
                                                                       actor=L262),
                                '5d52906b91dc36916500': registry.Entry(timestamp=1104807950.912137,
                                                                       actor=L897),
                                '54573033a0f923d876e0': registry.Entry(timestamp=1109422775.108053,
                                                                       actor=L1328),
                                '120d37656e5a1a12158e': registry.Entry(timestamp=1109428443.6542909,
                                                                       actor=L323),
                                '4667264518391135515': registry.Entry(timestamp=1104650724.1308751,
                                                                      actor=L517),
                                'e94c4dff11c20c4a0886': registry.Entry(timestamp=1104797071.7125549,
                                                                       actor=L1455),
                                '232be96254a60b1185f4': registry.Entry(timestamp=1109428842.672349,
                                                                       actor=L1489),
                                '5591050765793200711': registry.Entry(timestamp=1104732505.688601,
                                                                      actor=L1199),
                                '12051635174327115429': registry.Entry(timestamp=1104650712.6820021,
                                                                       actor=L1476),
                                '9fe8821ff61c3fe3b77d': registry.Entry(timestamp=1109422775.0955131,
                                                                       actor=L1400),
                                '5274326361166066280': registry.Entry(timestamp=1104693745.0998559,
                                                                      actor=L670),
                                '13270445787827545889': registry.Entry(timestamp=1104730109.3088651,
                                                                       actor=L1522),
                                'c223f740d0189de07951': registry.Entry(timestamp=1109435170.1033919,
                                                                       actor=L521),
                                '9ed64c1f46f388ef377e': registry.Entry(timestamp=1108412240.3527069,
                                                                       actor=L514),
                                '1a3edd7a42ba08472afd': registry.Entry(timestamp=1108956448.852829,
                                                                       actor=L1268),
                                '55786e30b2bf1b3ea69f': registry.Entry(timestamp=1109428799.6917369,
                                                                       actor=L1304),
                                '4442827039649434997': registry.Entry(timestamp=1104650930.7920511,
                                                                      actor=L1519),
                                '322fb4bc7605aa8653e2': registry.Entry(timestamp=1109435009.982374,
                                                                       actor=L1327),
                                '474b80e51e808fed1a99': registry.Entry(timestamp=1109433451.294275,
                                                                       actor=L180),
                                '12128037699416130148': registry.Entry(timestamp=1104732146.0393341,
                                                                       actor=L1077),
                                '6f3a7f7d336523b08bd4': registry.Entry(timestamp=1109422775.123138,
                                                                       actor=L1312),
                                '22eb057b0621169328c9': registry.Entry(timestamp=1108956215.9773271,
                                                                       actor=L88),
                                '13387220976027820258': registry.Entry(timestamp=1104650712.644146,
                                                                       actor=L880),
                                '7a89bcf8d307b258b3b4': registry.Entry(timestamp=1109435009.9851551,
                                                                       actor=L278),
                                '672462e5d7d6c8606fe3': registry.Entry(timestamp=1109434948.9922681,
                                                                       actor=L95),
                                '708093d3f5efae9ceb81': registry.Entry(timestamp=1109435009.994391,
                                                                       actor=L359),
                                '67eeb2429b63101a4ec7': registry.Entry(timestamp=1108412161.574615,
                                                                       actor=L1332),
                                'ca30c87e605ba765be06': registry.Entry(timestamp=1109428804.8202569,
                                                                       actor=L87),
                                '1679989706457713520': registry.Entry(timestamp=1104706912.3876929,
                                                                      actor=L661),
                                '6402116433048299654': registry.Entry(timestamp=1104650712.6671181,
                                                                      actor=L1466),
                                '70ca891a948da6b4fd73': registry.Entry(timestamp=1109422775.1296489,
                                                                       actor=L152),
                                '15511116157062632786': registry.Entry(timestamp=1104650712.6740661,
                                                                       actor=L1194),
                                'fff687e48591806e7d56': registry.Entry(timestamp=1109435168.3178489,
                                                                       actor=L1338),
                                'b774260d0676ba628669': registry.Entry(timestamp=1104797063.3239031,
                                                                       actor=L1114),
                                'b714558827a1934689eb': registry.Entry(timestamp=1109435027.72104,
                                                                       actor=L1484),
                                '16136617492328534660': registry.Entry(timestamp=1104650949.250061,
                                                                       actor=L1500),
                                'dee2d9a8289d27ac176a': registry.Entry(timestamp=1109424028.7127371,
                                                                       actor=L311),
                                '804e5b1a3b2aadf7c001': registry.Entry(timestamp=1109423781.762228,
                                                                       actor=L1055),
                                'bd70c7c47be23dba293f': registry.Entry(timestamp=1109433735.9576671,
                                                                       actor=L214),
                                '25c2e6f96744ae60c374': registry.Entry(timestamp=1105921513.572356,
                                                                       actor=L1524),
                                'CCDF40493E712274L': registry.Entry(timestamp=1104796672.1500449,
                                                                    actor=L1200),
                                '93ea785fea4a1506079a': registry.Entry(timestamp=1108412161.5768311,
                                                                       actor=L453),
                                '10871997212631801029': registry.Entry(timestamp=1104730109.3334141,
                                                                       actor=L1600),
                                '73d4b6bd3504795305a1': registry.Entry(timestamp=1109424445.3275061,
                                                                       actor=L344),
                                '8060076283853931247': registry.Entry(timestamp=1104650549.665045,
                                                                      actor=L1488),
                                '7472656884655288975': registry.Entry(timestamp=1104689853.1316221,
                                                                      actor=L1403),
                                'fd0e0dcd73af9e72f597': registry.Entry(timestamp=1108956216.009995,
                                                                       actor=L1064),
                                '17980192334006365197': registry.Entry(timestamp=1104632228.403507,
                                                                       actor=L1115),
                                '7fd28421399c0260a1a0': registry.Entry(timestamp=1109428731.5971761,
                                                                       actor=L304),
                                '4178227206424925539': registry.Entry(timestamp=1104650549.674288,
                                                                      actor=L1344),
                                '15250013233234179905': registry.Entry(timestamp=1104632228.3750589,
                                                                       actor=L1450),
                                '6c85152f239871975017': registry.Entry(timestamp=1109428208.878855,
                                                                       actor=L1061),
                                '3cb26424481623ed41bc': registry.Entry(timestamp=1108956926.1981299,
                                                                       actor=L60),
                                '1c4a4e54eec83f776e4a': registry.Entry(timestamp=1109424192.8323901,
                                                                       actor=L91),
                                '12946925928954107809': registry.Entry(timestamp=1104730507.796433,
                                                                       actor=L1299),
                                '92d4a78cea106df07c2c': registry.Entry(timestamp=1108956796.853735,
                                                                       actor=L1275),
                                '14095654525563810214': registry.Entry(timestamp=1104694007.8913209,
                                                                       actor=L1451),
                                'a14d85d55467ffe04ee0': registry.Entry(timestamp=1109435018.4971809,
                                                                       actor=L1070),
                                'c25353745b522913f4c2': registry.Entry(timestamp=1109424299.653085,
                                                                       actor=L347),
                                '659985c7578a877b07e3': registry.Entry(timestamp=1109428804.8175659,
                                                                       actor=L86),
                                '4f3f54f1d8db5a25f118': registry.Entry(timestamp=1108956216.005373,
                                                                       actor=L80),
                                '13661059783025868973': registry.Entry(timestamp=1104633042.4138801,
                                                                       actor=L141),
                                '7aa131ceb0eae191a3ed': registry.Entry(timestamp=1108956833.1141219,
                                                                       actor=L1007),
                                '6055406963319936966': registry.Entry(timestamp=1104650753.2101431,
                                                                      actor=L1558),
                                '354f3356b414dbdf6595': registry.Entry(timestamp=1109435083.837661,
                                                                       actor=L182),
                                '10927938414203847443': registry.Entry(timestamp=1104689958.5300021,
                                                                       actor=L664),
                                '420e55efa0fb8d8f2ffd': registry.Entry(timestamp=1109428835.814178,
                                                                       actor=L332),
                                'fd6a40ab5331a449ac99': registry.Entry(timestamp=1104797063.2925529,
                                                                       actor=L1560),
                                '1359982258694374825': registry.Entry(timestamp=1104632228.379292,
                                                                      actor=L1458),
                                '10593314374053890933': registry.Entry(timestamp=1104730507.788162,
                                                                       actor=L78),
                                'ad509debf6bb51e095c9': registry.Entry(timestamp=1108412101.357022,
                                                                       actor=L737),
                                'b33414f37886533390d2': registry.Entry(timestamp=1108412161.582691,
                                                                       actor=L457),
                                'f5a54a967633535bf134': registry.Entry(timestamp=1109422948.6272831,
                                                                       actor=L297),
                                '10103513020179766570': registry.Entry(timestamp=1104690335.904788,
                                                                       actor=L662),
                                'c757003da8382520250d': registry.Entry(timestamp=1105921822.3753741,
                                                                       actor=L1317),
                                '261ec3b86d5f1af30a43': registry.Entry(timestamp=1109435160.16693,
                                                                       actor=L1589),
                                '14107852319538388771': registry.Entry(timestamp=1104730507.833338,
                                                                       actor=L1337),
                                '73f50a3f60d178768e5d': registry.Entry(timestamp=1104807950.8976121,
                                                                       actor=L924),
                                'f9ab36734295b51f1fb9': registry.Entry(timestamp=1109435170.1005421,
                                                                       actor=L247),
                                '3ed58789fe9a7d9623fa': registry.Entry(timestamp=1104797063.3068709,
                                                                       actor=L1404),
                                '11549355846312153998': registry.Entry(timestamp=1104632228.3814001,
                                                                       actor=L1196),
                                '3191a13927a42a0aca34': registry.Entry(timestamp=1109428764.7491829,
                                                                       actor=L1333),
                                '9ca23758d3e14b14e22f': registry.Entry(timestamp=1105921548.3496211,
                                                                       actor=L1335),
                                '4138178436990957034': registry.Entry(timestamp=1104732505.688319,
                                                                      actor=L1198),
                                '6920636786683624616': registry.Entry(timestamp=1104690523.1329401,
                                                                      actor=L1395),
                                '32b6411e86ed3305be63': registry.Entry(timestamp=1108956726.5277021,
                                                                       actor=L39),
                                '14726587180619911525': registry.Entry(timestamp=1104633035.78582,
                                                                       actor=L149),
                                'a125bcaed7f5954b9150': registry.Entry(timestamp=1109422775.1189499,
                                                                       actor=L1496),
                                '1564538181099476570': registry.Entry(timestamp=1104690401.654279,
                                                                      actor=L1318),
                                '9515dc91fc08cfc0dda0': registry.Entry(timestamp=1109428838.2248061,
                                                                       actor=L1310),
                                'f4e883b36a48f3be4880': registry.Entry(timestamp=1109422945.6852801,
                                                                       actor=L336),
                                'dfd2c79df992922d1acf': registry.Entry(timestamp=1105921540.9413459,
                                                                       actor=L1067),
                                '12182569062741163979': registry.Entry(timestamp=1104730109.3149381,
                                                                       actor=L573),
                                'ca15ef2c3a7701c12458': registry.Entry(timestamp=1109423159.0988619,
                                                                       actor=L301),
                                '1b5a49fb0fec6944ecc4': registry.Entry(timestamp=1105921513.538332,
                                                                       actor=L1323),
                                'a7bd903423cd5317bd7b': registry.Entry(timestamp=1109428831.4499919,
                                                                       actor=L1393),
                                '17801320630458131755': registry.Entry(timestamp=1104689816.700052,
                                                                       actor=L1447),
                                '2d3ff26bf3a1ccdbda01': registry.Entry(timestamp=1109428838.222214,
                                                                       actor=L1309),
                                '13838842964897476745': registry.Entry(timestamp=1104650720.799705,
                                                                       actor=L1521),
                                'f96001099601a04981f6': registry.Entry(timestamp=1108956537.787472,
                                                                       actor=L69),
                                '6461598025166001448': registry.Entry(timestamp=1104689796.4098401,
                                                                      actor=L634),
                                'cea976a1318c7f6a6ec': registry.Entry(timestamp=1109434693.650279,
                                                                      actor=L255),
                                '7798158345955886274': registry.Entry(timestamp=1104650549.6464159,
                                                                      actor=L617),
                                '3cadcfebb3425343d2ae': registry.Entry(timestamp=1109434660.0012491,
                                                                       actor=L234),
                                '2956948422716100561': registry.Entry(timestamp=1104706912.386812,
                                                                      actor=L660),
                                '4131740470354140357': registry.Entry(timestamp=1104697377.9553559,
                                                                      actor=L681),
                                '740e543a73fba8ae453f': registry.Entry(timestamp=1109677327.1529441,
                                                                       actor=L928),
                                'e568157c9501ba7cfc6a': registry.Entry(timestamp=1109428462.781116,
                                                                       actor=L1305),
                                'c700b53d7a40117bd126': registry.Entry(timestamp=1109435168.315073,
                                                                       actor=L1339),
                                '2805739992860418134': registry.Entry(timestamp=1104650712.650219,
                                                                      actor=L883),
                                'a80d84152cb05bbf1286': registry.Entry(timestamp=1109424025.394774,
                                                                       actor=L313),
                                '8549478301856461533': registry.Entry(timestamp=1104730507.77914,
                                                                      actor=L1526),
                                '400632f1c4d59068aadc': registry.Entry(timestamp=1104797063.3278401,
                                                                       actor=L1074),
                                '3bcc6e02355a4489272b': registry.Entry(timestamp=1109434795.845222,
                                                                       actor=L1467),
                                '12904228506947022660': registry.Entry(timestamp=1104632228.327944,
                                                                       actor=L1352),
                                'af6bc0bdd2da549d34ab': registry.Entry(timestamp=1109435027.7326839,
                                                                       actor=L1065),
                                '978002a771fdb82dea39': registry.Entry(timestamp=1109435124.705168,
                                                                       actor=L767),
                                '8ab96d54de6dae117484': registry.Entry(timestamp=1109428846.255095,
                                                                       actor=L1190),
                                '905b734d21990d905889': registry.Entry(timestamp=1109422775.0432079,
                                                                       actor=L1298),
                                '8608183716299200486': registry.Entry(timestamp=1104632228.3480451,
                                                                      actor=L1062),
                                '7436199748876259015': registry.Entry(timestamp=1104696844.4145091,
                                                                      actor=L1117),
                                '63d95a5f3af1685a4628': registry.Entry(timestamp=1104807978.8575661,
                                                                       actor=L1446),
                                '69de3657b02e113b0f93': registry.Entry(timestamp=1108412173.8187251,
                                                                       actor=L892),
                                '14955675966070121265': registry.Entry(timestamp=1104650712.6410279,
                                                                       actor=L1085),
                                'f607f8a7a922d909c959': registry.Entry(timestamp=1105921825.2458611,
                                                                       actor=L759),
                                '81ea31f2e40de4411915': registry.Entry(timestamp=1108956454.267065,
                                                                       actor=L1),
                                'ea1042a44339a6b6299c': registry.Entry(timestamp=1108956216.0383761,
                                                                       actor=L1495),
                                '4f7773f6e389793f5cff': registry.Entry(timestamp=1109428842.6749821,
                                                                       actor=L1490),
                                '77c7ce5c863dd5a05a76': registry.Entry(timestamp=1109422775.0328751,
                                                                       actor=L929),
                                '1011012714027468268': registry.Entry(timestamp=1104650712.6589899,
                                                                      actor=L96),
                                'c171aaf4622a67eec25f': registry.Entry(timestamp=1105921745.787854,
                                                                       actor=L414),
                                '13286087984584598130': registry.Entry(timestamp=1104650712.6619079,
                                                                       actor=L1005),
                                '96f0ef4cbdcdc2586bf0': registry.Entry(timestamp=1109428182.139416,
                                                                       actor=L1442),
                                '40a8e69a8169b7a993b1': registry.Entry(timestamp=1108956889.0060489,
                                                                       actor=L1448),
                                '10e10ac18640c6dd2364': registry.Entry(timestamp=1109434627.705112,
                                                                       actor=L1269),
                                '4939350837483695449': registry.Entry(timestamp=1104730109.317359,
                                                                      actor=L1520),
                                'daa4bbacf74bab652f0a': registry.Entry(timestamp=1109434477.727283,
                                                                       actor=L1063),
                                '8096643624464055522': registry.Entry(timestamp=1104633049.924382,
                                                                      actor=L147),
                                'c6395c42b17dc6409a98': registry.Entry(timestamp=1108956695.1835511,
                                                                       actor=L1592),
                                'ce21e0cc674c8dff1aa1': registry.Entry(timestamp=1109428875.2832229,
                                                                       actor=L1594),
                                'f1b64b96203dc1031e47': registry.Entry(timestamp=1109433805.3580141,
                                                                       actor=L194),
                                'f2761198c8015e58297d': registry.Entry(timestamp=1109422775.0365369,
                                                                       actor=L1326),
                                '987ba6d80c536ef72fd3': registry.Entry(timestamp=1104796957.85256,
                                                                       actor=L1118),
                                '112755c6b7b0197ca6bb': registry.Entry(timestamp=1105921513.5788419,
                                                                       actor=L1308),
                                '335fd96b953d2239db53': registry.Entry(timestamp=1109433926.7197659,
                                                                       actor=L200),
                                '2c4f6289354906ecf08': registry.Entry(timestamp=1109424447.4493661,
                                                                      actor=L1189),
                                '12473ee71c96cd605738': registry.Entry(timestamp=1108412101.3312759,
                                                                       actor=L433),
                                '477d1d63d2661835065d': registry.Entry(timestamp=1105921513.564682,
                                                                       actor=L1321),
                                '14095783355500097386': registry.Entry(timestamp=1104633023.2535551,
                                                                       actor=L1278),
                                '84af1be6f390fc4f0d92': registry.Entry(timestamp=1108412234.059459,
                                                                       actor=L432),
                                'c97d9bb0c2aa5df61e6e': registry.Entry(timestamp=1108412101.454735,
                                                                       actor=L1300),
                                'dc10179ce6eb719eddec': registry.Entry(timestamp=1105921587.3464301,
                                                                       actor=L419),
                                '132bd817a0e8acb0485e': registry.Entry(timestamp=1108956833.1580081,
                                                                       actor=L57),
                                '40e51ffc174da6c81c4f': registry.Entry(timestamp=1108412101.37217,
                                                                       actor=L1457),
                                '5292533547202728044': registry.Entry(timestamp=1104730442.7894969,
                                                                      actor=L769),
                                'f84c449eddb7e174f514': registry.Entry(timestamp=1108956539.883023,
                                                                       actor=L575),
                                '16495268673511082035': registry.Entry(timestamp=1104795314.0476921,
                                                                       actor=L1525),
                                '89b4ca205464b571e41e': registry.Entry(timestamp=1109428157.5395341,
                                                                       actor=L1080),
                                '8a9f1ac419253f7817c7': registry.Entry(timestamp=1105921826.4286239,
                                                                       actor=L1343),
                                '9462070805789713288': registry.Entry(timestamp=1104650549.652365,
                                                                      actor=L1598),
                                '15604201270503278878': registry.Entry(timestamp=1104632228.3436141,
                                                                       actor=L104),
                                '12079799893167868995': registry.Entry(timestamp=1104693742.1302421,
                                                                       actor=L672),
                                'daf060d1d66ad487dee3': registry.Entry(timestamp=1109435117.514183,
                                                                       actor=L1346),
                                '5217137786238671049': registry.Entry(timestamp=1104632241.9482341,
                                                                      actor=L1491),
                                '1f966172227f701d36a1': registry.Entry(timestamp=1109434798.857053,
                                                                       actor=L1481),
                                '7522505065968084182': registry.Entry(timestamp=1104730507.792691,
                                                                      actor=L1342),
                                '2ce2546b3a61d585544e': registry.Entry(timestamp=1108412161.584934,
                                                                       actor=L460),
                                '10579116576104148034': registry.Entry(timestamp=1104632797.6333671,
                                                                       actor=L1069),
                                'bc6686a069873608f287': registry.Entry(timestamp=1109434503.0064521,
                                                                       actor=L230),
                                'cac21146f6ccd1384dcb': registry.Entry(timestamp=1108956794.6392231,
                                                                       actor=L10),
                                '12427553908187455670': registry.Entry(timestamp=1104730109.330364,
                                                                       actor=L1066),
                                '4edd14e178ad0c694a5f': registry.Entry(timestamp=1104807944.3474181,
                                                                       actor=L1559),
                                '1f894cedda7a5116c672': registry.Entry(timestamp=1109433555.5110941,
                                                                       actor=L158),
                                '11346868527983282560': registry.Entry(timestamp=1104632803.6578569,
                                                                       actor=L1463),
                                '12280374078573952893': registry.Entry(timestamp=1104689747.0388479,
                                                                       actor=L685),
                                '5186614581370432354': registry.Entry(timestamp=1104730776.1944089,
                                                                      actor=L1271),
                                'd3fa83e2175f56e2183f': registry.Entry(timestamp=1109434779.0693159,
                                                                       actor=L885),
                                '3719337025926476596': registry.Entry(timestamp=1104650549.6292789,
                                                                      actor=L1408),
                                '7708682ba51a597e4483': registry.Entry(timestamp=1109427882.6983581,
                                                                       actor=L1081),
                                '3d7fe3f0661198add7d2': registry.Entry(timestamp=1108956216.0018411,
                                                                       actor=L1076),
                                'b6d022a6aab1a9c58c67': registry.Entry(timestamp=1105921513.5993609,
                                                                       actor=L1402),
                                '7838193153830263651': registry.Entry(timestamp=1104730507.7985001,
                                                                      actor=L1320),
                                '994f72d124ba4ab3e643': registry.Entry(timestamp=1109435124.707993,
                                                                       actor=L768),
                                '5ee3a50d3351e3b67fd4': registry.Entry(timestamp=1104807950.9019289,
                                                                       actor=L1449),
                                '10584963968992807980': registry.Entry(timestamp=1104730109.3000181,
                                                                       actor=L770),
                                '63af8fe6397a4ec62ec8': registry.Entry(timestamp=1104807978.85042,
                                                                       actor=L923),
                                '202f42bea33bd7dcb5c7': registry.Entry(timestamp=1105921808.8114059,
                                                                       actor=L1314),
                                '129f5ab2812ebd35a6f3': registry.Entry(timestamp=1108956527.0244949,
                                                                       actor=L71),
                                '2737335135250149149': registry.Entry(timestamp=1104650724.1311619,
                                                                      actor=L518),
                                'cf3306171571f5115689': registry.Entry(timestamp=1109435018.505995,
                                                                       actor=L1274),
                                '15550032082523474268': registry.Entry(timestamp=1104650556.4493201,
                                                                       actor=L618),
                                'a9cb48105a7013552f52': registry.Entry(timestamp=1108412234.392565,
                                                                       actor=L474),
                                '1245e3bda58496bdf7e7': registry.Entry(timestamp=1105921513.4643559,
                                                                       actor=L421),
                                '1347a00d734365bfd85e': registry.Entry(timestamp=1108956747.616488,
                                                                       actor=L83),
                                '3491372217552124879': registry.Entry(timestamp=1104694604.2031541,
                                                                      actor=L1557),
                                '13101820419664547343': registry.Entry(timestamp=1104632307.7753921,
                                                                       actor=L1068),
                                '48c31983ab36c2b93869': registry.Entry(timestamp=1109422775.113838,
                                                                       actor=L577),
                                '2226060574216469791': registry.Entry(timestamp=1104795314.147552,
                                                                      actor=L1444),
                                '9191949582763768590': registry.Entry(timestamp=1104732153.4437671,
                                                                      actor=L1272),
                                '11009507096081710421': registry.Entry(timestamp=1104650949.2503321,
                                                                       actor=L1501),
                                'd6b5b4340e8822d2762c': registry.Entry(timestamp=1109434804.450887,
                                                                       actor=L1051),
                                '11031015219216838346': registry.Entry(timestamp=1104730109.341886,
                                                                       actor=L1394),
                                'bb790ac1a0ee7ed3ea5b': registry.Entry(timestamp=1109434798.854404,
                                                                       actor=L1480),
                                'c136252aeda06b05ab25': registry.Entry(timestamp=1108412101.4477329,
                                                                       actor=L425),
                                '40e992d83eee6dfcc7a5': registry.Entry(timestamp=1108412101.3672991,
                                                                       actor=L481),
                                'c16a270d21302658f53d': registry.Entry(timestamp=1108956776.0309,
                                                                       actor=L67),
                                '35b913d9f1a9ff04226a': registry.Entry(timestamp=1109435098.7016151,
                                                                       actor=L964),
                                '3112541654131017587': registry.Entry(timestamp=1104633023.2538221,
                                                                      actor=L1279),
                                '310e5faab910f546eb10': registry.Entry(timestamp=1109434795.8531029,
                                                                       actor=L1465),
                                '33c2fbb146d136f5d402': registry.Entry(timestamp=1109428835.8112259,
                                                                       actor=L765),
                                '14245085994013281857': registry.Entry(timestamp=1104640325.6669509,
                                                                       actor=L1475),
                                '16622057499147950833': registry.Entry(timestamp=1104697074.9701481,
                                                                       actor=L651),
                                '10084807298204554591': registry.Entry(timestamp=1104730507.8413301,
                                                                       actor=L1587),
                                '2553436941368336606': registry.Entry(timestamp=1104632803.6574349,
                                                                      actor=L1464),
                                '8343b425fd8ebf32117': registry.Entry(timestamp=1105921548.351846,
                                                                      actor=L1336),
                                'd81a12a2169de556f93d': registry.Entry(timestamp=1108956488.748338,
                                                                       actor=L739),
                                '18af9ec7344533271914': registry.Entry(timestamp=1109435018.501241,
                                                                       actor=L1071),
                                '16060064330232869464': registry.Entry(timestamp=1104730109.3031399,
                                                                       actor=L1330)})
L245 = envs.Env(parent=L215)
L243 = actors.Actor(env=envs.Env(parent=L245),
                    script=L220)
L394 = actors.Actor(env=envs.Env(parent=L364),
                    script=L396)
L472 = actors.Actor(env=envs.Env(parent=L434),
                    script=L474)

L237.define(var='yesbox',
            value=L238)

L237.define(var='askernode',
             value=L235)

L237.define(var='question',
             value=L253)

L237.define(var='nobox',
             value=L254)

L181.define(var='playgame',
             value=L182)

L181.define(var='call',
             value=L187)

L181.define(var='makebranch',
             value=L192)

L181.define(var='makeguess',
             value=L214)

L181.define(var='root',
             value=L234)

L156.define(var='box',
             value=L179)

L156.define(var='newanimalgame',
             value=L180)

L156.define(var='makemailbox',
             value=L283)

L156.define(var='animalgame',
             value=L297)

L156.define(var='mailbox',
             value=L153)

L156.define(var='maildirectory',
             value=L350)

L156.define(var='Foo',
             value=L352)

L157.define(var='false',
             value=L158)

L157.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L157.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L157.define(var='makestamp',
             value=builtin.StampMaker())

L157.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L157.define(var='makebox',
             value=L95)

L157.define(var='true',
             value=L168)

L157.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L157.define(var='if',
             value=actors.Actor(env=L157,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L624.define(var='false',
             value=L98)

L624.define(var='makestamp',
             value=L625)

L624.define(var='true',
             value=L626)

L624.define(var='makebox',
             value=L632)

L624.define(var='listguard',
             value=L633)

L108.define(var='true',
             value=L109)

L108.define(var='makebox',
             value=L115)

L108.define(var='false',
             value=L116)

L108.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L1280.define(var='false',
              value=builtin.Boolean(value=False,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='falseaction run',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['trueaction',
                                                                                             'falseaction'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1280.define(var='makebox',
              value=builtin.BoxMaker())

L1280.define(var='true',
              value=builtin.Boolean(value=True,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='trueaction run',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['trueaction',
                                                                                             'falseaction'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1280.define(var='listguard',
              value=builtin.TypeGuard(sample_instance=()))

L901.define(var='box',
             value=L902)

L901.define(var='makemailbox',
             value=L903)

L901.define(var='Foo',
             value=L917)

L901.define(var='mailbox',
             value=L924)

L901.define(var='maildirectory',
             value=L855)

L857.define(var='false',
             value=L858)

L857.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L857.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L857.define(var='makestamp',
             value=builtin.StampMaker())

L857.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L857.define(var='makebox',
             value=L868)

L857.define(var='true',
             value=L869)

L857.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L857.define(var='if',
             value=actors.Actor(env=L857,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L920._add_result(result=L922,
                  actor=L923)

L807.define(var='box',
             value=L830)

L807.define(var='makemailbox',
             value=L831)

L807.define(var='Foo',
             value=L845)

L807.define(var='maildirectory',
             value=L848)

L807.define(var='mailbox',
             value=L804)

L808.define(var='false',
             value=L809)

L808.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L808.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L808.define(var='makestamp',
             value=builtin.StampMaker())

L808.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L808.define(var='makebox',
             value=L361)

L808.define(var='true',
             value=L819)

L808.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L808.define(var='if',
             value=actors.Actor(env=L808,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L257.define(var='guessernode',
             value=L255)

L257.define(var='animal',
             value=L258)

L525.define(var='box',
             value=L549)

L525.define(var='makemailbox',
             value=L550)

L525.define(var='Foo',
             value=L523)

L525.define(var='mailbox',
             value=L564)

L525.define(var='maildirectory',
             value=L571)

L526.define(var='false',
             value=L527)

L526.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L526.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L526.define(var='makestamp',
             value=builtin.StampMaker())

L526.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L526.define(var='makebox',
             value=L537)

L526.define(var='true',
             value=L538)

L526.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L526.define(var='if',
             value=actors.Actor(env=L526,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L773._add_result(result=L775,
                  actor=L769)

L776._add_result(result=L778,
                  actor=L769)

L780._add_result(result=L523,
                  actor=L769)

L783._add_result(result=L549,
                  actor=L769)

L785._add_result(result=L538,
                  actor=L769)

L787._add_result(result=L527,
                  actor=L769)

L789._add_result(result=L791,
                  actor=L769)

L794._add_result(result=L571,
                  actor=L769)

L797._add_result(result=L564,
                  actor=L769)

L801._add_result(result=L769,
                  actor=L769)

L1341.define(var='node',
              value=L238)

L1341.define(var='asker',
              value=L1339)

L241.define(var='yesbox',
             value=builtin.Box(initial_value=L243))

L241.define(var='askernode',
             value=L239)

L241.define(var='question',
             value=L247)

L241.define(var='nobox',
             value=builtin.Box(initial_value=L249))

L900.define(var='mailbox',
             value=L924)

L900.define(var='inbox',
             value=L926)

L900.define(var='sender',
             value=L898)

L1120.define(var='makemailbox',
              value=actors.Actor(env=L1120,
                                 script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                                     inner_map={'sender': actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                                                                                                                                       inner_map={}),
                                                                                                                                                                serial_id=0,
                                                                                                                                                                parameters=['message'],
                                                                                                                                                                selector='send:')],
                                                                                                                                        next_serial_id=1),
                                                                                                                'mailbox': actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                                                                                                                                        inner_map={}),
                                                                                                                                                                 serial_id=0,
                                                                                                                                                                 parameters=[],
                                                                                                                                                                 selector='first'),
                                                                                                                                                   actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                                                                                                                                        inner_map={}),
                                                                                                                                                                 serial_id=1,
                                                                                                                                                                 parameters=[],
                                                                                                                                                                 selector='removefirst'),
                                                                                                                                                   actors.Method(body=actors.Expression(text='sender',
                                                                                                                                                                                        inner_map={}),
                                                                                                                                                                 serial_id=2,
                                                                                                                                                                 parameters=[],
                                                                                                                                                                 selector='sender')],
                                                                                                                                         next_serial_id=3)}),
                                                                              serial_id=0,
                                                                              parameters=[],
                                                                              selector='run')],
                                                      next_serial_id=1)))

L1120.define(var='maildirectory',
              value=builtin.MailDirectory(env=envs.Env(parent=L1121)))

L1121.define(var='false',
              value=builtin.Boolean(value=False,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='falsevalue',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['truevalue',
                                                                                             'falsevalue'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1121.define(var='numberguard',
              value=builtin.TypeGuard(sample_instance=0))

L1121.define(var='listguard',
              value=builtin.TypeGuard(sample_instance=()))

L1121.define(var='makestamp',
              value=builtin.StampMaker())

L1121.define(var='booleanguard',
              value=builtin.TypeGuard(sample_instance=True))

L1121.define(var='makebox',
              value=builtin.BoxMaker())

L1121.define(var='true',
              value=builtin.Boolean(value=True,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='truevalue',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['truevalue',
                                                                                             'falsevalue'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1121.define(var='stringguard',
              value=builtin.TypeGuard(sample_instance=''))

L1121.define(var='if',
              value=actors.Actor(env=L1121,
                                 script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                     inner_map={}),
                                                                              serial_id=0,
                                                                              parameters=['test',
                                                                                          'yes',
                                                                                          'no'],
                                                                              selector='true:then:else:')],
                                                      next_serial_id=1)))

L15.define(var='false',
            value=L16)

L15.define(var='numberguard',
            value=builtin.TypeGuard(sample_instance=0))

L15.define(var='listguard',
            value=builtin.TypeGuard(sample_instance=()))

L15.define(var='makestamp',
            value=builtin.StampMaker())

L15.define(var='booleanguard',
            value=builtin.TypeGuard(sample_instance=True))

L15.define(var='makebox',
            value=L26)

L15.define(var='true',
            value=L27)

L15.define(var='stringguard',
            value=builtin.TypeGuard(sample_instance=''))

L15.define(var='if',
            value=actors.Actor(env=L15,
                               script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                   inner_map={}),
                                                                            serial_id=0,
                                                                            parameters=['test',
                                                                                        'yes',
                                                                                        'no'],
                                                                            selector='true:then:else:')],
                                                    next_serial_id=1)))

L260._add_result(result=L187,
                  actor=L262)

L263._add_result(result=L192,
                  actor=L262)

L265._add_result(result=L214,
                  actor=L262)

L267._add_result(result='Error: No matching method: holding:',
                  actor=L262)

L269._add_result(result=L234,
                  actor=L262)

L271._add_result(result=L273,
                  actor=L262)

L276._add_result(result=L278,
                  actor=L262)

L281._add_result(result=L182,
                  actor=L262)

L1083.define(var='question',
              value=L1081)

L346.define(var='box',
             value=L327)

L346.define(var='guess',
             value=L344)

L346.define(var='animal',
             value=L347)

L298.define(var='makequestion',
             value=L299)

L298.define(var='makeguess',
             value=L311)

L298.define(var='gamebox',
             value=L327)

L107.define(var='box',
             value=L123)

L107.define(var='makemailbox',
             value=L124)

L107.define(var='mailbox',
             value=L138)

L107.define(var='maildirectory',
             value=L145)

L107.define(var='message',
             value=L147)

L107.define(var='Foo',
             value=L105)

L107.define(var='tome',
             value=L141)

L635.define(var='htmlguard',
             value=L636)

L635.define(var='markup',
             value=L638)

L635.define(var='html',
             value=L662)

L635.define(var='stamppair',
             value=L669)

L635.define(var='htmlstamp',
             value=L637)

L635.define(var='makeattr',
             value=L670)

L635.define(var='showattr',
             value=L679)

L623.define(var='box',
             value=L97)

L623.define(var='htmlmodule',
             value=L634)

L623.define(var='makemailbox',
             value=L712)

L623.define(var='mailbox',
             value=L620)

L623.define(var='maildirectory',
             value=L726)

L623.define(var='pair',
             value=L518)

L623.define(var='x',
             value=L728)

L623.define(var='Foo',
             value=L730)

L686._add_result(result=L669,
                  actor=L688)

L689._add_result(result=L637,
                  actor=L688)

L691._add_result(result=L636,
                  actor=L688)

L693._add_result(result=L638,
                  actor=L688)

L695._add_result(result=L662,
                  actor=L688)

L697._add_result(result=L670,
                  actor=L688)

L699._add_result(result=L679,
                  actor=L688)

L701._add_result(result=L703,
                  actor=L688)

L704._add_result(result=L706,
                  actor=L688)

L707._add_result(result=L709,
                  actor=L688)

L710._add_result(result='Error: No matching method: show',
                  actor=L688)

L1591.define(var='node',
              value=L234)

L1591.define(var='asker',
              value=L1589)

L932._add_result(result=L934,
                  actor=L928)

L935._add_result(result=L937,
                  actor=L928)

L939._add_result(result=L352,
                  actor=L928)

L942._add_result(result=L179,
                  actor=L928)

L944._add_result(result=L168,
                  actor=L928)

L946._add_result(result=L158,
                  actor=L928)

L948._add_result(result=L950,
                  actor=L928)

L953._add_result(result=L350,
                  actor=L928)

L956._add_result(result=L153,
                  actor=L928)

L960._add_result(result=L297,
                  actor=L928)

L337._add_result(result=L327,
                  actor=L339)

L340._add_result(result=L311,
                  actor=L339)

L342._add_result(result=L344,
                  actor=L339)

L348._add_result(result=L328,
                  actor=L339)

L962._add_result(result=L180,
                  actor=L928)

L743.define(var='true',
             value=builtin.Boolean(value=True,
                                   script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                       inner_map={}),
                                                                                serial_id=0,
                                                                                parameters=[],
                                                                                selector='not'),
                                                                  actors.Method(body=actors.Expression(text='trueaction run',
                                                                                                       inner_map={}),
                                                                                serial_id=1,
                                                                                parameters=['trueaction',
                                                                                            'falseaction'],
                                                                                selector='iftrue:iffalse:')],
                                                        next_serial_id=2)))

L743.define(var='makebox',
             value=builtin.BoxMaker())

L743.define(var='false',
             value=builtin.Boolean(value=False,
                                   script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                       inner_map={}),
                                                                                serial_id=0,
                                                                                parameters=[],
                                                                                selector='not'),
                                                                  actors.Method(body=actors.Expression(text='falseaction run',
                                                                                                       inner_map={}),
                                                                                serial_id=1,
                                                                                parameters=['trueaction',
                                                                                            'falseaction'],
                                                                                selector='iftrue:iffalse:')],
                                                        next_serial_id=2)))

L743.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L1355._add_result(result=L77,
                   actor=L1351)

L1357._add_result(result=L1359,
                   actor=L1351)

L1361._add_result(result=L105,
                   actor=L1351)

L1364._add_result(result=L123,
                   actor=L1351)

L1366._add_result(result=L109,
                   actor=L1351)

L1368._add_result(result=L116,
                   actor=L1351)

L1370._add_result(result=L1372,
                   actor=L1351)

L1375._add_result(result=L145,
                   actor=L1351)

L1378._add_result(result=L138,
                   actor=L1351)

L1382._add_result(result=L141,
                   actor=L1351)

L1384._add_result(result=L1279,
                   actor=L1351)

L1386._add_result(result=L1388,
                   actor=L1351)

L1389._add_result(result='Error: exceptions.ZeroDivisionError: float division',
                   actor=L1351)

L1391._add_result(result='Error: Unbound: makestamp',
                   actor=L1351)

L330.define(var='query',
             value=L331)

L330.define(var='onyes',
             value=L332)

L330.define(var='onno',
             value=L299)

L330.define(var='yesnoquestion',
             value=L328)

L14.define(var='box',
            value=L38)

L14.define(var='sender',
            value=L39)

L14.define(var='makemailbox',
            value=L44)

L14.define(var='mailbox',
            value=L11)

L14.define(var='makeballot',
            value=L55)

L14.define(var='maildirectory',
            value=L63)

L14.define(var='message',
            value=L65)

L14.define(var='Foo',
            value=L69)

L140.define(var='sender',
             value=L141)

L140.define(var='inbox',
             value=L143)

L140.define(var='mailbox',
             value=L138)

L583.define(var='false',
             value=L4)

L583.define(var='makestamp',
             value=L584)

L583.define(var='true',
             value=L585)

L583.define(var='makebox',
             value=L591)

L583.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L435.define(var='false',
             value=L426)

L435.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L435.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L435.define(var='makestamp',
             value=builtin.StampMaker())

L435.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L435.define(var='makebox',
             value=L440)

L435.define(var='true',
             value=L441)

L435.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L435.define(var='if',
             value=actors.Actor(env=L435,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L1073.define(var='node',
              value=L238)

L1073.define(var='guesser',
              value=L1071)

L251.define(var='guessernode',
             value=L249)

L251.define(var='animal',
             value=L252)

L364.define(var='box',
             value=L388)

L364.define(var='makemailbox',
             value=L363)

L364.define(var='mailbox',
             value=L389)

L364.define(var='makeballot',
             value=L412)

L364.define(var='maildirectory',
             value=L417)

L364.define(var='message',
             value=L394)

L364.define(var='Foo',
             value=L419)

L365.define(var='false',
             value=L366)

L365.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L365.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L365.define(var='makestamp',
             value=builtin.StampMaker())

L365.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L365.define(var='makebox',
             value=L376)

L365.define(var='true',
             value=L377)

L365.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L365.define(var='if',
             value=actors.Actor(env=L365,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L1348.define(var='node',
              value=L254)

L1348.define(var='guesser',
              value=L1346)

L1011._add_result(result=L1013,
                   actor=L1007)

L1014._add_result(result=L89,
                   actor=L1007)

L1017._add_result(result=L69,
                   actor=L1007)

L1020._add_result(result=L38,
                   actor=L1007)

L1022._add_result(result=L27,
                   actor=L1007)

L1024._add_result(result=L16,
                   actor=L1007)

L1026._add_result(result=L81,
                   actor=L1007)

L1029._add_result(result=L63,
                   actor=L1007)

L1032._add_result(result=L11,
                   actor=L1007)

L1036._add_result(result='Error: No matching method: size',
                   actor=L1007)

L1038._add_result(result=L740,
                   actor=L1007)

L1040._add_result(result=L39,
                   actor=L1007)

L1042._add_result(result=L84,
                   actor=L1007)

L1044._add_result(result=L55,
                   actor=L1007)

L622.define(var='mailbox',
             value=L620)

L622.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L622),
                                script=L716))

L622.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=())))

L612.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=())))

L612.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L612),
                                script=L598))

L612.define(var='mailbox',
             value=L610)

L582.define(var='box',
             value=L593)

L582.define(var='makemailbox',
             value=L594)

L582.define(var='Foo',
             value=L580)

L582.define(var='maildirectory',
             value=L608)

L582.define(var='mailbox',
             value=L610)

L13.define(var='mailbox',
            value=L11)

L13.define(var='sender',
            value=L39)

L13.define(var='inbox',
            value=L74)

L434.define(var='box',
             value=L452)

L434.define(var='makemailbox',
             value=L453)

L434.define(var='mailbox',
             value=L467)

L434.define(var='maildirectory',
             value=L477)

L434.define(var='message',
             value=L472)

L434.define(var='Foo',
             value=L479)

L484._add_result(result=L486,
                  actor=L432)

L487._add_result(result=L489,
                  actor=L432)

L491._add_result(result=L479,
                  actor=L432)

L494._add_result(result=L452,
                  actor=L432)

L496._add_result(result=L441,
                  actor=L432)

L498._add_result(result=L426,
                  actor=L432)

L500._add_result(result=L502,
                  actor=L432)

L505._add_result(result=L477,
                  actor=L432)

L508._add_result(result=L467,
                  actor=L432)

L512._add_result(result=L514,
                  actor=L432)

L889.define(var='inbox',
             value=L890)

L889.define(var='sender',
             value=L887)

L889.define(var='mailbox',
             value=L892)

L1202.define(var='makemailbox',
              value=actors.Actor(env=L1202,
                                 script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                                     inner_map={'sender': actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                                                                                                                                       inner_map={}),
                                                                                                                                                                serial_id=0,
                                                                                                                                                                parameters=['message'],
                                                                                                                                                                selector='send:')],
                                                                                                                                        next_serial_id=1),
                                                                                                                'mailbox': actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                                                                                                                                        inner_map={}),
                                                                                                                                                                 serial_id=0,
                                                                                                                                                                 parameters=[],
                                                                                                                                                                 selector='first'),
                                                                                                                                                   actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                                                                                                                                        inner_map={}),
                                                                                                                                                                 serial_id=1,
                                                                                                                                                                 parameters=[],
                                                                                                                                                                 selector='removefirst'),
                                                                                                                                                   actors.Method(body=actors.Expression(text='sender',
                                                                                                                                                                                        inner_map={}),
                                                                                                                                                                 serial_id=2,
                                                                                                                                                                 parameters=[],
                                                                                                                                                                 selector='sender')],
                                                                                                                                         next_serial_id=3)}),
                                                                              serial_id=0,
                                                                              parameters=[],
                                                                              selector='run')],
                                                      next_serial_id=1)))

L1202.define(var='maildirectory',
              value=builtin.MailDirectory(env=envs.Env(parent=L1203)))

L1203.define(var='false',
              value=builtin.Boolean(value=False,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='falsevalue',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['truevalue',
                                                                                             'falsevalue'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1203.define(var='numberguard',
              value=builtin.TypeGuard(sample_instance=0))

L1203.define(var='listguard',
              value=builtin.TypeGuard(sample_instance=()))

L1203.define(var='makestamp',
              value=builtin.StampMaker())

L1203.define(var='booleanguard',
              value=builtin.TypeGuard(sample_instance=True))

L1203.define(var='makebox',
              value=builtin.BoxMaker())

L1203.define(var='true',
              value=builtin.Boolean(value=True,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='truevalue',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['truevalue',
                                                                                             'falsevalue'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1203.define(var='stringguard',
              value=builtin.TypeGuard(sample_instance=''))

L1203.define(var='if',
              value=actors.Actor(env=L1203,
                                 script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                     inner_map={}),
                                                                              serial_id=0,
                                                                              parameters=['test',
                                                                                          'yes',
                                                                                          'no'],
                                                                              selector='true:then:else:')],
                                                      next_serial_id=1)))

L1053.define(var='terminus',
              value=L1051)

L275.define(var='node',
             value=L234)

L275.define(var='guesser',
             value=L273)

L1502.define(var='false',
              value=builtin.Boolean(value=False,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='falseaction run',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['trueaction',
                                                                                             'falseaction'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1502.define(var='makestamp',
              value=builtin.StampMaker())

L1502.define(var='true',
              value=builtin.Boolean(value=True,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='trueaction run',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['trueaction',
                                                                                             'falseaction'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1502.define(var='makebox',
              value=builtin.BoxMaker())

L1502.define(var='listguard',
              value=builtin.TypeGuard(sample_instance=()))

L1563._add_result(result=L1455,
                   actor=L1559)

L1565._add_result(result=L1405,
                   actor=L1559)

L1568._add_result(result=L917,
                   actor=L1559)

L1571._add_result(result=L902,
                   actor=L1559)

L1573._add_result(result=L869,
                   actor=L1559)

L1575._add_result(result=L858,
                   actor=L1559)

L1577._add_result(result=L1460,
                   actor=L1559)

L1580._add_result(result=L855,
                   actor=L1559)

L1583._add_result(result=L924,
                   actor=L1559)

L391.define(var='mailbox',
             value=L389)

L391.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=(L394,))))

L391.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L391),
                                script=L402))

L469.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=(L472,))))

L469.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L469),
                                script=L457))

L469.define(var='mailbox',
             value=L467)

L280.define(var='node',
             value=L234)

L280.define(var='asker',
             value=L278)

L1307.define(var='question',
              value=L1305)

L1193.define(var='question',
              value=L1191)

L334.define(var='box',
             value=L327)

L334.define(var='guess',
             value=L332)

L334.define(var='animal',
             value=L335)

L969._add_result(result=L971,
                  actor=L965)

L972._add_result(result=L974,
                  actor=L965)

L976._add_result(result=L419,
                  actor=L965)

L979._add_result(result=L388,
                  actor=L965)

L981._add_result(result=L377,
                  actor=L965)

L983._add_result(result=L366,
                  actor=L965)

L985._add_result(result=L987,
                  actor=L965)

L990._add_result(result=L417,
                  actor=L965)

L993._add_result(result=L389,
                  actor=L965)

L997._add_result(result=L999,
                  actor=L965)

L1001._add_result(result='Error: Unbound: makek',
                   actor=L965)

L1003._add_result(result=L412,
                   actor=L965)

L155.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L155),
                                script=L287))

L155.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=())))

L155.define(var='mailbox',
             value=L153)

L1058.define(var='query',
              value=builtin.String(str='Does it bark?'))

L1058.define(var='question',
              value=L1056)

L1058.define(var='animal',
              value=builtin.String(str='dog'))

L1529._add_result(result=L1271,
                   actor=L1525)

L1531._add_result(result=L79,
                   actor=L1525)

L1534._add_result(result=L845,
                   actor=L1525)

L1537._add_result(result=L830,
                   actor=L1525)

L1539._add_result(result=L819,
                   actor=L1525)

L1541._add_result(result=L809,
                   actor=L1525)

L1543._add_result(result=L1078,
                   actor=L1525)

L1546._add_result(result=L848,
                   actor=L1525)

L1549._add_result(result=L804,
                   actor=L1525)

L1553._add_result(result=L1271,
                   actor=L1525)

L1555._add_result(result=L1445,
                   actor=L1525)

L1088._add_result(result=L881,
                   actor=L1084)

L1090._add_result(result=L884,
                   actor=L1084)

L1093._add_result(result=L730,
                   actor=L1084)

L1096._add_result(result=L97,
                   actor=L1084)

L1098._add_result(result=L626,
                   actor=L1084)

L1100._add_result(result=L98,
                   actor=L1084)

L1102._add_result(result=L763,
                   actor=L1084)

L1105._add_result(result=L726,
                   actor=L1084)

L1108._add_result(result=L620,
                   actor=L1084)

L1112._add_result(result=L634,
                   actor=L1084)

L1411._add_result(result=L1303,
                   actor=L1407)

L1413._add_result(result=L1415,
                   actor=L1407)

L1417._add_result(result=L580,
                   actor=L1407)

L1420._add_result(result=L593,
                   actor=L1407)

L1422._add_result(result=L585,
                   actor=L1407)

L1424._add_result(result=L4,
                   actor=L1407)

L1426._add_result(result=L1428,
                   actor=L1407)

L1431._add_result(result=L608,
                   actor=L1407)

L1434._add_result(result=L610,
                   actor=L1407)

L1438._add_result(result='Error: exceptions.TypeError: unbound method __init__() must be called with Actor instance as first argument (got Stamp instance instead)',
                   actor=L1407)

L806.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L806),
                                script=L835))

L806.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=())))

L806.define(var='mailbox',
             value=L804)

L566.define(var='mailbox',
             value=L564)

L566.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L566),
                                script=L554))

L566.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=())))

L1487.define(var='terminus',
              value=L1485)

L245.define(var='guessernode',
             value=L243)

L245.define(var='animal',
             value=builtin.String(str='fraidycat'))

L0
root = L0
