import actors
import builtin
import envs
import registry

L100 = builtin.BoxMaker()
L1160 = actors.ActorEditor(editable=False,
                           actor=L100)
L978 = builtin.List(elements=(builtin.String(str='hello'),))
L1519 = actors.ActorEditor(editable=False,
                           actor=L978)
L648 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='trueaction run',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['trueaction',
                                                                                'falseaction'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1688 = actors.ActorEditor(editable=False,
                           actor=L648)
L34 = builtin.Boolean(value=False,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='falsevalue',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['truevalue',
                                                                               'falsevalue'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L871 = builtin.Box(initial_value=L34)
L1164 = actors.ActorEditor(editable=False,
                           actor=L871)
L1580 = envs.Env(parent=None)
L1579 = envs.Env(parent=L1580)
L1578 = actors.Actor(env=L1579,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    actors.Example(expression=actors.Expression(text='2 + 3',
                                                                                                inner_map={}),
                                                                   serial_id=1),
                                                    actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                                                                inner_map={}),
                                                                   serial_id=2),
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    actors.Example(expression=actors.Expression(text='make Foo',
                                                                                                inner_map={}),
                                                                   serial_id=4),
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                                                                inner_map={}),
                                                                   serial_id=6),
                                                    actors.Example(expression=actors.Expression(text='box get',
                                                                                                inner_map={}),
                                                                   serial_id=7),
                                                    actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                                                                inner_map={}),
                                                                   serial_id=8),
                                                    actors.Example(expression=actors.Expression(text="['hello']",
                                                                                                inner_map={}),
                                                                   serial_id=9),
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    actors.Example(expression=actors.Expression(text='maildirectory',
                                                                                                inner_map={}),
                                                                   serial_id=11),
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                                                                inner_map={}),
                                                                   serial_id=13),
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15)],
                                          next_serial_id=16))
L1577 = actors.ActorEditor(editable=True,
                           actor=L1578)
L33 = envs.Env(parent=None)
L870 = envs.Env(parent=L33)
L874 = envs.Env(parent=L870)
L888 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L872 = actors.Actor(env=envs.Env(parent=L874),
                    script=L888)
L1701 = actors.ActorEditor(editable=True,
                           actor=L872)
L472 = builtin.Box(initial_value=builtin.List(elements=()))
L1374 = actors.ActorEditor(editable=False,
                           actor=L472)
L58 = envs.Env(parent=None)
L344 = builtin.MailDirectory(env=envs.Env(parent=L58))
L343 = actors.ActorEditor(editable=False,
                          actor=L344)
L14 = envs.Env(parent=None)
L533 = envs.Env(parent=L14)
L532 = envs.Env(parent=L533)
L552 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'<' + tag + (attributes foldr: showattr initially: '>')",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='show')],
                     next_serial_id=1)
L560 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'<' + tag + (attributes foldr: showattr initially: '>') + \r\n  (elements foldr: showattr initially: '') + \r\n  '</' + tag + '>'",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='show')],
                     next_serial_id=1)
L567 = actors.Script(elements=[],
                     next_serial_id=0)
L568 = actors.Script(elements=[],
                     next_serial_id=0)
L569 = actors.Script(elements=[],
                     next_serial_id=0)
L570 = actors.Script(elements=[],
                     next_serial_id=0)
L549 = actors.Script(elements=[actors.Method(body=actors.Expression(text='stringguard check: tag.\r\nlistguard check: attributes.\r\nhtmlstamp stamp: make element',
                                                                    inner_map={'element': L552}),
                                             serial_id=0,
                                             parameters=['tag',
                                                         'attributes'],
                                             selector='lonetag:attributes:'),
                               actors.Text(body='XXX must check each attribute as well',
                                           serial_id=1),
                               actors.Method(body=actors.Expression(text='markup lonetag: tag attributes: []',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=['tag'],
                                             selector='lonetag:'),
                               actors.Method(body=actors.Expression(text='stringguard check: tag.\r\nlistguard check: attributes.\r\nlistguard check: elements.\r\nhtmlstamp stamp: make element',
                                                                    inner_map={'element': L560}),
                                             serial_id=3,
                                             parameters=['tag',
                                                         'attributes',
                                                         'elements'],
                                             selector='tag:attributes:elements:'),
                               actors.Method(body=actors.Expression(text='markup tag: tag attributes: [] elements: elements',
                                                                    inner_map={}),
                                             serial_id=4,
                                             parameters=['tag',
                                                         'elements'],
                                             selector='tag:elements:'),
                               actors.Method(body=actors.Expression(text='if true: (htmlguard passes: object)\r\n   then: make onhtml\r\n   else: (if true: (listguard passes: object)\r\n               then: make onlist\r\n               else: (if true: (stringguard passes: object)\r\n                           then: make onstring\r\n                           else: make onerror))',
                                                                    inner_map={'onerror': L567,
                                                                               'onlist': L568,
                                                                               'onhtml': L569,
                                                                               'onstring': L570}),
                                             serial_id=5,
                                             parameters=['object'],
                                             selector='coerce:')],
                     next_serial_id=6)
L571 = actors.Actor(env=envs.Env(parent=L532),
                    script=L549)
L1159 = actors.ActorEditor(editable=True,
                           actor=L571)
L1252 = builtin.List(elements=(builtin.String(str='hello'),))
L1251 = actors.ActorEditor(editable=False,
                           actor=L1252)
L89 = envs.Env(parent=None)
L88 = envs.Env(parent=L89)
L87 = envs.Env(parent=L88)
L117 = actors.Script(elements=[actors.Method(body=actors.Expression(text='(box get) on: box',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['box'],
                                             selector='on:')],
                     next_serial_id=1)
L120 = actors.Actor(env=envs.Env(parent=L87),
                    script=L117)
L1130 = actors.ActorEditor(editable=True,
                           actor=L120)
L168 = envs.Env(parent=L87)
L190 = envs.Env(parent=L168)
L189 = envs.Env(parent=L190)
L163 = actors.Script(elements=[actors.Text(body="I'm out of ideas about your animal -- please tell me its name and a question to ask in the future, such that yes is the right answer for it.",
                                           serial_id=0),
                               actors.Method(body=actors.Expression(text="node <- (makebranch on: question ifyes: (makebox holding: (makeguess for: animal)) ifno: (makebox holding: guessernode)).\r\n'Thanks, I will remember.'",
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=['animal',
                                                         'question'],
                                             selector='name:question:')],
                     next_serial_id=3)
L156 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'Is it a ' + animal + '?'",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='question'),
                               actors.Method(body=actors.Expression(text="'Wavy!'",
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='make terminus',
                                                                    inner_map={'terminus': L163}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L153 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make guesser',
                                                                    inner_map={'guesser': L156}),
                                             serial_id=0,
                                             parameters=['node'],
                                             selector='on:')],
                     next_serial_id=1)
L188 = actors.Actor(env=L189,
                    script=L153)
L1675 = actors.ActorEditor(editable=True,
                           actor=L188)
L778 = envs.Env(parent=None)
L777 = envs.Env(parent=L778)
L807 = envs.Env(parent=L777)
L815 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L805 = actors.Actor(env=envs.Env(parent=L807),
                    script=L815)
L1001 = actors.ActorEditor(editable=True,
                           actor=L805)
L228 = envs.Env(parent=L88)
L242 = envs.Env(parent=L228)
L276 = envs.Env(parent=L242)
L275 = envs.Env(parent=L276)
L1683 = envs.Env(parent=L275)
L253 = actors.Script(elements=[actors.Text(body="I'm out of guesses about your animal.  Please tell me its name and a new question I can ask, so that your animal has a yes answer.  Thanks!",
                                           serial_id=0),
                               actors.Method(body=actors.Expression(text="box <- (makequestion asking: question ifyes: (makeguess name: animal parent: box) ifno: (box get)).\r\n'OK!'\r\n",
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=['animal',
                                                         'question'],
                                             selector='name:question:')],
                     next_serial_id=2)
L1681 = actors.Actor(env=envs.Env(parent=L1683),
                     script=L253)
L1680 = actors.ActorEditor(editable=True,
                           actor=L1681)
L607 = builtin.String(str='<blockquote> <p></blockquote>')
L1569 = actors.ActorEditor(editable=False,
                           actor=L607)
L1295 = builtin.Number(n=5.0)
L1435 = actors.ActorEditor(editable=False,
                           actor=L1295)
L293 = builtin.Stamp()
L632 = builtin.StampGuard(stamp=L293)
L1522 = actors.ActorEditor(editable=False,
                           actor=L632)
L1335 = envs.Env(parent=None)
L1334 = envs.Env(parent=L1335)
L1333 = envs.Env(parent=L1334)
L1352 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=[],
                                              selector='first'),
                                actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                     inner_map={}),
                                              serial_id=1,
                                              parameters=[],
                                              selector='removefirst'),
                                actors.Method(body=actors.Expression(text='sender',
                                                                     inner_map={}),
                                              serial_id=2,
                                              parameters=[],
                                              selector='sender')],
                      next_serial_id=3)
L1331 = actors.Actor(env=envs.Env(parent=L1333),
                     script=L1352)
L1330 = actors.ActorEditor(editable=True,
                           actor=L1331)
L230 = envs.Env(parent=L228)
L422 = envs.Env(parent=L230)
L425 = actors.Script(elements=[],
                     next_serial_id=0)
L420 = actors.Actor(env=envs.Env(parent=L422),
                    script=L425)
L419 = actors.ActorEditor(editable=True,
                          actor=L420)
L1427 = builtin.Number(n=5.0)
L1426 = actors.ActorEditor(editable=False,
                           actor=L1427)
L300 = envs.Env(parent=None)
L299 = envs.Env(parent=L300)
L325 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L330 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L298 = actors.Actor(env=L299,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L325,
                                                                                                   'mailbox': L330}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L297 = actors.ActorEditor(editable=True,
                          actor=L298)
L1201 = builtin.Number(n=5.0)
L1200 = actors.ActorEditor(editable=False,
                           actor=L1201)
L1792 = builtin.String(str='<p/>')
L1791 = actors.ActorEditor(editable=False,
                           actor=L1792)
L614 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L617 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L610 = actors.Actor(env=L533,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L614,
                                                                                                   'mailbox': L617}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1667 = actors.ActorEditor(editable=True,
                           actor=L610)
L21 = builtin.StampMaker()
L1520 = actors.ActorEditor(editable=False,
                           actor=L21)
L427 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falseaction run',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['trueaction',
                                                                                'falseaction'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L655 = builtin.Box(initial_value=L427)
L1659 = actors.ActorEditor(editable=False,
                           actor=L655)
L832 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1322 = actors.ActorEditor(editable=False,
                           actor=L832)
L855 = builtin.Number(n=5.0)
L854 = actors.ActorEditor(editable=False,
                          actor=L855)
L752 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1686 = actors.ActorEditor(editable=False,
                           actor=L752)
L348 = builtin.String(str='hello')
L347 = actors.ActorEditor(editable=False,
                          actor=L348)
L1790 = builtin.Number(n=7.0)
L1789 = actors.ActorEditor(editable=False,
                           actor=L1790)
L447 = builtin.BoxMaker()
L1565 = actors.ActorEditor(editable=False,
                           actor=L447)
L152 = actors.Script(elements=[],
                     next_serial_id=0)
L149 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make guessernode',
                                                                    inner_map={'guesser': L152,
                                                                               'guessernode': L153}),
                                             serial_id=0,
                                             parameters=['animal'],
                                             selector='for:')],
                     next_serial_id=1)
L167 = actors.Actor(env=L168,
                    script=L149)
L1704 = actors.ActorEditor(editable=True,
                           actor=L167)
L1277 = builtin.Number(n=25.0)
L1276 = actors.ActorEditor(editable=False,
                           actor=L1277)
L186 = builtin.String(str='Is it easily frightened?')
L1432 = actors.ActorEditor(editable=False,
                           actor=L186)
L1698 = builtin.String(str='Is it a dog?')
L1697 = actors.ActorEditor(editable=False,
                           actor=L1698)
L496 = envs.Env(parent=L58)
L524 = actors.Script(elements=[],
                     next_serial_id=0)
L522 = actors.Actor(env=envs.Env(parent=L496),
                    script=L524)
L1649 = actors.ActorEditor(editable=True,
                           actor=L522)
L350 = builtin.BoxMaker()
L349 = actors.ActorEditor(editable=False,
                          actor=L350)
L234 = actors.Script(elements=[actors.Method(body=actors.Expression(text='query',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='question'),
                               actors.Method(body=actors.Expression(text='onyes\r\n',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='onno\r\n',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L231 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make yesnoquestion\r\n',
                                                                    inner_map={'yesnoquestion': L234}),
                                             serial_id=2,
                                             parameters=['query',
                                                         'onyes',
                                                         'onno'],
                                             selector='asking:ifyes:ifno:')],
                     next_serial_id=3)
L229 = actors.Actor(env=L230,
                    script=L231)
L1288 = actors.ActorEditor(editable=True,
                           actor=L229)
L191 = builtin.String(str='cat')
L1568 = actors.ActorEditor(editable=False,
                           actor=L191)
L436 = envs.Env(parent=None)
L467 = builtin.MailDirectory(env=envs.Env(parent=L436))
L1571 = actors.ActorEditor(editable=False,
                           actor=L467)
L789 = builtin.BoxMaker()
L1048 = actors.ActorEditor(editable=False,
                           actor=L789)
L291 = actors.Script(elements=[],
                     next_serial_id=0)
L289 = actors.Actor(env=envs.Env(parent=L88),
                    script=L291)
L1685 = actors.ActorEditor(editable=True,
                           actor=L289)
L448 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1666 = actors.ActorEditor(editable=False,
                           actor=L448)
L1362 = builtin.MailDirectory(env=envs.Env(parent=L1335))
L1658 = actors.ActorEditor(editable=False,
                           actor=L1362)
L45 = builtin.Boolean(value=True,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='truevalue',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['truevalue',
                                                                               'falsevalue'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L1692 = actors.ActorEditor(editable=False,
                           actor=L45)
L31 = builtin.MailDirectory(env=envs.Env(parent=L33))
L30 = actors.ActorEditor(editable=False,
                         actor=L31)
L690 = builtin.Number(n=5.0)
L1424 = actors.ActorEditor(editable=False,
                           actor=L690)
L260 = envs.Env(parent=L230)
L258 = actors.Actor(env=envs.Env(parent=L260),
                    script=L234)
L1572 = actors.ActorEditor(editable=True,
                           actor=L258)
L146 = envs.Env(parent=L87)
L180 = envs.Env(parent=L146)
L179 = envs.Env(parent=L180)
L1158 = envs.Env(parent=L179)
L131 = actors.Script(elements=[actors.Method(body=actors.Expression(text='question',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='question'),
                               actors.Method(body=actors.Expression(text='call on: yesbox',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='call on: nobox',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L1156 = actors.Actor(env=envs.Env(parent=L1158),
                     script=L131)
L1155 = actors.ActorEditor(editable=True,
                           actor=L1156)
L997 = builtin.Box(initial_value=L752)
L996 = actors.ActorEditor(editable=False,
                          actor=L997)
L59 = builtin.Boolean(value=False,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='falsevalue',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['truevalue',
                                                                               'falsevalue'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L497 = builtin.Box(initial_value=L59)
L1278 = actors.ActorEditor(editable=False,
                           actor=L497)
L646 = envs.Env(parent=None)
L645 = envs.Env(parent=L646)
L685 = actors.Script(elements=[],
                     next_serial_id=0)
L683 = actors.Actor(env=envs.Env(parent=L645),
                    script=L685)
L1713 = actors.ActorEditor(editable=True,
                           actor=L683)
L1695 = builtin.Number(n=10)
L1694 = actors.ActorEditor(editable=False,
                           actor=L1695)
L1054 = builtin.Boolean(value=False,
                        script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                            inner_map={}),
                                                                     serial_id=0,
                                                                     parameters=[],
                                                                     selector='not'),
                                                       actors.Method(body=actors.Expression(text='falsevalue',
                                                                                            inner_map={}),
                                                                     serial_id=1,
                                                                     parameters=['truevalue',
                                                                                 'falsevalue'],
                                                                     selector='iftrue:iffalse:')],
                                             next_serial_id=2))
L1053 = builtin.Box(initial_value=L1054)
L1052 = actors.ActorEditor(editable=False,
                           actor=L1053)
L960 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                   inner_map={}),
                      serial_id=1)
L963 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                   inner_map={}),
                      serial_id=2)
L637 = actors.Script(elements=[],
                     next_serial_id=0)
L967 = actors.Example(expression=actors.Expression(text='make Foo',
                                                   inner_map={'Foo': L637}),
                      serial_id=4)
L970 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                   inner_map={}),
                      serial_id=6)
L972 = actors.Example(expression=actors.Expression(text='box get',
                                                   inner_map={}),
                      serial_id=7)
L974 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                   inner_map={}),
                      serial_id=8)
L976 = actors.Example(expression=actors.Expression(text="['hello']",
                                                   inner_map={}),
                      serial_id=9)
L981 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                   inner_map={}),
                      serial_id=11)
L984 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                   inner_map={}),
                      serial_id=13)
L537 = actors.Example(expression=actors.Expression(text='let stamppair = makestamp run',
                                                   inner_map={}),
                      serial_id=0)
L543 = actors.Example(expression=actors.Expression(text='let htmlstamp = stamppair at: 1',
                                                   inner_map={}),
                      serial_id=1)
L545 = actors.Example(expression=actors.Expression(text='let htmlguard = stamppair at: 2',
                                                   inner_map={}),
                      serial_id=2)
L547 = actors.Example(expression=actors.Expression(text='make markup',
                                                   inner_map={'markup': L549}),
                      serial_id=4)
L575 = actors.Script(elements=[actors.Method(body=actors.Expression(text="markup lonetag: 'p'",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='p'),
                               actors.Method(body=actors.Expression(text="markup tag: 'blockquote' elements: elements",
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=['elements'],
                                             selector='blockquote:')],
                     next_serial_id=2)
L573 = actors.Example(expression=actors.Expression(text='make html',
                                                   inner_map={'html': L575}),
                      serial_id=5)
L587 = actors.Script(elements=[actors.Method(body=actors.Expression(text='name htmlescaped + \'="\' +value htmlescaped + \'"\'',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='show'),
                               actors.Text(body='XXX need to html-escape the strings',
                                           serial_id=1)],
                     next_serial_id=2)
L584 = actors.Script(elements=[actors.Method(body=actors.Expression(text='stringguard check: name.\r\nstringguard check: value.\r\nmake attribute',
                                                                    inner_map={'attribute': L587}),
                                             serial_id=0,
                                             parameters=['name',
                                                         'value'],
                                             selector='name:value:')],
                     next_serial_id=1)
L582 = actors.Example(expression=actors.Expression(text='make makeattr',
                                                   inner_map={'makeattr': L584}),
                      serial_id=8)
L595 = actors.Script(elements=[actors.Method(body=actors.Expression(text="' ' + attribute show + string",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['attribute',
                                                         'string'],
                                             selector='left:right:'),
                               actors.Text(body='XXX rename this since it generically applies to html elements',
                                           serial_id=1)],
                     next_serial_id=2)
L593 = actors.Example(expression=actors.Expression(text='make showattr',
                                                   inner_map={'showattr': L595}),
                      serial_id=9)
L599 = actors.Example(expression=actors.Expression(text='html p show',
                                                   inner_map={}),
                      serial_id=12)
L602 = actors.Example(expression=actors.Expression(text='(html blockquote: []) show',
                                                   inner_map={}),
                      serial_id=14)
L605 = actors.Example(expression=actors.Expression(text='(html blockquote: [html p]) show',
                                                   inner_map={}),
                      serial_id=15)
L608 = actors.Example(expression=actors.Expression(text="(html blockquote: ['hello']) show",
                                                   inner_map={}),
                      serial_id=16)
L536 = actors.Script(elements=[L537,
                               L543,
                               L545,
                               L547,
                               L573,
                               L582,
                               L593,
                               L599,
                               L602,
                               L605,
                               L608],
                     next_serial_id=17)
L988 = actors.Example(expression=actors.Expression(text='make htmlmodule',
                                                   inner_map={'htmlmodule': L536}),
                      serial_id=25)
L957 = actors.Actor(env=L533,
                    script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                               serial_id=0),
                                                   L960,
                                                   L963,
                                                   actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                               serial_id=3),
                                                   L967,
                                                   actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                               serial_id=5),
                                                   L970,
                                                   L972,
                                                   L974,
                                                   L976,
                                                   actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                               serial_id=10),
                                                   L981,
                                                   actors.Text(body='You can create your own mailbox:',
                                                               serial_id=12),
                                                   L984,
                                                   actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                               serial_id=14),
                                                   actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                               serial_id=15),
                                                   L988],
                                         next_serial_id=26))
L956 = actors.ActorEditor(editable=True,
                          actor=L957)
L282 = envs.Env(parent=L88)
L220 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L280 = actors.Actor(env=envs.Env(parent=L282),
                    script=L220)
L1203 = actors.ActorEditor(editable=True,
                           actor=L280)
L746 = builtin.Number(n=25.0)
L745 = actors.ActorEditor(editable=False,
                          actor=L746)
L540 = builtin.Stamp()
L1748 = actors.ActorEditor(editable=False,
                           actor=L540)
L928 = builtin.List(elements=(builtin.String(str='hello'),))
L1419 = actors.ActorEditor(editable=False,
                           actor=L928)
L83 = builtin.Number(n=29.0)
L82 = actors.ActorEditor(editable=False,
                         actor=L83)
L28 = builtin.BoxMaker()
L1051 = actors.ActorEditor(editable=False,
                           actor=L28)
L885 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L869 = actors.Actor(env=L870,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L885,
                                                                                                   'mailbox': L888}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L868 = actors.ActorEditor(editable=True,
                          actor=L869)
L1538 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1540 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L319 = actors.Script(elements=[],
                     next_serial_id=0)
L1543 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L319}),
                       serial_id=4)
L1546 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1548 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1550 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1552 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1555 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1558 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1563 = actors.Example(expression=actors.Expression(text="maildirectory at: 'alice' put: mailbox sender",
                                                    inner_map={}),
                       serial_id=17)
L1535 = actors.Actor(env=L299,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1538,
                                                    L1540,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1543,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1546,
                                                    L1548,
                                                    L1550,
                                                    L1552,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1555,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1558,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    actors.Text(body="maildirectory at: 'alice' put: mailbox sender",
                                                                serial_id=16),
                                                    L1563],
                                          next_serial_id=18))
L1534 = actors.ActorEditor(editable=True,
                           actor=L1535)
L1210 = envs.Env(parent=None)
L1209 = envs.Env(parent=L1210)
L1230 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=['message'],
                                              selector='send:')],
                      next_serial_id=1)
L1233 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=[],
                                              selector='first'),
                                actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                     inner_map={}),
                                              serial_id=1,
                                              parameters=[],
                                              selector='removefirst'),
                                actors.Method(body=actors.Expression(text='sender',
                                                                     inner_map={}),
                                              serial_id=2,
                                              parameters=[],
                                              selector='sender')],
                      next_serial_id=3)
L1226 = actors.Actor(env=L1209,
                     script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                         inner_map={'sender': L1230,
                                                                                                    'mailbox': L1233}),
                                                                  serial_id=0,
                                                                  parameters=[],
                                                                  selector='run')],
                                          next_serial_id=1))
L1663 = actors.ActorEditor(editable=True,
                           actor=L1226)
L1719 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1721 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1249 = actors.Script(elements=[],
                      next_serial_id=0)
L1724 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L1249}),
                       serial_id=4)
L1727 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1729 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1731 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1733 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1736 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1739 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1743 = actors.Example(expression=actors.Expression(text='http://localhost:8080/id/5186614581370432354',
                                                    inner_map={}),
                       serial_id=16)
L1745 = actors.Example(expression=actors.Expression(text='8 * 5',
                                                    inner_map={}),
                       serial_id=17)
L1716 = actors.Actor(env=L1209,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1719,
                                                    L1721,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1724,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1727,
                                                    L1729,
                                                    L1731,
                                                    L1733,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1736,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1739,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1743,
                                                    L1745],
                                          next_serial_id=18))
L1715 = actors.ActorEditor(editable=True,
                           actor=L1716)
L1207 = actors.Actor(env=envs.Env(parent=L1209),
                     script=L1249)
L1206 = actors.ActorEditor(editable=True,
                           actor=L1207)
L264 = envs.Env(parent=L242)
L263 = envs.Env(parent=L264)
L993 = envs.Env(parent=L263)
L991 = actors.Actor(env=envs.Env(parent=L993),
                    script=L253)
L990 = actors.ActorEditor(editable=True,
                          actor=L991)
L495 = envs.Env(parent=L496)
L505 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L525 = actors.Actor(env=envs.Env(parent=L495),
                    script=L505)
L1691 = actors.ActorEditor(editable=True,
                           actor=L525)
L591 = actors.Actor(env=envs.Env(parent=L532),
                    script=L584)
L1696 = actors.ActorEditor(editable=True,
                           actor=L591)
L1533 = builtin.String(str='Hello, Alex!')
L1532 = actors.ActorEditor(editable=False,
                           actor=L1533)
L541 = builtin.StampGuard(stamp=L540)
L539 = builtin.List(elements=(L540,
                              L541))
L1205 = actors.ActorEditor(editable=False,
                           actor=L539)
L1326 = builtin.Number(n=25.0)
L1325 = actors.ActorEditor(editable=False,
                           actor=L1326)
L1488 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1491 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1495 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L524}),
                       serial_id=4)
L1498 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1500 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1502 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1504 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1507 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1510 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L521 = actors.Script(elements=[],
                     next_serial_id=0)
L1514 = actors.Example(expression=actors.Expression(text='mailbox sender send: make message',
                                                    inner_map={'message': L521}),
                       serial_id=16)
L1485 = actors.Actor(env=L496,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1488,
                                                    L1491,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1495,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1498,
                                                    L1500,
                                                    L1502,
                                                    L1504,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1507,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1510,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1514],
                                          next_serial_id=17))
L1484 = actors.ActorEditor(editable=True,
                           actor=L1485)
L660 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L663 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L656 = actors.Actor(env=L645,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L660,
                                                                                                   'mailbox': L663}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1651 = actors.ActorEditor(editable=True,
                           actor=L656)
L681 = actors.Script(elements=[actors.Text(body='Hi me, how are me?\r\n',
                                           serial_id=0)],
                     next_serial_id=1)
L679 = actors.Actor(env=envs.Env(parent=L645),
                    script=L681)
L1049 = actors.ActorEditor(editable=True,
                           actor=L679)
L1311 = builtin.List(elements=(builtin.String(str='hello'),))
L1523 = actors.ActorEditor(editable=False,
                           actor=L1311)
L57 = actors.Actor(env=L58,
                   script=actors.Script(elements=[],
                                        next_serial_id=0))
L56 = actors.ActorEditor(editable=True,
                         actor=L57)
L328 = builtin.Box(initial_value=builtin.List(elements=()))
L1747 = actors.ActorEditor(editable=False,
                           actor=L328)
L265 = builtin.String(str='cat')
L1373 = actors.ActorEditor(editable=False,
                           actor=L265)
L514 = envs.Env(parent=L496)
L512 = actors.Actor(env=envs.Env(parent=L514),
                    script=L505)
L1204 = actors.ActorEditor(editable=True,
                           actor=L512)
L261 = builtin.String(str='Does it meow?')
L1131 = actors.ActorEditor(editable=False,
                           actor=L261)
L277 = builtin.String(str='dog')
L1046 = actors.ActorEditor(editable=False,
                           actor=L277)
L705 = builtin.List(elements=(builtin.String(str='hello'),))
L999 = actors.ActorEditor(editable=False,
                          actor=L705)
L197 = builtin.String(str='dog')
L1323 = actors.ActorEditor(editable=False,
                           actor=L197)
L859 = builtin.Number(n=5.0)
L858 = actors.ActorEditor(editable=False,
                          actor=L859)
L435 = envs.Env(parent=L436)
L463 = actors.Example(expression=actors.Expression(text='1 * 2 * 3 * 4 * 5',
                                                   inner_map={}),
                      serial_id=0)
L462 = actors.Script(elements=[L463],
                     next_serial_id=1)
L460 = actors.Actor(env=envs.Env(parent=L435),
                    script=L462)
L466 = actors.ActorEditor(editable=True,
                          actor=L460)
L626 = envs.Env(parent=L533)
L624 = actors.Actor(env=envs.Env(parent=L626),
                    script=L617)
L1684 = actors.ActorEditor(editable=True,
                           actor=L624)
L672 = envs.Env(parent=L645)
L675 = actors.Actor(env=envs.Env(parent=L672),
                    script=L660)
L748 = actors.ActorEditor(editable=True,
                          actor=L675)
L1329 = actors.ActorEditor(editable=False,
                           actor=L541)
L490 = builtin.Number(n=25.0)
L489 = actors.ActorEditor(editable=False,
                          actor=L490)
L196 = envs.Env(parent=L168)
L195 = envs.Env(parent=L196)
L202 = envs.Env(parent=L195)
L201 = envs.Env(parent=L202)
L200 = actors.Actor(env=L201,
                    script=L156)
L346 = actors.ActorEditor(editable=True,
                          actor=L200)
L246 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'Is it a ' + animal + '?'\r\n",
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='run'),
                               actors.Method(body=actors.Expression(text="'Thank you!'\r\n",
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='make question',
                                                                    inner_map={'question': L253}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L243 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make guess\r\n',
                                                                    inner_map={'guess': L246}),
                                             serial_id=0,
                                             parameters=['animal',
                                                         'box'],
                                             selector='name:parent:')],
                     next_serial_id=1)
L241 = actors.Actor(env=L242,
                    script=L243)
L1384 = actors.ActorEditor(editable=True,
                           actor=L241)
L1661 = builtin.Number(n=25.0)
L1660 = actors.ActorEditor(editable=False,
                           actor=L1661)
L292 = actors.ActorEditor(editable=False,
                          actor=L293)
L822 = builtin.MailDirectory(env=envs.Env(parent=L778))
L1676 = actors.ActorEditor(editable=False,
                           actor=L822)
L673 = builtin.Box(initial_value=builtin.List(elements=()))
L1665 = actors.ActorEditor(editable=False,
                           actor=L673)
L69 = builtin.BoxMaker()
L1480 = actors.ActorEditor(editable=False,
                           actor=L69)
L633 = actors.StampedActor(stamp=L293,
                           actor=builtin.String(str='hello'))
L1679 = actors.ActorEditor(editable=False,
                           actor=L633)
L1172 = builtin.Number(n=5.0)
L1525 = actors.ActorEditor(editable=False,
                           actor=L1172)
L790 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1385 = actors.ActorEditor(editable=False,
                           actor=L790)
L2 = builtin.Number(n=6.0)
L1 = actors.ActorEditor(editable=False,
                        actor=L2)
L1287 = builtin.String(str='Is it a dog?')
L1286 = actors.ActorEditor(editable=False,
                           actor=L1287)
L1342 = builtin.BoxMaker()
L1372 = actors.ActorEditor(editable=False,
                           actor=L1342)
L1646 = actors.ActorEditor(editable=False,
                           actor=L59)
L1260 = envs.Env(parent=None)
L1259 = actors.Actor(env=L1260,
                     script=actors.Script(elements=[],
                                          next_serial_id=0))
L1258 = actors.ActorEditor(editable=True,
                           actor=L1259)
L426 = actors.ActorEditor(editable=False,
                          actor=L427)
L1409 = builtin.List(elements=(builtin.String(str='hello'),))
L1650 = actors.ActorEditor(editable=False,
                           actor=L1409)
L1247 = builtin.MailDirectory(env=envs.Env(parent=L1210))
L1653 = actors.ActorEditor(editable=False,
                           actor=L1247)
L751 = envs.Env(parent=None)
L954 = builtin.MailDirectory(env=envs.Env(parent=L751))
L953 = actors.ActorEditor(editable=False,
                          actor=L954)
L1470 = builtin.List(elements=(builtin.String(str='hello'),))
L1469 = actors.ActorEditor(editable=False,
                           actor=L1470)
L647 = builtin.BoxMaker()
L1467 = actors.ActorEditor(editable=False,
                           actor=L647)
L1064 = envs.Env(parent=L751)
L1067 = envs.Env(parent=L1064)
L1079 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=['message'],
                                              selector='send:')],
                      next_serial_id=1)
L1065 = actors.Actor(env=envs.Env(parent=L1067),
                     script=L1079)
L1567 = actors.ActorEditor(editable=True,
                           actor=L1065)
L631 = builtin.List(elements=(L293,
                              L632))
L744 = actors.ActorEditor(editable=False,
                          actor=L631)
L22 = builtin.Boolean(value=False,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='falseaction run',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['trueaction',
                                                                               'falseaction'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L743 = actors.ActorEditor(editable=False,
                          actor=L22)
L5 = builtin.Boolean(value=False,
                     script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                         inner_map={}),
                                                                  serial_id=0,
                                                                  parameters=[],
                                                                  selector='not'),
                                                    actors.Method(body=actors.Expression(text='falsevalue',
                                                                                         inner_map={}),
                                                                  serial_id=1,
                                                                  parameters=['truevalue',
                                                                              'falsevalue'],
                                                                  selector='iftrue:iffalse:')],
                                          next_serial_id=2))
L4 = builtin.Box(initial_value=L5)
L3 = actors.ActorEditor(editable=False,
                        actor=L4)
L842 = builtin.BoxMaker()
L1324 = actors.ActorEditor(editable=False,
                           actor=L842)
L354 = envs.Env(parent=None)
L353 = envs.Env(parent=L354)
L352 = actors.Actor(env=L353,
                    script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                               serial_id=0),
                                                   actors.Example(expression=actors.Expression(text='2 + 3',
                                                                                               inner_map={}),
                                                                  serial_id=1),
                                                   actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                                                               inner_map={}),
                                                                  serial_id=2),
                                                   actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                               serial_id=3),
                                                   actors.Example(expression=actors.Expression(text='make Foo',
                                                                                               inner_map={}),
                                                                  serial_id=4),
                                                   actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                               serial_id=5),
                                                   actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                                                               inner_map={}),
                                                                  serial_id=6),
                                                   actors.Example(expression=actors.Expression(text='box get',
                                                                                               inner_map={}),
                                                                  serial_id=7),
                                                   actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                                                               inner_map={}),
                                                                  serial_id=8),
                                                   actors.Example(expression=actors.Expression(text="['hello']",
                                                                                               inner_map={}),
                                                                  serial_id=9),
                                                   actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                               serial_id=10),
                                                   actors.Example(expression=actors.Expression(text='maildirectory',
                                                                                               inner_map={}),
                                                                  serial_id=11),
                                                   actors.Text(body='You can create your own mailbox:',
                                                               serial_id=12),
                                                   actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                                                               inner_map={}),
                                                                  serial_id=13),
                                                   actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                               serial_id=14),
                                                   actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                               serial_id=15)],
                                         next_serial_id=16))
L351 = actors.ActorEditor(editable=True,
                          actor=L352)
L534 = builtin.Box(initial_value=L22)
L640 = actors.ActorEditor(editable=False,
                          actor=L534)
L1655 = builtin.String(str='Thank you!')
L1654 = actors.ActorEditor(editable=False,
                           actor=L1655)
L750 = actors.Actor(env=L751,
                    script=actors.Script(elements=[],
                                         next_serial_id=0))
L749 = actors.ActorEditor(editable=True,
                          actor=L750)
L1016 = builtin.Number(n=25.0)
L1566 = actors.ActorEditor(editable=False,
                           actor=L1016)
L257 = builtin.Box(initial_value=L258)
L1664 = actors.ActorEditor(editable=False,
                           actor=L257)
L1007 = envs.Env(parent=L195)
L1005 = actors.Actor(env=envs.Env(parent=L1007),
                     script=L156)
L1004 = actors.ActorEditor(editable=True,
                           actor=L1005)
L437 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L459 = builtin.Box(initial_value=L437)
L1425 = actors.ActorEditor(editable=False,
                           actor=L459)
L831 = envs.Env(parent=None)
L1104 = envs.Env(parent=L831)
L1126 = actors.Script(elements=[],
                      next_serial_id=0)
L1102 = actors.Actor(env=envs.Env(parent=L1104),
                     script=L1126)
L1101 = actors.ActorEditor(editable=True,
                           actor=L1102)
L1257 = envs.Env(parent=L275)
L1255 = actors.Actor(env=envs.Env(parent=L1257),
                     script=L253)
L1254 = actors.ActorEditor(editable=True,
                           actor=L1255)
L317 = actors.Actor(env=envs.Env(parent=L299),
                    script=L319)
L1383 = actors.ActorEditor(editable=True,
                           actor=L317)
L1375 = actors.ActorEditor(editable=False,
                           actor=L34)
L865 = builtin.Number(n=5.0)
L864 = actors.ActorEditor(editable=False,
                          actor=L865)
L1714 = actors.ActorEditor(editable=False,
                           actor=L1054)
L1518 = actors.ActorEditor(editable=False,
                           actor=L437)
L128 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make asker',
                                                                    inner_map={'asker': L131}),
                                             serial_id=0,
                                             parameters=['node'],
                                             selector='on:')],
                     next_serial_id=1)
L138 = actors.Script(elements=[actors.Method(body=actors.Expression(text='question',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='question'),
                               actors.Method(body=actors.Expression(text='call on: yesbox',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='yes'),
                               actors.Method(body=actors.Expression(text='call on: nobox',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='no')],
                     next_serial_id=3)
L125 = actors.Script(elements=[actors.Method(body=actors.Expression(text='make askernode\r\n',
                                                                    inner_map={'askernode': L128,
                                                                               'asker': L138}),
                                             serial_id=0,
                                             parameters=['question',
                                                         'yesbox',
                                                         'nobox'],
                                             selector='on:ifyes:ifno:')],
                     next_serial_id=1)
L145 = actors.Actor(env=L146,
                    script=L125)
L1671 = actors.ActorEditor(editable=True,
                           actor=L145)
L1293 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1296 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1300 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L462}),
                       serial_id=4)
L1303 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1305 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1307 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1309 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1314 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1317 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1290 = actors.Actor(env=L435,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1293,
                                                    L1296,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1300,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1303,
                                                    L1305,
                                                    L1307,
                                                    L1309,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1314,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1317,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15)],
                                          next_serial_id=16))
L1289 = actors.ActorEditor(editable=True,
                           actor=L1290)
L535 = actors.Actor(env=L532,
                    script=L536)
L542 = actors.ActorEditor(editable=True,
                          actor=L535)
L476 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L479 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='first'),
                               actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='removefirst'),
                               actors.Method(body=actors.Expression(text='sender',
                                                                    inner_map={}),
                                             serial_id=2,
                                             parameters=[],
                                             selector='sender')],
                     next_serial_id=3)
L434 = actors.Actor(env=L435,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L476,
                                                                                                   'mailbox': L479}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L433 = actors.ActorEditor(editable=True,
                          actor=L434)
L465 = builtin.Number(n=120.0)
L1422 = actors.ActorEditor(editable=False,
                           actor=L465)
L287 = builtin.MailDirectory(env=envs.Env(parent=L89))
L1530 = actors.ActorEditor(editable=False,
                           actor=L287)
L1199 = builtin.String(str='Is it a dog?')
L1198 = actors.ActorEditor(editable=False,
                           actor=L1199)
L194 = actors.Actor(env=L195,
                    script=L153)
L294 = actors.ActorEditor(editable=True,
                          actor=L194)
L762 = builtin.BoxMaker()
L1250 = actors.ActorEditor(editable=False,
                           actor=L762)
L639 = builtin.Number(n=0)
L638 = actors.ActorEditor(editable=False,
                          actor=L639)
L1527 = builtin.String(str='hello world!hello world!')
L1526 = actors.ActorEditor(editable=False,
                           actor=L1527)
L267 = actors.Example(expression=actors.Expression(text='let gamebox = makebox holding: 0',
                                                   inner_map={}),
                      serial_id=1)
L270 = actors.Example(expression=actors.Expression(text='make makeguess',
                                                   inner_map={'makeguess': L243}),
                      serial_id=2)
L272 = actors.Example(expression=actors.Expression(text="makeguess name: 'dog' parent: gamebox",
                                                   inner_map={}),
                      serial_id=3)
L278 = actors.Example(expression=actors.Expression(text='gamebox get',
                                                   inner_map={}),
                      serial_id=4)
L266 = actors.Script(elements=[L267,
                               L270,
                               L272,
                               L278],
                     next_serial_id=5)
L227 = actors.Actor(env=L228,
                    script=L266)
L269 = actors.ActorEditor(editable=True,
                          actor=L227)
L1349 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=['message'],
                                              selector='send:')],
                      next_serial_id=1)
L1345 = actors.Actor(env=L1334,
                     script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                         inner_map={'sender': L1349,
                                                                                                    'mailbox': L1352}),
                                                                  serial_id=0,
                                                                  parameters=[],
                                                                  selector='run')],
                                          next_serial_id=1))
L1472 = actors.ActorEditor(editable=True,
                           actor=L1345)
L1012 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1014 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1018 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L291}),
                       serial_id=4)
L1021 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1023 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1025 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1027 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1032 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1035 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1039 = actors.Example(expression=actors.Expression(text='make animalgame',
                                                    inner_map={'animalgame': L266}),
                       serial_id=16)
L115 = actors.Example(expression=actors.Expression(text='make call',
                                                   inner_map={'call': L117}),
                      serial_id=0)
L123 = actors.Example(expression=actors.Expression(text='make makebranch',
                                                   inner_map={'makebranch': L125}),
                      serial_id=1)
L147 = actors.Example(expression=actors.Expression(text='make makeguess',
                                                   inner_map={'makeguess': L149}),
                      serial_id=2)
L169 = actors.Example(expression=actors.Expression(text="let root = box holding: (makeguess for: 'dog')",
                                                   inner_map={}),
                      serial_id=3)
L171 = actors.Example(expression=actors.Expression(text="let root = makebox holding: (makeguess for: 'dog')",
                                                   inner_map={}),
                      serial_id=4)
L198 = actors.Example(expression=actors.Expression(text='call on: root',
                                                   inner_map={}),
                      serial_id=6)
L203 = actors.Example(expression=actors.Expression(text='call on: root',
                                                   inner_map={}),
                      serial_id=7)
L210 = actors.Script(elements=[actors.Method(body=actors.Expression(text='call on: root',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='run')],
                     next_serial_id=1)
L208 = actors.Example(expression=actors.Expression(text='make playgame',
                                                   inner_map={'playgame': L210}),
                      serial_id=8)
L114 = actors.Script(elements=[L115,
                               L123,
                               L147,
                               L169,
                               L171,
                               L198,
                               L203,
                               L208],
                     next_serial_id=9)
L1041 = actors.Example(expression=actors.Expression(text='make newanimalgame',
                                                    inner_map={'newanimalgame': L114}),
                       serial_id=17)
L1009 = actors.Actor(env=L88,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1012,
                                                    L1014,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1018,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1021,
                                                    L1023,
                                                    L1025,
                                                    L1027,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1032,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1035,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1039,
                                                    L1041],
                                          next_serial_id=18))
L1008 = actors.ActorEditor(editable=True,
                           actor=L1009)
L471 = envs.Env(parent=L435)
L469 = actors.Actor(env=envs.Env(parent=L471),
                    script=L479)
L1529 = actors.ActorEditor(editable=True,
                           actor=L469)
L763 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1133 = actors.ActorEditor(editable=False,
                           actor=L763)
L1128 = builtin.Number(n=5.0)
L1127 = actors.ActorEditor(editable=False,
                           actor=L1128)
L178 = actors.Actor(env=L179,
                    script=L128)
L177 = builtin.Box(initial_value=L178)
L1165 = actors.ActorEditor(editable=False,
                           actor=L177)
L262 = actors.Actor(env=L263,
                    script=L246)
L1749 = actors.ActorEditor(editable=True,
                           actor=L262)
L1162 = builtin.List(elements=(builtin.String(str='hello'),))
L1161 = actors.ActorEditor(editable=False,
                           actor=L1162)
L1096 = actors.Script(elements=[actors.Method(body=actors.Expression(text="'Hello, Alex! How are you?'",
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=[],
                                              selector='greet')],
                      next_serial_id=1)
L1094 = actors.Actor(env=envs.Env(parent=L1064),
                     script=L1096)
L1421 = actors.ActorEditor(editable=True,
                           actor=L1094)
L192 = builtin.String(str='Does it meow?')
L1466 = actors.ActorEditor(editable=False,
                           actor=L192)
L90 = builtin.Boolean(value=False,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='falsevalue',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['truevalue',
                                                                               'falsevalue'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L1528 = actors.ActorEditor(editable=False,
                           actor=L90)
L580 = actors.Actor(env=envs.Env(parent=L532),
                    script=L575)
L1788 = actors.ActorEditor(editable=True,
                           actor=L580)
L897 = actors.Script(elements=[actors.Method(body=actors.Expression(text='let ballotbox = makebox holding: 0',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=[],
                                             selector='run')],
                     next_serial_id=1)
L895 = actors.Actor(env=envs.Env(parent=L870),
                    script=L897)
L998 = actors.ActorEditor(editable=True,
                          actor=L895)
L804 = actors.Script(elements=[],
                     next_serial_id=0)
L802 = actors.Actor(env=envs.Env(parent=L777),
                    script=L804)
L1370 = actors.ActorEditor(editable=True,
                           actor=L802)
L1674 = builtin.Number(n=42.0)
L1673 = actors.ActorEditor(editable=False,
                           actor=L1674)
L85 = actors.Actor(env=envs.Env(parent=L87),
                   script=L210)
L84 = actors.ActorEditor(editable=True,
                         actor=L85)
L1109 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=['message'],
                                              selector='send:')],
                      next_serial_id=1)
L1112 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=[],
                                              selector='first'),
                                actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                     inner_map={}),
                                              serial_id=1,
                                              parameters=[],
                                              selector='removefirst'),
                                actors.Method(body=actors.Expression(text='sender',
                                                                     inner_map={}),
                                              serial_id=2,
                                              parameters=[],
                                              selector='sender')],
                      next_serial_id=3)
L1105 = actors.Actor(env=L1104,
                     script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                         inner_map={'sender': L1109,
                                                                                                    'mailbox': L1112}),
                                                                  serial_id=0,
                                                                  parameters=[],
                                                                  selector='run')],
                                          next_serial_id=1))
L1693 = actors.ActorEditor(editable=True,
                           actor=L1105)
L1336 = builtin.Boolean(value=True,
                        script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                            inner_map={}),
                                                                     serial_id=0,
                                                                     parameters=[],
                                                                     selector='not'),
                                                       actors.Method(body=actors.Expression(text='trueaction run',
                                                                                            inner_map={}),
                                                                     serial_id=1,
                                                                     parameters=['trueaction',
                                                                                 'falseaction'],
                                                                     selector='iftrue:iffalse:')],
                                             next_serial_id=2))
L1652 = actors.ActorEditor(editable=False,
                           actor=L1336)
L1283 = builtin.String(str='Is it a dog?')
L1282 = actors.ActorEditor(editable=False,
                           actor=L1283)
L1377 = builtin.List(elements=(builtin.String(str='hello'),))
L1376 = actors.ActorEditor(editable=False,
                           actor=L1377)
L1242 = envs.Env(parent=L1209)
L1240 = actors.Actor(env=envs.Env(parent=L1242),
                     script=L1233)
L1483 = actors.ActorEditor(editable=True,
                           actor=L1240)
L70 = builtin.Boolean(value=True,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='truevalue',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['truevalue',
                                                                               'falsevalue'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L1321 = actors.ActorEditor(editable=False,
                           actor=L70)
L1170 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1173 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1177 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L1126}),
                       serial_id=4)
L1180 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1182 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1184 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1186 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1189 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1192 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1196 = actors.Example(expression=actors.Expression(text='http://localhost:8080/id/5292533547202728044',
                                                    inner_map={}),
                       serial_id=16)
L1167 = actors.Actor(env=L1104,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1170,
                                                    L1173,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1177,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1180,
                                                    L1182,
                                                    L1184,
                                                    L1186,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1189,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1192,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1196],
                                          next_serial_id=17))
L1166 = actors.ActorEditor(editable=True,
                           actor=L1167)
L843 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1420 = actors.ActorEditor(editable=False,
                           actor=L843)
L338 = envs.Env(parent=L300)
L337 = builtin.MailDirectory(env=L338)
L1702 = actors.ActorEditor(editable=False,
                           actor=L337)
L176 = envs.Env(parent=L146)
L175 = envs.Env(parent=L176)
L1382 = envs.Env(parent=L175)
L1380 = actors.Actor(env=envs.Env(parent=L1382),
                     script=L131)
L1379 = actors.ActorEditor(editable=True,
                           actor=L1380)
L940 = actors.Actor(env=L33,
                    script=actors.Script(elements=[],
                                         next_serial_id=0))
L1482 = actors.ActorEditor(editable=True,
                           actor=L940)
L12 = builtin.MailDirectory(env=envs.Env(parent=L14))
L11 = actors.ActorEditor(editable=False,
                         actor=L12)
L1690 = builtin.Number(n=0.0)
L1689 = actors.ActorEditor(editable=False,
                           actor=L1690)
L812 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L810 = actors.Actor(env=envs.Env(parent=L807),
                    script=L812)
L1647 = actors.ActorEditor(editable=True,
                           actor=L810)
L1434 = builtin.List(elements=(L348,))
L1433 = actors.ActorEditor(editable=False,
                           actor=L1434)
L1285 = builtin.String(str='Thanks, I will remember.')
L1284 = actors.ActorEditor(editable=False,
                           actor=L1285)
L1431 = envs.Env(parent=L201)
L1429 = actors.Actor(env=envs.Env(parent=L1431),
                     script=L163)
L1428 = actors.ActorEditor(editable=True,
                           actor=L1429)
L502 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L498 = actors.Actor(env=L496,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L502,
                                                                                                   'mailbox': L505}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L1202 = actors.ActorEditor(editable=True,
                           actor=L498)
L306 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1657 = actors.ActorEditor(editable=False,
                           actor=L306)
L1678 = builtin.String(str='<p>')
L1677 = actors.ActorEditor(editable=False,
                           actor=L1678)
L174 = actors.Actor(env=L175,
                    script=L128)
L173 = builtin.Box(initial_value=L174)
L342 = actors.ActorEditor(editable=False,
                          actor=L173)
L1477 = actors.Script(elements=[],
                      next_serial_id=0)
L1475 = actors.Actor(env=envs.Env(parent=L532),
                     script=L1477)
L1474 = actors.ActorEditor(editable=True,
                           actor=L1475)
L1576 = envs.Env(parent=L189)
L1575 = envs.Env(parent=L1576)
L1574 = actors.Actor(env=L1575,
                     script=L156)
L1573 = actors.ActorEditor(editable=True,
                           actor=L1574)
L474 = actors.Actor(env=envs.Env(parent=L471),
                    script=L476)
L1699 = actors.ActorEditor(editable=True,
                           actor=L474)
L1361 = actors.Script(elements=[],
                      next_serial_id=0)
L1359 = actors.Actor(env=envs.Env(parent=L1334),
                     script=L1361)
L1570 = actors.ActorEditor(editable=True,
                           actor=L1359)
L305 = builtin.BoxMaker()
L1793 = actors.ActorEditor(editable=False,
                           actor=L305)
L635 = actors.Actor(env=envs.Env(parent=L533),
                    script=L637)
L1002 = actors.ActorEditor(editable=True,
                           actor=L635)
L1298 = builtin.Number(n=25.0)
L1328 = actors.ActorEditor(editable=False,
                           actor=L1298)
L527 = builtin.Box(initial_value=builtin.List(elements=()))
L867 = actors.ActorEditor(editable=False,
                          actor=L527)
L829 = builtin.MailDirectory(env=envs.Env(parent=L831))
L828 = actors.ActorEditor(editable=False,
                          actor=L829)
L322 = envs.Env(parent=L299)
L320 = actors.Actor(env=envs.Env(parent=L322),
                    script=L330)
L1687 = actors.ActorEditor(editable=True,
                           actor=L320)
L861 = builtin.String(str='Is it a dog?')
L860 = actors.ActorEditor(editable=False,
                          actor=L861)
L809 = builtin.List(elements=())
L808 = builtin.Box(initial_value=L809)
L1481 = actors.ActorEditor(editable=False,
                           actor=L808)
L113 = actors.Actor(env=L87,
                    script=L114)
L122 = actors.ActorEditor(editable=True,
                          actor=L113)
L779 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falsevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1132 = actors.ActorEditor(editable=False,
                           actor=L779)
L1795 = builtin.Box(initial_value=L1674)
L1794 = actors.ActorEditor(editable=False,
                           actor=L1795)
L947 = builtin.Boolean(value=False,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='falseaction run',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['trueaction',
                                                                                'falseaction'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1344 = builtin.Box(initial_value=L947)
L1423 = actors.ActorEditor(editable=False,
                           actor=L1344)
L1490 = builtin.Number(n=5.0)
L1700 = actors.ActorEditor(editable=False,
                           actor=L1490)
L677 = builtin.MailDirectory(env=envs.Env(parent=L646))
L1045 = actors.ActorEditor(editable=False,
                           actor=L677)
L1393 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1395 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1398 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L804}),
                       serial_id=4)
L1401 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1403 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1405 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1407 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1412 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1415 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1390 = actors.Actor(env=L777,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1393,
                                                    L1395,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1398,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1401,
                                                    L1403,
                                                    L1405,
                                                    L1407,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1412,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1415,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15)],
                                          next_serial_id=16))
L1389 = actors.ActorEditor(editable=True,
                           actor=L1390)
L1440 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1442 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1445 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L1361}),
                       serial_id=4)
L1448 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1450 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1452 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1454 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1457 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1460 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1464 = actors.Example(expression=actors.Expression(text='let pair = makestamp run',
                                                    inner_map={}),
                       serial_id=16)
L1437 = actors.Actor(env=L1334,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1440,
                                                    L1442,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1445,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1448,
                                                    L1450,
                                                    L1452,
                                                    L1454,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1457,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1460,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1464],
                                          next_serial_id=17))
L1436 = actors.ActorEditor(editable=True,
                           actor=L1437)
L670 = actors.Actor(env=envs.Env(parent=L672),
                    script=L663)
L866 = actors.ActorEditor(editable=True,
                          actor=L670)
L915 = builtin.Number(n=25.0)
L1327 = actors.ActorEditor(editable=False,
                           actor=L915)
L604 = builtin.String(str='<blockquote></blockquote>')
L1524 = actors.ActorEditor(editable=False,
                           actor=L604)
L863 = builtin.StampMaker()
L862 = actors.ActorEditor(editable=False,
                          actor=L863)
L1072 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=[],
                                              selector='first'),
                                actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                     inner_map={}),
                                              serial_id=1,
                                              parameters=[],
                                              selector='removefirst'),
                                actors.Method(body=actors.Expression(text='sender',
                                                                     inner_map={}),
                                              serial_id=2,
                                              parameters=[],
                                              selector='sender')],
                      next_serial_id=3)
L1082 = actors.Actor(env=L1064,
                     script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                         inner_map={'sender': L1079,
                                                                                                    'mailbox': L1072}),
                                                                  serial_id=0,
                                                                  parameters=[],
                                                                  selector='run')],
                                          next_serial_id=1))
L1479 = actors.ActorEditor(editable=True,
                           actor=L1082)
L1044 = builtin.Box(initial_value=L832)
L1043 = actors.ActorEditor(editable=False,
                           actor=L1044)
L1280 = builtin.List(elements=(builtin.String(str='hello'),))
L1279 = actors.ActorEditor(editable=False,
                           actor=L1280)
L995 = builtin.String(str='Is it a cat?')
L994 = actors.ActorEditor(editable=False,
                          actor=L995)
L1136 = envs.Env(parent=None)
L1135 = actors.Actor(env=L1136,
                     script=actors.Script(elements=[],
                                          next_serial_id=0))
L1134 = actors.ActorEditor(editable=True,
                           actor=L1135)
L965 = builtin.Number(n=25.0)
L1371 = actors.ActorEditor(editable=False,
                           actor=L965)
L962 = builtin.Number(n=5.0)
L1050 = actors.ActorEditor(editable=False,
                           actor=L962)
L946 = actors.ActorEditor(editable=False,
                          actor=L947)
L1712 = envs.Env(parent=L1575)
L1710 = actors.Actor(env=envs.Env(parent=L1712),
                     script=L163)
L1709 = actors.ActorEditor(editable=True,
                           actor=L1710)
L857 = builtin.Number(n=25.0)
L856 = actors.ActorEditor(editable=False,
                          actor=L857)
L720 = envs.Env(parent=None)
L719 = actors.Actor(env=L720,
                    script=actors.Script(elements=[],
                                         next_serial_id=0))
L1000 = actors.ActorEditor(editable=True,
                           actor=L719)
L910 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                   inner_map={}),
                      serial_id=1)
L913 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                   inner_map={}),
                      serial_id=2)
L902 = actors.Script(elements=[],
                     next_serial_id=0)
L917 = actors.Example(expression=actors.Expression(text='make Foo',
                                                   inner_map={'Foo': L902}),
                      serial_id=4)
L920 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                   inner_map={}),
                      serial_id=6)
L922 = actors.Example(expression=actors.Expression(text='box get',
                                                   inner_map={}),
                      serial_id=7)
L924 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                   inner_map={}),
                      serial_id=8)
L926 = actors.Example(expression=actors.Expression(text="['hello']",
                                                   inner_map={}),
                      serial_id=9)
L931 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                   inner_map={}),
                      serial_id=11)
L934 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                   inner_map={}),
                      serial_id=13)
L879 = actors.Script(elements=[actors.Text(body='Hi - time to vote on where to go out for lunch.  Pick a method for the restaurant you like and click it.',
                                           serial_id=0),
                               actors.Method(body=actors.Expression(text='',
                                                                    inner_map={}),
                                             serial_id=1,
                                             parameters=[],
                                             selector='voteforstarbucks')],
                     next_serial_id=2)
L938 = actors.Example(expression=actors.Expression(text='mailbox sender send: make message',
                                                   inner_map={'message': L879}),
                      serial_id=16)
L942 = actors.Example(expression=actors.Expression(text='makek makeballot',
                                                   inner_map={}),
                      serial_id=17)
L944 = actors.Example(expression=actors.Expression(text='make makeballot',
                                                   inner_map={'makeballot': L897}),
                      serial_id=18)
L907 = actors.Actor(env=L870,
                    script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                               serial_id=0),
                                                   L910,
                                                   L913,
                                                   actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                               serial_id=3),
                                                   L917,
                                                   actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                               serial_id=5),
                                                   L920,
                                                   L922,
                                                   L924,
                                                   L926,
                                                   actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                               serial_id=10),
                                                   L931,
                                                   actors.Text(body='You can create your own mailbox:',
                                                               serial_id=12),
                                                   L934,
                                                   actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                               serial_id=14),
                                                   actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                               serial_id=15),
                                                   L938,
                                                   L942,
                                                   L944],
                                         next_serial_id=19))
L906 = actors.ActorEditor(editable=True,
                          actor=L907)
L1493 = builtin.Number(n=25.0)
L1531 = actors.ActorEditor(editable=False,
                           actor=L1493)
L1099 = actors.Script(elements=[actors.Text(body='Hi, there.  ',
                                            serial_id=0)],
                      next_serial_id=1)
L1062 = actors.Actor(env=envs.Env(parent=L1064),
                     script=L1099)
L1061 = actors.ActorEditor(editable=True,
                           actor=L1062)
L1068 = builtin.Box(initial_value=builtin.List(elements=(L1062,)))
L1662 = actors.ActorEditor(editable=False,
                           actor=L1068)
L1154 = builtin.String(str='Thanks, I will remember.')
L1153 = actors.ActorEditor(editable=False,
                           actor=L1154)
L207 = envs.Env(parent=L175)
L205 = actors.Actor(env=envs.Env(parent=L207),
                    script=L131)
L1672 = actors.ActorEditor(editable=True,
                           actor=L205)
L193 = builtin.Box(initial_value=L194)
L1517 = actors.ActorEditor(editable=False,
                           actor=L193)
L530 = actors.Actor(env=envs.Env(parent=L532),
                    script=L595)
L529 = actors.ActorEditor(editable=True,
                          actor=L530)
L323 = actors.Actor(env=envs.Env(parent=L322),
                    script=L325)
L1060 = actors.ActorEditor(editable=True,
                           actor=L323)
L493 = actors.Actor(env=envs.Env(parent=L495),
                    script=L502)
L492 = actors.ActorEditor(editable=True,
                          actor=L493)
L912 = builtin.Number(n=5.0)
L1656 = actors.ActorEditor(editable=False,
                           actor=L912)
L15 = builtin.Boolean(value=True,
                      script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                          inner_map={}),
                                                                   serial_id=0,
                                                                   parameters=[],
                                                                   selector='not'),
                                                     actors.Method(body=actors.Expression(text='trueaction run',
                                                                                          inner_map={}),
                                                                   serial_id=1,
                                                                   parameters=['trueaction',
                                                                               'falseaction'],
                                                                   selector='iftrue:iffalse:')],
                                           next_serial_id=2))
L1003 = actors.ActorEditor(editable=False,
                           actor=L15)
L642 = builtin.Number(n=40.0)
L641 = actors.ActorEditor(editable=False,
                          actor=L642)
L1708 = builtin.String(str='OK!')
L1707 = actors.ActorEditor(editable=False,
                           actor=L1708)
L776 = actors.Actor(env=L777,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L812,
                                                                                                   'mailbox': L815}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L775 = actors.ActorEditor(editable=True,
                          actor=L776)
L101 = builtin.Boolean(value=True,
                       script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                           inner_map={}),
                                                                    serial_id=0,
                                                                    parameters=[],
                                                                    selector='not'),
                                                      actors.Method(body=actors.Expression(text='truevalue',
                                                                                           inner_map={}),
                                                                    serial_id=1,
                                                                    parameters=['truevalue',
                                                                                'falsevalue'],
                                                                    selector='iftrue:iffalse:')],
                                            next_serial_id=2))
L1129 = actors.ActorEditor(editable=False,
                           actor=L101)
L112 = builtin.Box(initial_value=L90)
L491 = actors.ActorEditor(editable=False,
                          actor=L112)
L900 = actors.Actor(env=envs.Env(parent=L870),
                    script=L902)
L1648 = actors.ActorEditor(editable=True,
                           actor=L900)
L688 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                   inner_map={}),
                      serial_id=1)
L691 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                   inner_map={}),
                      serial_id=2)
L694 = actors.Example(expression=actors.Expression(text='make Foo',
                                                   inner_map={'Foo': L685}),
                      serial_id=4)
L697 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                   inner_map={}),
                      serial_id=6)
L699 = actors.Example(expression=actors.Expression(text='box get',
                                                   inner_map={}),
                      serial_id=7)
L701 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                   inner_map={}),
                      serial_id=8)
L703 = actors.Example(expression=actors.Expression(text="['hello']",
                                                   inner_map={}),
                      serial_id=9)
L708 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                   inner_map={}),
                      serial_id=11)
L711 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                   inner_map={}),
                      serial_id=13)
L715 = actors.Example(expression=actors.Expression(text='let tome = mailbox sender',
                                                   inner_map={}),
                      serial_id=16)
L717 = actors.Example(expression=actors.Expression(text='tome send: make message',
                                                   inner_map={'message': L681}),
                      serial_id=17)
L736 = actors.Example(expression=actors.Expression(text='2 * 3',
                                                   inner_map={}),
                      serial_id=18)
L739 = actors.Example(expression=actors.Expression(text='2 / 0',
                                                   inner_map={}),
                      serial_id=19)
L741 = actors.Example(expression=actors.Expression(text='let pair = makestamp run',
                                                   inner_map={}),
                      serial_id=20)
L644 = actors.Actor(env=L645,
                    script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                               serial_id=0),
                                                   L688,
                                                   L691,
                                                   actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                               serial_id=3),
                                                   L694,
                                                   actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                               serial_id=5),
                                                   L697,
                                                   L699,
                                                   L701,
                                                   L703,
                                                   actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                               serial_id=10),
                                                   L708,
                                                   actors.Text(body='You can create your own mailbox:',
                                                               serial_id=12),
                                                   L711,
                                                   actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                               serial_id=14),
                                                   actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                               serial_id=15),
                                                   L715,
                                                   L717,
                                                   L736,
                                                   L739,
                                                   L741],
                                         next_serial_id=21))
L643 = actors.ActorEditor(editable=True,
                          actor=L644)
L1091 = actors.Script(elements=[actors.Method(body=actors.Expression(text='votesformcdonalds <- (votesformcdonalds get + 1)',
                                                                     inner_map={}),
                                              serial_id=0,
                                              parameters=[],
                                              selector='votemcdonalds')],
                      next_serial_id=1)
L1088 = actors.Script(elements=[actors.Method(body=actors.Expression(text='let votesformcdonalds = makebox holding: 0.\r\nmake ballot',
                                                                     inner_map={'ballot': L1091}),
                                              serial_id=0,
                                              parameters=[],
                                              selector='run')],
                      next_serial_id=1)
L1086 = actors.Actor(env=envs.Env(parent=L1064),
                     script=L1088)
L1473 = actors.ActorEditor(editable=True,
                           actor=L1086)
L1121 = envs.Env(parent=L1104)
L1119 = actors.Actor(env=envs.Env(parent=L1121),
                     script=L1112)
L1521 = actors.ActorEditor(editable=True,
                           actor=L1119)
L1369 = builtin.String(str='Is it a cat?')
L1368 = actors.ActorEditor(editable=False,
                           actor=L1369)
L217 = actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                    inner_map={}),
                                             serial_id=0,
                                             parameters=['message'],
                                             selector='send:')],
                     next_serial_id=1)
L213 = actors.Actor(env=L88,
                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                        inner_map={'sender': L217,
                                                                                                   'mailbox': L220}),
                                                                 serial_id=0,
                                                                 parameters=[],
                                                                 selector='run')],
                                         next_serial_id=1))
L747 = actors.ActorEditor(editable=True,
                          actor=L213)
L738 = builtin.Number(n=6.0)
L1645 = actors.ActorEditor(editable=False,
                           actor=L738)
L1175 = builtin.Number(n=25.0)
L1478 = actors.ActorEditor(editable=False,
                           actor=L1175)
L801 = builtin.Box(initial_value=L779)
L1047 = actors.ActorEditor(editable=False,
                           actor=L801)
L1029 = builtin.List(elements=(builtin.String(str='hello'),))
L1388 = actors.ActorEditor(editable=False,
                           actor=L1029)
L44 = builtin.BoxMaker()
L1468 = actors.ActorEditor(editable=False,
                           actor=L44)
L1070 = actors.Actor(env=envs.Env(parent=L1067),
                     script=L1072)
L1386 = actors.ActorEditor(editable=True,
                           actor=L1070)
L29 = builtin.TypeGuard(sample_instance=())
L1387 = actors.ActorEditor(editable=False,
                           actor=L29)
L601 = builtin.String(str='<p>')
L827 = actors.ActorEditor(editable=False,
                          actor=L601)
L296 = builtin.String(str='hello world!')
L295 = actors.ActorEditor(editable=False,
                          actor=L296)
L1670 = builtin.List(elements=())
L1669 = actors.ActorEditor(editable=False,
                           actor=L1670)
L1706 = builtin.String(str='Wavy!')
L1705 = actors.ActorEditor(editable=False,
                           actor=L1706)
L1215 = builtin.Boolean(value=True,
                        script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                            inner_map={}),
                                                                     serial_id=0,
                                                                     parameters=[],
                                                                     selector='not'),
                                                       actors.Method(body=actors.Expression(text='truevalue',
                                                                                            inner_map={}),
                                                                     serial_id=1,
                                                                     parameters=['truevalue',
                                                                                 'falsevalue'],
                                                                     selector='iftrue:iffalse:')],
                                             next_serial_id=2))
L1703 = actors.ActorEditor(editable=False,
                           actor=L1215)
L1516 = actors.ActorEditor(editable=False,
                           actor=L5)
L1754 = actors.Example(expression=actors.Expression(text='2 + 3',
                                                    inner_map={}),
                       serial_id=1)
L1756 = actors.Example(expression=actors.Expression(text='(3*3) + (4*4)',
                                                    inner_map={}),
                       serial_id=2)
L1759 = actors.Example(expression=actors.Expression(text='make Foo',
                                                    inner_map={'Foo': L1096}),
                       serial_id=4)
L1762 = actors.Example(expression=actors.Expression(text='let box = makebox holding: true',
                                                    inner_map={}),
                       serial_id=6)
L1764 = actors.Example(expression=actors.Expression(text='box get',
                                                    inner_map={}),
                       serial_id=7)
L1766 = actors.Example(expression=actors.Expression(text='box <- false. box get',
                                                    inner_map={}),
                       serial_id=8)
L1768 = actors.Example(expression=actors.Expression(text="['hello']",
                                                    inner_map={}),
                       serial_id=9)
L1771 = actors.Example(expression=actors.Expression(text='maildirectory',
                                                    inner_map={}),
                       serial_id=11)
L1774 = actors.Example(expression=actors.Expression(text='let mailbox = makemailbox run',
                                                    inner_map={}),
                       serial_id=13)
L1778 = actors.Example(expression=actors.Expression(text="'hello alex' size",
                                                    inner_map={}),
                       serial_id=16)
L1780 = actors.Example(expression=actors.Expression(text="'hello alex' length",
                                                    inner_map={}),
                       serial_id=17)
L1782 = actors.Example(expression=actors.Expression(text='let sender = mailbox sender',
                                                    inner_map={}),
                       serial_id=18)
L1784 = actors.Example(expression=actors.Expression(text='sender send: make message',
                                                    inner_map={'message': L1099}),
                       serial_id=19)
L1786 = actors.Example(expression=actors.Expression(text='make makeballot',
                                                    inner_map={'makeballot': L1088}),
                       serial_id=20)
L1751 = actors.Actor(env=L1064,
                     script=actors.Script(elements=[actors.Text(body='Welcome to your new account.  You should bookmark this page if you ever intend to return, because going back and clicking "Go!" again would create another new account with a different URI.\n\nIn Hmph, everything is an object, and every object has a page with a generated URI.  For example, the number 2 is an object.  Below, we send it the message "+ 3" and it adds 3 to itself, yielding 5:',
                                                                serial_id=0),
                                                    L1754,
                                                    L1756,
                                                    actors.Text(body='The syntax is related to Smalltalk, but not the same.  To make a new type of object, decide on what to call it in the local scope, such as Foo, and enter "make Foo":',
                                                                serial_id=3),
                                                    L1759,
                                                    actors.Text(body='You can also give a local name to any other object using "let name = expression". For example:',
                                                                serial_id=5),
                                                    L1762,
                                                    L1764,
                                                    L1766,
                                                    L1768,
                                                    actors.Text(body="There's a public directory of message boxes for other users, in maildirectory:",
                                                                serial_id=10),
                                                    L1771,
                                                    actors.Text(body='You can create your own mailbox:',
                                                                serial_id=12),
                                                    L1774,
                                                    actors.Text(body='To add it to the directory, enter "maildirectory at: \'alice\' put: mailbox sender" into the "Add example" field below, changing alice to some single-word identifier of your choice. (This will fail and return false if that identifier is already taken.)  Then inspect "mailbox" to see how to get your messages. A message can be any object, not just plain text.',
                                                                serial_id=14),
                                                    actors.Text(body="Have fun exploring!  Don't put much work into it, at least yet, because this account *will* get zapped during code upgrades; I'm not ready to commit to continuity yet.  There will be actual documentation real soon now.  Please send feedback to Darius Bacon <darius@accesscom.com>. Thanks!",
                                                                serial_id=15),
                                                    L1778,
                                                    L1780,
                                                    L1782,
                                                    L1784,
                                                    L1786],
                                          next_serial_id=21))
L1750 = actors.ActorEditor(editable=True,
                           actor=L1751)
L274 = actors.Actor(env=L275,
                    script=L246)
L1668 = actors.ActorEditor(editable=True,
                           actor=L274)
L0 = registry.HmphSystem(editor_of_actor={L647: L1467,
                                          L978: L1519,
                                          L719: L1000,
                                          L865: L864,
                                          L1016: L1566,
                                          L871: L1164,
                                          L829: L828,
                                          L679: L1049,
                                          L490: L489,
                                          L776: L775,
                                          L344: L343,
                                          L571: L1159,
                                          L101: L1129,
                                          L1380: L1379,
                                          L805: L1001,
                                          L70: L1321,
                                          L1162: L1161,
                                          L1331: L1330,
                                          L1533: L1532,
                                          L915: L1327,
                                          L298: L297,
                                          L1201: L1200,
                                          L863: L862,
                                          L962: L1050,
                                          L197: L1323,
                                          L186: L1432,
                                          L1795: L1794,
                                          L493: L492,
                                          L527: L867,
                                          L167: L1704,
                                          L639: L638,
                                          L1369: L1368,
                                          L1277: L1276,
                                          L193: L1517,
                                          L350: L349,
                                          L1053: L1052,
                                          L859: L858,
                                          L789: L1048,
                                          L31: L30,
                                          L1681: L1680,
                                          L861: L860,
                                          L1285: L1284,
                                          L1156: L1155,
                                          L683: L1713,
                                          L842: L1324,
                                          L907: L906,
                                          L601: L827,
                                          L173: L342,
                                          L229: L1288,
                                          L957: L956,
                                          L1280: L1279,
                                          L45: L1692,
                                          L1082: L1479,
                                          L746: L745,
                                          L1154: L1153,
                                          L1751: L1750,
                                          L83: L82,
                                          L1716: L1715,
                                          L258: L1572,
                                          L940: L1482,
                                          L257: L1664,
                                          L1102: L1101,
                                          L750: L749,
                                          L522: L1649,
                                          L991: L990,
                                          L525: L1691,
                                          L1172: L1525,
                                          L145: L1671,
                                          L1326: L1325,
                                          L328: L1747,
                                          L200: L346,
                                          L947: L946,
                                          L90: L1528,
                                          L512: L1204,
                                          L277: L1046,
                                          L28: L1051,
                                          L872: L1701,
                                          L460: L466,
                                          L670: L866,
                                          L1167: L1166,
                                          L675: L748,
                                          L420: L419,
                                          L472: L1374,
                                          L1044: L1043,
                                          L1377: L1376,
                                          L293: L292,
                                          L673: L1665,
                                          L631: L744,
                                          L790: L1385,
                                          L822: L1676,
                                          L1287: L1286,
                                          L1342: L1372,
                                          L802: L1370,
                                          L69: L1480,
                                          L427: L426,
                                          L1409: L1650,
                                          L895: L998,
                                          L289: L1685,
                                          L1470: L1469,
                                          L1065: L1567,
                                          L1434: L1433,
                                          L540: L1748,
                                          L22: L743,
                                          L4: L3,
                                          L1695: L1694,
                                          L1252: L1251,
                                          L1135: L1134,
                                          L690: L1424,
                                          L633: L1679,
                                          L1005: L1004,
                                          L459: L1425,
                                          L954: L953,
                                          L34: L1375,
                                          L317: L1383,
                                          L1226: L1663,
                                          L610: L1667,
                                          L447: L1565,
                                          L607: L1569,
                                          L434: L433,
                                          L1207: L1206,
                                          L287: L1530,
                                          L194: L294,
                                          L855: L854,
                                          L1086: L1473,
                                          L448: L1666,
                                          L1247: L1653,
                                          L1527: L1526,
                                          L227: L269,
                                          L1345: L1472,
                                          L1009: L1008,
                                          L469: L1529,
                                          L763: L1133,
                                          L2: L1,
                                          L1427: L1426,
                                          L762: L1250,
                                          L113: L122,
                                          L177: L1165,
                                          L262: L1749,
                                          L632: L1522,
                                          L1094: L1421,
                                          L192: L1466,
                                          L15: L1003,
                                          L580: L1788,
                                          L261: L1131,
                                          L539: L1205,
                                          L1674: L1673,
                                          L85: L84,
                                          L1105: L1693,
                                          L1336: L1652,
                                          L1283: L1282,
                                          L1259: L1258,
                                          L1240: L1483,
                                          L655: L1659,
                                          L928: L1419,
                                          L843: L1420,
                                          L337: L1702,
                                          L779: L1132,
                                          L1790: L1789,
                                          L265: L1373,
                                          L112: L491,
                                          L810: L1647,
                                          L635: L1002,
                                          L997: L996,
                                          L1535: L1534,
                                          L1429: L1428,
                                          L498: L1202,
                                          L1475: L1474,
                                          L12: L11,
                                          L1678: L1677,
                                          L100: L1160,
                                          L59: L1646,
                                          L1574: L1573,
                                          L465: L1422,
                                          L474: L1699,
                                          L305: L1793,
                                          L497: L1278,
                                          L1362: L1658,
                                          L1199: L1198,
                                          L1290: L1289,
                                          L869: L868,
                                          L534: L640,
                                          L624: L1684,
                                          L808: L1481,
                                          L705: L999,
                                          L1255: L1254,
                                          L1344: L1423,
                                          L995: L994,
                                          L1490: L1700,
                                          L1661: L1660,
                                          L1390: L1389,
                                          L1437: L1436,
                                          L738: L1645,
                                          L535: L542,
                                          L591: L1696,
                                          L604: L1524,
                                          L241: L1384,
                                          L188: L1675,
                                          L323: L1060,
                                          L306: L1657,
                                          L1655: L1654,
                                          L437: L1518,
                                          L801: L1047,
                                          L191: L1568,
                                          L296: L295,
                                          L965: L1371,
                                          L1128: L1127,
                                          L348: L347,
                                          L21: L1520,
                                          L1710: L1709,
                                          L752: L1686,
                                          L677: L1045,
                                          L1298: L1328,
                                          L1295: L1435,
                                          L1493: L1531,
                                          L1062: L1061,
                                          L1068: L1662,
                                          L656: L1651,
                                          L205: L1672,
                                          L352: L351,
                                          L530: L529,
                                          L280: L1203,
                                          L1485: L1484,
                                          L642: L641,
                                          L912: L1656,
                                          L1359: L1570,
                                          L1311: L1523,
                                          L57: L56,
                                          L1708: L1707,
                                          L541: L1329,
                                          L648: L1688,
                                          L1578: L1577,
                                          L900: L1648,
                                          L644: L643,
                                          L1054: L1714,
                                          L213: L747,
                                          L1119: L1521,
                                          L1690: L1689,
                                          L857: L856,
                                          L1698: L1697,
                                          L320: L1687,
                                          L1175: L1478,
                                          L467: L1571,
                                          L1029: L1388,
                                          L44: L1468,
                                          L1070: L1386,
                                          L29: L1387,
                                          L832: L1322,
                                          L120: L1130,
                                          L1792: L1791,
                                          L1670: L1669,
                                          L1706: L1705,
                                          L1215: L1703,
                                          L5: L1516,
                                          L274: L1668},
                         accounts=['4227047065147840205',
                                   '8511836882149982016',
                                   '15354271914547105265',
                                   '5292533547202728044',
                                   '16495268673511082035',
                                   'CCDF40493E712274L',
                                   '987ba6d80c536ef72fd3',
                                   '4edd14e178ad0c694a5f',
                                   '959c6923ca073aa23ec2',
                                   '84af1be6f390fc4f0d92',
                                   '7aa131ceb0eae191a3ed',
                                   '740e543a73fba8ae453f',
                                   '6737ab2d99858d2cb98e',
                                   '5b74f62f6857b7956095'],
                         at_id={'ab0fef7f36dd3d6e5a6e': registry.Entry(timestamp=1208019537.3862081,
                                                                       actor=L775),
                                '3852696174487011421': registry.Entry(timestamp=1104697525.0871,
                                                                      actor=L1748),
                                '479cbf4440b2fda712e3': registry.Entry(timestamp=1108956215.9968741,
                                                                       actor=L1133),
                                '785dd82fa6b01f374f86': registry.Entry(timestamp=1208019245.832073,
                                                                       actor=L1676),
                                '389f782794ad82bf42c2': registry.Entry(timestamp=1109435020.479353,
                                                                       actor=L994),
                                '50c6025c3f7c1b17b359': registry.Entry(timestamp=1190664334.063704,
                                                                       actor=L1516),
                                '92077dd35d38c54b1d7a': registry.Entry(timestamp=1109433506.8028109,
                                                                       actor=L117),
                                'e0a19b1b2095e54a1a98': registry.Entry(timestamp=1109428828.339134,
                                                                       actor=L258),
                                '563ca179481499c18ab6': registry.Entry(timestamp=1109435048.1022961,
                                                                       actor=L1285),
                                '177af5534bd8e4a0efef': registry.Entry(timestamp=1109434948.9887691,
                                                                       actor=L1160),
                                '33e43cb0a69702868a1b': registry.Entry(timestamp=1109435117.5115161,
                                                                       actor=L1004),
                                'a9dd87deafb6771dc685': registry.Entry(timestamp=1109433538.641732,
                                                                       actor=L112),
                                '661509098043722411': registry.Entry(timestamp=1104650549.6519859,
                                                                     actor=L1372),
                                '9e4059674b42ebb77e80': registry.Entry(timestamp=1190664333.9055829,
                                                                       actor=L1535),
                                'db48f7ce53f52a1be8ef': registry.Entry(timestamp=1208019245.829556,
                                                                       actor=L1048),
                                '2452790028842326399': registry.Entry(timestamp=1104650712.6615851,
                                                                      actor=L1051),
                                '244593790248987534': registry.Entry(timestamp=1104696067.7436399,
                                                                     actor=L1696),
                                '7733755804024661725': registry.Entry(timestamp=1104730507.793503,
                                                                      actor=L1249),
                                'd3f069172de864d5ed94': registry.Entry(timestamp=1105921788.5114219,
                                                                       actor=L1468),
                                '585cf6e821add948341f': registry.Entry(timestamp=1108956454.2687061,
                                                                       actor=L2),
                                '9923278975221135661': registry.Entry(timestamp=1104650760.2987189,
                                                                      actor=L1522),
                                '3313777953666434324': registry.Entry(timestamp=1104650549.6397591,
                                                                      actor=L1276),
                                '701718880621245410': registry.Entry(timestamp=1104689955.3227019,
                                                                     actor=L549),
                                '2169573376375311512': registry.Entry(timestamp=1104732128.235605,
                                                                      actor=L1789),
                                '425401d16cbbcb013414': registry.Entry(timestamp=1109424299.651423,
                                                                       actor=L1046),
                                '7488614337481629366': registry.Entry(timestamp=1104732124.7329731,
                                                                      actor=L864),
                                'b02f708094d7017ff9ca': registry.Entry(timestamp=1109428831.4527409,
                                                                       actor=L261),
                                '4716280173295595176': registry.Entry(timestamp=1104632228.340987,
                                                                      actor=L489),
                                '6ea8e4e7c59015808866': registry.Entry(timestamp=1108956215.9937069,
                                                                       actor=L996),
                                '809ca9a6a52e472c2232': registry.Entry(timestamp=1108956539.881407,
                                                                       actor=L1532),
                                '2fe08bfff563b4be7b88': registry.Entry(timestamp=1109428875.280458,
                                                                       actor=L1286),
                                '14f6bb412e4e8dba28e7': registry.Entry(timestamp=1105921513.4537351,
                                                                       actor=L1327),
                                '94c3545f0b71f518f49b': registry.Entry(timestamp=1208019245.82639,
                                                                       actor=L1200),
                                '752780470375236548': registry.Entry(timestamp=1104650712.6552,
                                                                     actor=L1002),
                                'bd70c7c47be23dba293f': registry.Entry(timestamp=1109433735.9576671,
                                                                       actor=L167),
                                '86494131c70f31e05c76': registry.Entry(timestamp=1105921566.047498,
                                                                       actor=L1648),
                                '95e56b4ad9bd4778155e': registry.Entry(timestamp=1109435020.4820459,
                                                                       actor=L995),
                                'aeca121725efb320e1bd': registry.Entry(timestamp=1109435097.3057289,
                                                                       actor=L1379),
                                '10397032148789093459': registry.Entry(timestamp=1104732128.235873,
                                                                       actor=L1790),
                                '6ad807ecfa9819fc5274': registry.Entry(timestamp=1108956554.296838,
                                                                       actor=L1421),
                                '27a3eaafc2929449c2': registry.Entry(timestamp=1108412240.3505909,
                                                                     actor=L56),
                                'f6599863150eeb0c6b2c': registry.Entry(timestamp=1109434795.847883,
                                                                       actor=L200),
                                '7773452571940476712': registry.Entry(timestamp=1104697525.0874059,
                                                                      actor=L540),
                                '8260809509679861109': registry.Entry(timestamp=1104633042.4136021,
                                                                      actor=L748),
                                '13289750248154104862': registry.Entry(timestamp=1104730109.325695,
                                                                       actor=L1322),
                                '9876815513572400324': registry.Entry(timestamp=1104650549.6620231,
                                                                      actor=L1251),
                                '4023b3c507c036f50e56': registry.Entry(timestamp=1104797071.70976,
                                                                       actor=L1435),
                                '4c09de69dcaeb7cc983c': registry.Entry(timestamp=1109428388.68279,
                                                                       actor=L1664),
                                'afe0f8475c226480003e': registry.Entry(timestamp=1104797063.4905939,
                                                                       actor=L1571),
                                '14572783785176608328': registry.Entry(timestamp=1104632228.3476341,
                                                                       actor=L1688),
                                '2af0a890ec67be538d2e': registry.Entry(timestamp=1190664333.9233689,
                                                                       actor=L745),
                                '3bc09d4543e10c13c0fd': registry.Entry(timestamp=1109435162.498421,
                                                                       actor=L192),
                                '744cd5a5607fb52901e3': registry.Entry(timestamp=1190665257.4724829,
                                                                       actor=L1060),
                                'dfdddcc9276b298ffa66': registry.Entry(timestamp=1108412173.816499,
                                                                       actor=L1691),
                                '3221c3e44d26b6bbd5ad': registry.Entry(timestamp=1105921540.943424,
                                                                       actor=L912),
                                'e64afe24df26d799a9ac': registry.Entry(timestamp=1104807972.488673,
                                                                       actor=L460),
                                '17543361990980566375': registry.Entry(timestamp=1104650712.6712439,
                                                                       actor=L1519),
                                'aa59537f559184f9eca2': registry.Entry(timestamp=1104797063.503005,
                                                                       actor=L433),
                                '15235668337536127643': registry.Entry(timestamp=1104650549.6492591,
                                                                       actor=L1423),
                                '66910d75bb942953d69c': registry.Entry(timestamp=1208019245.8258109,
                                                                       actor=L1390),
                                '506e223cff60b5489e1b': registry.Entry(timestamp=1109435078.919728,
                                                                       actor=L210),
                                'bd4007d9b81ff6015fa': registry.Entry(timestamp=1109677352.059732,
                                                                      actor=L84),
                                '66e67041b7181b22690': registry.Entry(timestamp=1104797063.3189459,
                                                                      actor=L462),
                                '9f783033e4c251e7aecd': registry.Entry(timestamp=1109435120.1054151,
                                                                       actor=L1283),
                                '1823737881735097641': registry.Entry(timestamp=1104633108.6909039,
                                                                      actor=L1258),
                                'd12f22d62909bfa38926': registry.Entry(timestamp=1190664334.0435531,
                                                                       actor=L1383),
                                '6231133fb36d5570d27a': registry.Entry(timestamp=1109434995.1101241,
                                                                       actor=L1153),
                                '2291036927185731541': registry.Entry(timestamp=1104650712.656209,
                                                                      actor=L637),
                                '16832713526910606204': registry.Entry(timestamp=1104732473.8273611,
                                                                       actor=L295),
                                'e5adaa9b6e0a3d911e8c': registry.Entry(timestamp=1208019245.8314581,
                                                                       actor=L1650),
                                '5f250d31a4b5ac2e53cb': registry.Entry(timestamp=1109435010.016041,
                                                                       actor=L1517),
                                '10238622742572975996': registry.Entry(timestamp=1104696935.0587831,
                                                                       actor=L552),
                                'feab0d101efa1eb7800c': registry.Entry(timestamp=1105921822.377749,
                                                                       actor=L940),
                                '6368b3eb10785a7e39c3': registry.Entry(timestamp=1104797063.330265,
                                                                       actor=L1666),
                                '8635995105440979424': registry.Entry(timestamp=1104650712.6806979,
                                                                      actor=L1684),
                                '9515dc91fc08cfc0dda0': registry.Entry(timestamp=1109428838.2248061,
                                                                       actor=L1369),
                                '1955787528046718785': registry.Entry(timestamp=1104689968.784857,
                                                                      actor=L571),
                                '4b6ad410a34d5b6c16ee': registry.Entry(timestamp=1105921803.8393171,
                                                                       actor=L998),
                                '5b0ee41b18f3e75167a2': registry.Entry(timestamp=1104797063.3379431,
                                                                       actor=L1518),
                                'd09a2d478bd604dc3907': registry.Entry(timestamp=1109435120.102756,
                                                                       actor=L1282),
                                '4eec14b8e7620b9cbbf6': registry.Entry(timestamp=1104797063.3455911,
                                                                       actor=L1523),
                                '5ce1f20ddbfb0d7dbdc8': registry.Entry(timestamp=1109422775.132426,
                                                                       actor=L747),
                                '9360497806179331195': registry.Entry(timestamp=1104650930.792357,
                                                                      actor=L633),
                                'd56af1fc4e478d2676e4': registry.Entry(timestamp=1109424447.451117,
                                                                       actor=L1697),
                                '17127538032127337902': registry.Entry(timestamp=1104730109.318953,
                                                                       actor=L1324),
                                'f087d80a9309247b65a': registry.Entry(timestamp=1108956695.1802731,
                                                                      actor=L1070),
                                '844713905205980550': registry.Entry(timestamp=1104730109.319428,
                                                                     actor=L1420),
                                '17611950891294426261': registry.Entry(timestamp=1104690171.623419,
                                                                       actor=L1387),
                                'f58848882bb5b9bb3ac8': registry.Entry(timestamp=1109433508.5816081,
                                                                       actor=L120),
                                '8cf176cfe796cd156975': registry.Entry(timestamp=1190665181.345289,
                                                                       actor=L1687),
                                '1d080e958d08e20c362b': registry.Entry(timestamp=1109434485.9212029,
                                                                       actor=L153),
                                'f8ff73eb7cf1b9941a73': registry.Entry(timestamp=1109428388.6854019,
                                                                       actor=L257),
                                '9057425907194955737': registry.Entry(timestamp=1105488351.8877051,
                                                                      actor=L542),
                                '3518475730128674669': registry.Entry(timestamp=1104730507.83989,
                                                                      actor=L1483),
                                '4227047065147840205': registry.Entry(timestamp=1104650529.884198,
                                                                      actor=L643),
                                '12634790733065757812': registry.Entry(timestamp=1104632228.343287,
                                                                       actor=L685),
                                '12685563122316055259': registry.Entry(timestamp=1104706912.387881,
                                                                       actor=L567),
                                'c4fbf97dd8919c749ca9': registry.Entry(timestamp=1190664333.911598,
                                                                       actor=L1127),
                                '10330519763115726681': registry.Entry(timestamp=1104689888.177563,
                                                                       actor=L1477),
                                'a51f96a48acf383d67b6': registry.Entry(timestamp=1108956747.618078,
                                                                       actor=L750),
                                '8511836882149982016': registry.Entry(timestamp=1104650706.713083,
                                                                      actor=L1436),
                                '232be96254a60b1185f4': registry.Entry(timestamp=1109428842.672349,
                                                                       actor=L1654),
                                'eaad67a6f405387e7f63': registry.Entry(timestamp=1109428392.426419,
                                                                       actor=L229),
                                '1f450f46787e5df1a832': registry.Entry(timestamp=1109433892.9024999,
                                                                       actor=L128),
                                'f57378bfa8f1bda4717f': registry.Entry(timestamp=1109428871.343946,
                                                                       actor=L1668),
                                'e6e700e2d7e729e3e72': registry.Entry(timestamp=1104807950.8954489,
                                                                      actor=L1529),
                                '2f63027d1e8f1c1a37fd': registry.Entry(timestamp=1109428835.8189859,
                                                                       actor=L1373),
                                '16136617492328534660': registry.Entry(timestamp=1104650949.250061,
                                                                       actor=L1134),
                                '6c6ed31f12ce3e23a22a': registry.Entry(timestamp=1109434683.425472,
                                                                       actor=L491),
                                '14138594607498135940': registry.Entry(timestamp=1104650760.299006,
                                                                       actor=L632),
                                '9638377965285201700': registry.Entry(timestamp=1104632228.3473179,
                                                                      actor=L1467),
                                '1aa5ec03a965669b0022': registry.Entry(timestamp=1109423781.7648139,
                                                                       actor=L420),
                                '236d38760c6a183af6f8': registry.Entry(timestamp=1108956215.9963861,
                                                                       actor=L1250),
                                '1546622807325074855': registry.Entry(timestamp=1104696117.3322141,
                                                                      actor=L587),
                                '7936621921662856627': registry.Entry(timestamp=1104650549.672792,
                                                                      actor=L1330),
                                'e87eee5c7103444d365b': registry.Entry(timestamp=1108412101.378515,
                                                                       actor=L1321),
                                '941178e1441881defb2b': registry.Entry(timestamp=1108412101.4808841,
                                                                       actor=L343),
                                '97cdf671f963709d9eb3': registry.Entry(timestamp=1108412173.8229091,
                                                                       actor=L867),
                                '6817141969146993628': registry.Entry(timestamp=1104708982.6086359,
                                                                      actor=L1159),
                                '12545444783397887118': registry.Entry(timestamp=1104693955.28495,
                                                                       actor=L530),
                                '7a19485e947469b48f5d': registry.Entry(timestamp=1105921826.4260719,
                                                                       actor=L1674),
                                '13319024784900900893': registry.Entry(timestamp=1104730507.798197,
                                                                       actor=L349),
                                'cc5e0eda4ea20f97f227': registry.Entry(timestamp=1208019541.5957279,
                                                                       actor=L1647),
                                '12946586331713097828': registry.Entry(timestamp=1104650753.210412,
                                                                       actor=L293),
                                '1061218531910574846': registry.Entry(timestamp=1104706912.3873279,
                                                                      actor=L568),
                                '59366674524a8992ec57': registry.Entry(timestamp=1105921808.808475,
                                                                       actor=L1690),
                                '34874108ea81817dd45f': registry.Entry(timestamp=1109428828.336385,
                                                                       actor=L1572),
                                '620b2cb3deba6d946d89': registry.Entry(timestamp=1109433834.8225541,
                                                                       actor=L138),
                                '12473ee71c96cd605738': registry.Entry(timestamp=1108412101.3312759,
                                                                       actor=L1485),
                                '2496797421715521539': registry.Entry(timestamp=1104732153.4440341,
                                                                      actor=L348),
                                '4f4d746968439adc77f8': registry.Entry(timestamp=1108956726.5260489,
                                                                       actor=L1567),
                                'fc67e57428a80e5c577': registry.Entry(timestamp=1109434690.4835491,
                                                                      actor=L342),
                                '959c6923ca073aa23ec2': registry.Entry(timestamp=1105921745.7405829,
                                                                       actor=L906),
                                '9e1868775012070da71': registry.Entry(timestamp=1109434991.6687219,
                                                                      actor=L1428),
                                'd0f449aa58533e36ea69': registry.Entry(timestamp=1109433966.3965299,
                                                                       actor=L152),
                                '27642d37c9e93d88a9d3': registry.Entry(timestamp=1108412173.8300371,
                                                                       actor=L492),
                                '66d46b6a4c45495d85f': registry.Entry(timestamp=1108412101.364145,
                                                                      actor=L1649),
                                'c4491d62f5b2c77c1788': registry.Entry(timestamp=1109435027.723671,
                                                                       actor=L1710),
                                '9cab7b2aaf0861d72052': registry.Entry(timestamp=1105921513.584868,
                                                                       actor=L30),
                                'b378f20f4218f5661db8': registry.Entry(timestamp=1109428186.7802711,
                                                                       actor=L246),
                                '38674a8406c10d8acc66': registry.Entry(timestamp=1105921513.4133351,
                                                                       actor=L907),
                                '11497005180784433127': registry.Entry(timestamp=1104730109.3140781,
                                                                       actor=L1101),
                                '11885770933734303644': registry.Entry(timestamp=1104689888.176734,
                                                                       actor=L1474),
                                '2909c2803333fa9763dd': registry.Entry(timestamp=1190665226.653671,
                                                                       actor=L1702),
                                'abd8c6c996e0bdee54ab': registry.Entry(timestamp=1105921788.513629,
                                                                       actor=L44),
                                '40318dd352f07bad2f32': registry.Entry(timestamp=1109435048.0906439,
                                                                       actor=L1284),
                                'a3707eafba7f8c29438f': registry.Entry(timestamp=1190665181.3520789,
                                                                       actor=L1747),
                                '7725879995356042119': registry.Entry(timestamp=1104633105.5330541,
                                                                      actor=L1049),
                                'c28f00da84aabe9711f8': registry.Entry(timestamp=1109428846.2577951,
                                                                       actor=L991),
                                '8275236787514389161': registry.Entry(timestamp=1104732146.0397589,
                                                                      actor=L1434),
                                '1049070116954587991': registry.Entry(timestamp=1104697494.401659,
                                                                      actor=L1569),
                                '211eb2ea127cce5956ea': registry.Entry(timestamp=1109433447.629179,
                                                                       actor=L114),
                                '6ae432c49f19b06e3dce': registry.Entry(timestamp=1109424192.8307281,
                                                                       actor=L1198),
                                '6842470814180133769': registry.Entry(timestamp=1104632241.948518,
                                                                      actor=L673),
                                '3adc62bc55fb88be1f69': registry.Entry(timestamp=1108412101.3760641,
                                                                       actor=L1480),
                                '5dc7e64e69d3a5a73189': registry.Entry(timestamp=1105921748.370198,
                                                                       actor=L895),
                                '1817218079521314969': registry.Entry(timestamp=1104632228.3319261,
                                                                      actor=L1424),
                                '16897814623275256082': registry.Entry(timestamp=1104632239.2551229,
                                                                       actor=L670),
                                '986b3d704ed99c37b1e2': registry.Entry(timestamp=1208019254.894026,
                                                                       actor=L1370),
                                '7984984827063085602': registry.Entry(timestamp=1104730507.8248301,
                                                                      actor=L1714),
                                '10726820175615189179': registry.Entry(timestamp=1104650549.657733,
                                                                       actor=L946),
                                '848b9113b67cd5bfccbc': registry.Entry(timestamp=1105921513.6032341,
                                                                       actor=L868),
                                'd368cd1b3e772c0dee3a': registry.Entry(timestamp=1109433734.2794211,
                                                                       actor=L149),
                                'eea508d94e56f68e728b': registry.Entry(timestamp=1108956215.9550979,
                                                                       actor=L1751),
                                'f675ab66721705423554': registry.Entry(timestamp=1109434712.600971,
                                                                       actor=L294),
                                '15000248107523643647': registry.Entry(timestamp=1104732488.3008361,
                                                                       actor=L296),
                                '13176058059947371572': registry.Entry(timestamp=1104697346.2155011,
                                                                       actor=L1524),
                                '6737ab2d99858d2cb98e': registry.Entry(timestamp=1190665221.2731609,
                                                                       actor=L1534),
                                'b25d5843447a0422c30a': registry.Entry(timestamp=1108412101.3371241,
                                                                       actor=L1700),
                                '2a4f7a3dcd2f87a7532b': registry.Entry(timestamp=1105921690.9049809,
                                                                       actor=L879),
                                'e20bc13b888334ad3537': registry.Entry(timestamp=1108956448.854455,
                                                                       actor=L1427),
                                '15354271914547105265': registry.Entry(timestamp=1104689747.0002921,
                                                                       actor=L956),
                                '9829540809193203453': registry.Entry(timestamp=1104633108.691174,
                                                                      actor=L1259),
                                '11244828830854864470': registry.Entry(timestamp=1104633047.078866,
                                                                       actor=L866),
                                '9e55068b582c80b9f474': registry.Entry(timestamp=1108412101.4894359,
                                                                       actor=L1204),
                                'de5f81ed1b494d3519df': registry.Entry(timestamp=1109433597.6299551,
                                                                       actor=L145),
                                '6aa8789df5ecc4190c79': registry.Entry(timestamp=1108956850.9261429,
                                                                       actor=L1086),
                                'f8670e226436fa73128f': registry.Entry(timestamp=1109428826.413799,
                                                                       actor=L269),
                                'def59007c148e24940ad': registry.Entry(timestamp=1190664334.0511611,
                                                                       actor=L3),
                                '35269d3b8f3f78114257': registry.Entry(timestamp=1108956796.8554609,
                                                                       actor=L1062),
                                'fa59d03a167a4c1b94ff': registry.Entry(timestamp=1109434755.246258,
                                                                       actor=L156),
                                'fcceeb077cb614ca85f8': registry.Entry(timestamp=1105921806.0911419,
                                                                       actor=L1795),
                                '93a74d12b66f1bf6d440': registry.Entry(timestamp=1109677336.731226,
                                                                       actor=L122),
                                '4a3c84658bd78b1029a1': registry.Entry(timestamp=1208019245.830636,
                                                                       actor=L1132),
                                '5d52906b91dc36916500': registry.Entry(timestamp=1104807950.912137,
                                                                       actor=L1699),
                                '54573033a0f923d876e0': registry.Entry(timestamp=1109422775.108053,
                                                                       actor=L1129),
                                '120d37656e5a1a12158e': registry.Entry(timestamp=1109428443.6542909,
                                                                       actor=L253),
                                '4667264518391135515': registry.Entry(timestamp=1104650724.1308751,
                                                                      actor=L744),
                                'e94c4dff11c20c4a0886': registry.Entry(timestamp=1104797071.7125549,
                                                                       actor=L1295),
                                '3324730690425372007': registry.Entry(timestamp=1104650549.6319871,
                                                                      actor=L854),
                                '5591050765793200711': registry.Entry(timestamp=1104732505.688601,
                                                                      actor=L1527),
                                '12051635174327115429': registry.Entry(timestamp=1104650712.6820021,
                                                                       actor=L1667),
                                '9fe8821ff61c3fe3b77d': registry.Entry(timestamp=1109422775.0955131,
                                                                       actor=L1685),
                                '56191cb3e8143011d87c': registry.Entry(timestamp=1190665181.347971,
                                                                       actor=L320),
                                '5274326361166066280': registry.Entry(timestamp=1104693745.0998559,
                                                                      actor=L591),
                                '13270445787827545889': registry.Entry(timestamp=1104730109.3088651,
                                                                       actor=L1478),
                                'c223f740d0189de07951': registry.Entry(timestamp=1109435170.1033919,
                                                                       actor=L1432),
                                '9ed64c1f46f388ef377e': registry.Entry(timestamp=1108412240.3527069,
                                                                       actor=L57),
                                '1a3edd7a42ba08472afd': registry.Entry(timestamp=1108956448.852829,
                                                                       actor=L1426),
                                '55786e30b2bf1b3ea69f': registry.Entry(timestamp=1109428799.6917369,
                                                                       actor=L1680),
                                '4442827039649434997': registry.Entry(timestamp=1104650930.7920511,
                                                                      actor=L1679),
                                '322fb4bc7605aa8653e2': registry.Entry(timestamp=1109435009.982374,
                                                                       actor=L1672),
                                '474b80e51e808fed1a99': registry.Entry(timestamp=1109433451.294275,
                                                                       actor=L113),
                                '12128037699416130148': registry.Entry(timestamp=1104732146.0393341,
                                                                       actor=L1433),
                                '6f3a7f7d336523b08bd4': registry.Entry(timestamp=1109422775.123138,
                                                                       actor=L1530),
                                '10871997212631801029': registry.Entry(timestamp=1104730109.3334141,
                                                                       actor=L828),
                                '13387220976027820258': registry.Entry(timestamp=1104650712.644146,
                                                                       actor=L1050),
                                '7a89bcf8d307b258b3b4': registry.Entry(timestamp=1109435009.9851551,
                                                                       actor=L205),
                                '672462e5d7d6c8606fe3': registry.Entry(timestamp=1109434948.9922681,
                                                                       actor=L100),
                                'bb9c4f22765c549d20f1': registry.Entry(timestamp=1208019537.386277,
                                                                       actor=L776),
                                '708093d3f5efae9ceb81': registry.Entry(timestamp=1109435009.994391,
                                                                       actor=L1165),
                                '67eeb2429b63101a4ec7': registry.Entry(timestamp=1108412161.574615,
                                                                       actor=L1202),
                                '994f72d124ba4ab3e643': registry.Entry(timestamp=1109435124.707993,
                                                                       actor=L1706),
                                '1679989706457713520': registry.Entry(timestamp=1104706912.3876929,
                                                                      actor=L570),
                                'e18028cacd7efe69dfbb': registry.Entry(timestamp=1190665154.678051,
                                                                       actor=L337),
                                '6402116433048299654': registry.Entry(timestamp=1104650712.6671181,
                                                                      actor=L743),
                                '70ca891a948da6b4fd73': registry.Entry(timestamp=1109422775.1296489,
                                                                       actor=L1203),
                                '15511116157062632786': registry.Entry(timestamp=1104650712.6740661,
                                                                       actor=L11),
                                'fff687e48591806e7d56': registry.Entry(timestamp=1109435168.3178489,
                                                                       actor=L1155),
                                'b774260d0676ba628669': registry.Entry(timestamp=1104797063.3239031,
                                                                       actor=L1425),
                                'b714558827a1934689eb': registry.Entry(timestamp=1109435027.72104,
                                                                       actor=L1709),
                                '9ffceadfb339bf0a37b7': registry.Entry(timestamp=1109434995.1128759,
                                                                       actor=L1154),
                                'dee2d9a8289d27ac176a': registry.Entry(timestamp=1109424028.7127371,
                                                                       actor=L241),
                                '804e5b1a3b2aadf7c001': registry.Entry(timestamp=1109423781.762228,
                                                                       actor=L419),
                                '13472432016877657261': registry.Entry(timestamp=1104650549.645519,
                                                                       actor=L1570),
                                '4cb50eebe02b70a0d71b': registry.Entry(timestamp=1190664334.091352,
                                                                       actor=L297),
                                '9564f27dcab30da4c8d4': registry.Entry(timestamp=1190664334.0540831,
                                                                       actor=L1793),
                                '25c2e6f96744ae60c374': registry.Entry(timestamp=1105921513.572356,
                                                                       actor=L1375),
                                'CCDF40493E712274L': registry.Entry(timestamp=1104796672.1500449,
                                                                    actor=L1577),
                                '93ea785fea4a1506079a': registry.Entry(timestamp=1108412161.5768311,
                                                                       actor=L498),
                                '22eb057b0621169328c9': registry.Entry(timestamp=1108956215.9773271,
                                                                       actor=L856),
                                '658c0f7cf8f1c49b6a69': registry.Entry(timestamp=1208019537.388222,
                                                                       actor=L812),
                                '73d4b6bd3504795305a1': registry.Entry(timestamp=1109424445.3275061,
                                                                       actor=L274),
                                '8060076283853931247': registry.Entry(timestamp=1104650549.665045,
                                                                      actor=L1658),
                                '7472656884655288975': registry.Entry(timestamp=1104689853.1316221,
                                                                      actor=L1329),
                                'fd0e0dcd73af9e72f597': registry.Entry(timestamp=1108956216.009995,
                                                                       actor=L953),
                                '17980192334006365197': registry.Entry(timestamp=1104632228.403507,
                                                                       actor=L1651),
                                '7fd28421399c0260a1a0': registry.Entry(timestamp=1109428731.5971761,
                                                                       actor=L234),
                                '4178227206424925539': registry.Entry(timestamp=1104650549.674288,
                                                                      actor=L1472),
                                '15250013233234179905': registry.Entry(timestamp=1104632228.3750589,
                                                                       actor=L426),
                                '6c85152f239871975017': registry.Entry(timestamp=1109428208.878855,
                                                                       actor=L425),
                                '3cb26424481623ed41bc': registry.Entry(timestamp=1108956926.1981299,
                                                                       actor=L1091),
                                '1c4a4e54eec83f776e4a': registry.Entry(timestamp=1109424192.8323901,
                                                                       actor=L1199),
                                '12946925928954107809': registry.Entry(timestamp=1104730507.796433,
                                                                       actor=L1052),
                                '92d4a78cea106df07c2c': registry.Entry(timestamp=1108956796.853735,
                                                                       actor=L1061),
                                '14095654525563810214': registry.Entry(timestamp=1104694007.8913209,
                                                                       actor=L529),
                                'a14d85d55467ffe04ee0': registry.Entry(timestamp=1109435018.4971809,
                                                                       actor=L1573),
                                'c25353745b522913f4c2': registry.Entry(timestamp=1109424299.653085,
                                                                       actor=L277),
                                '659985c7578a877b07e3': registry.Entry(timestamp=1109428804.8175659,
                                                                       actor=L1707),
                                '437ed8478e622b78736e': registry.Entry(timestamp=1208019541.593823,
                                                                       actor=L1001),
                                '4f3f54f1d8db5a25f118': registry.Entry(timestamp=1108956216.005373,
                                                                       actor=L1279),
                                '13661059783025868973': registry.Entry(timestamp=1104633042.4138801,
                                                                       actor=L675),
                                '7aa131ceb0eae191a3ed': registry.Entry(timestamp=1108956833.1141219,
                                                                       actor=L1750),
                                '6055406963319936966': registry.Entry(timestamp=1104650753.2101431,
                                                                      actor=L292),
                                '354f3356b414dbdf6595': registry.Entry(timestamp=1109435083.837661,
                                                                       actor=L85),
                                '10927938414203847443': registry.Entry(timestamp=1104689958.5300021,
                                                                       actor=L575),
                                '420e55efa0fb8d8f2ffd': registry.Entry(timestamp=1109428835.814178,
                                                                       actor=L262),
                                'fd6a40ab5331a449ac99': registry.Entry(timestamp=1104797063.2925529,
                                                                       actor=L1290),
                                '1359982258694374825': registry.Entry(timestamp=1104632228.379292,
                                                                      actor=L999),
                                '10593314374053890933': registry.Entry(timestamp=1104730507.788162,
                                                                       actor=L1660),
                                'ad509debf6bb51e095c9': registry.Entry(timestamp=1108412101.357022,
                                                                       actor=L1531),
                                'b33414f37886533390d2': registry.Entry(timestamp=1108412161.582691,
                                                                       actor=L502),
                                'f5a54a967633535bf134': registry.Entry(timestamp=1109422948.6272831,
                                                                       actor=L227),
                                '10103513020179766570': registry.Entry(timestamp=1104690335.904788,
                                                                       actor=L580),
                                'c757003da8382520250d': registry.Entry(timestamp=1105921822.3753741,
                                                                       actor=L1482),
                                '261ec3b86d5f1af30a43': registry.Entry(timestamp=1109435160.16693,
                                                                       actor=L1380),
                                '14107852319538388771': registry.Entry(timestamp=1104730507.833338,
                                                                       actor=L1653),
                                '73f50a3f60d178768e5d': registry.Entry(timestamp=1104807950.8976121,
                                                                       actor=L469),
                                'ef7b8185a1e8d3a1d99e': registry.Entry(timestamp=1208019245.8276751,
                                                                       actor=L1325),
                                'f9ab36734295b51f1fb9': registry.Entry(timestamp=1109435170.1005421,
                                                                       actor=L186),
                                '3ed58789fe9a7d9623fa': registry.Entry(timestamp=1104797063.3068709,
                                                                       actor=L1328),
                                '11549355846312153998': registry.Entry(timestamp=1104632228.3814001,
                                                                       actor=L1045),
                                '3191a13927a42a0aca34': registry.Entry(timestamp=1109428764.7491829,
                                                                       actor=L1288),
                                '9ca23758d3e14b14e22f': registry.Entry(timestamp=1105921548.3496211,
                                                                       actor=L82),
                                '4138178436990957034': registry.Entry(timestamp=1104732505.688319,
                                                                      actor=L1526),
                                '6920636786683624616': registry.Entry(timestamp=1104690523.1329401,
                                                                      actor=L1677),
                                '32b6411e86ed3305be63': registry.Entry(timestamp=1108956726.5277021,
                                                                       actor=L1065),
                                '14726587180619911525': registry.Entry(timestamp=1104633035.78582,
                                                                       actor=L681),
                                'a125bcaed7f5954b9150': registry.Entry(timestamp=1109422775.1189499,
                                                                       actor=L1388),
                                '1564538181099476570': registry.Entry(timestamp=1104690401.654279,
                                                                      actor=L1791),
                                'ac567c51e8219e69ff16': registry.Entry(timestamp=1190664334.070976,
                                                                       actor=L1469),
                                'f4e883b36a48f3be4880': registry.Entry(timestamp=1109422945.6852801,
                                                                       actor=L266),
                                'dfd2c79df992922d1acf': registry.Entry(timestamp=1105921540.9413459,
                                                                       actor=L1656),
                                '12182569062741163979': registry.Entry(timestamp=1104730109.3149381,
                                                                       actor=L1126),
                                'ca15ef2c3a7701c12458': registry.Entry(timestamp=1109423159.0988619,
                                                                       actor=L231),
                                '1b5a49fb0fec6944ecc4': registry.Entry(timestamp=1105921513.538332,
                                                                       actor=L1164),
                                'a7bd903423cd5317bd7b': registry.Entry(timestamp=1109428831.4499919,
                                                                       actor=L1131),
                                '17801320630458131755': registry.Entry(timestamp=1104689816.700052,
                                                                       actor=L1205),
                                '2d3ff26bf3a1ccdbda01': registry.Entry(timestamp=1109428838.222214,
                                                                       actor=L1368),
                                '3dda188fab7c5720065a': registry.Entry(timestamp=1208019245.8287461,
                                                                       actor=L804),
                                '13838842964897476745': registry.Entry(timestamp=1104650720.799705,
                                                                       actor=L1520),
                                'f96001099601a04981f6': registry.Entry(timestamp=1108956537.787472,
                                                                       actor=L1094),
                                '9191949582763768590': registry.Entry(timestamp=1104732153.4437671,
                                                                      actor=L347),
                                'cea976a1318c7f6a6ec': registry.Entry(timestamp=1109434693.650279,
                                                                      actor=L194),
                                '7798158345955886274': registry.Entry(timestamp=1104650549.6464159,
                                                                      actor=L1361),
                                '3cadcfebb3425343d2ae': registry.Entry(timestamp=1109434660.0012491,
                                                                       actor=L173),
                                '5b74f62f6857b7956095': registry.Entry(timestamp=1208019245.8256199,
                                                                       actor=L1389),
                                '2956948422716100561': registry.Entry(timestamp=1104706912.386812,
                                                                      actor=L569),
                                '4131740470354140357': registry.Entry(timestamp=1104697377.9553559,
                                                                      actor=L595),
                                '740e543a73fba8ae453f': registry.Entry(timestamp=1109677327.1529441,
                                                                       actor=L1008),
                                '8ceb80a0f5e5a7b0bbd6': registry.Entry(timestamp=1208019554.7395229,
                                                                       actor=L1481),
                                'e568157c9501ba7cfc6a': registry.Entry(timestamp=1109428462.781116,
                                                                       actor=L1681),
                                'c700b53d7a40117bd126': registry.Entry(timestamp=1109435168.315073,
                                                                       actor=L1156),
                                '2805739992860418134': registry.Entry(timestamp=1104650712.650219,
                                                                      actor=L1371),
                                'a80d84152cb05bbf1286': registry.Entry(timestamp=1109424025.394774,
                                                                       actor=L243),
                                '8549478301856461533': registry.Entry(timestamp=1104730507.77914,
                                                                      actor=L1716),
                                '400632f1c4d59068aadc': registry.Entry(timestamp=1104797063.3278401,
                                                                       actor=L1565),
                                '3bcc6e02355a4489272b': registry.Entry(timestamp=1109434795.845222,
                                                                       actor=L346),
                                '12904228506947022660': registry.Entry(timestamp=1104632228.327944,
                                                                       actor=L644),
                                'af6bc0bdd2da549d34ab': registry.Entry(timestamp=1109435027.7326839,
                                                                       actor=L1675),
                                '978002a771fdb82dea39': registry.Entry(timestamp=1109435124.705168,
                                                                       actor=L1705),
                                '8ab96d54de6dae117484': registry.Entry(timestamp=1109428846.255095,
                                                                       actor=L990),
                                '905b734d21990d905889': registry.Entry(timestamp=1109422775.0432079,
                                                                       actor=L1566),
                                '8608183716299200486': registry.Entry(timestamp=1104632228.3480451,
                                                                      actor=L1659),
                                '7436199748876259015': registry.Entry(timestamp=1104696844.4145091,
                                                                      actor=L1788),
                                '63d95a5f3af1685a4628': registry.Entry(timestamp=1104807978.8575661,
                                                                       actor=L1422),
                                '69de3657b02e113b0f93': registry.Entry(timestamp=1108412173.8187251,
                                                                       actor=L525),
                                '14955675966070121265': registry.Entry(timestamp=1104650712.6410279,
                                                                       actor=L957),
                                'f607f8a7a922d909c959': registry.Entry(timestamp=1105921825.2458611,
                                                                       actor=L1794),
                                '33f0080422fa3454881b': registry.Entry(timestamp=1208019263.446157,
                                                                       actor=L802),
                                '81ea31f2e40de4411915': registry.Entry(timestamp=1108956454.267065,
                                                                       actor=L1),
                                'ea1042a44339a6b6299c': registry.Entry(timestamp=1108956216.0383761,
                                                                       actor=L1479),
                                '4f7773f6e389793f5cff': registry.Entry(timestamp=1109428842.6749821,
                                                                       actor=L1655),
                                '77c7ce5c863dd5a05a76': registry.Entry(timestamp=1109422775.0328751,
                                                                       actor=L1009),
                                '1011012714027468268': registry.Entry(timestamp=1104650712.6589899,
                                                                      actor=L640),
                                'c171aaf4622a67eec25f': registry.Entry(timestamp=1105921745.787854,
                                                                       actor=L897),
                                '13286087984584598130': registry.Entry(timestamp=1104650712.6619079,
                                                                       actor=L1003),
                                '96f0ef4cbdcdc2586bf0': registry.Entry(timestamp=1109428182.139416,
                                                                       actor=L1384),
                                '40a8e69a8169b7a993b1': registry.Entry(timestamp=1108956889.0060489,
                                                                       actor=L1473),
                                '10e10ac18640c6dd2364': registry.Entry(timestamp=1109434627.705112,
                                                                       actor=L1704),
                                '4939350837483695449': registry.Entry(timestamp=1104730109.317359,
                                                                      actor=L1043),
                                'daa4bbacf74bab652f0a': registry.Entry(timestamp=1109434477.727283,
                                                                       actor=L1671),
                                '8096643624464055522': registry.Entry(timestamp=1104633049.924382,
                                                                      actor=L679),
                                'c6395c42b17dc6409a98': registry.Entry(timestamp=1108956695.1835511,
                                                                       actor=L1662),
                                'ce21e0cc674c8dff1aa1': registry.Entry(timestamp=1109428875.2832229,
                                                                       actor=L1287),
                                'f1b64b96203dc1031e47': registry.Entry(timestamp=1109433805.3580141,
                                                                       actor=L125),
                                'f2761198c8015e58297d': registry.Entry(timestamp=1109422775.0365369,
                                                                       actor=L858),
                                '987ba6d80c536ef72fd3': registry.Entry(timestamp=1104796957.85256,
                                                                       actor=L351),
                                '112755c6b7b0197ca6bb': registry.Entry(timestamp=1105921513.5788419,
                                                                       actor=L1419),
                                '335fd96b953d2239db53': registry.Entry(timestamp=1109433926.7197659,
                                                                       actor=L131),
                                '2c4f6289354906ecf08': registry.Entry(timestamp=1109424447.4493661,
                                                                      actor=L1698),
                                '11512313525346285370': registry.Entry(timestamp=1104730109.340476,
                                                                       actor=L1521),
                                '477d1d63d2661835065d': registry.Entry(timestamp=1105921513.564682,
                                                                       actor=L1692),
                                '14095783355500097386': registry.Entry(timestamp=1104633023.2535551,
                                                                       actor=L1000),
                                '84af1be6f390fc4f0d92': registry.Entry(timestamp=1108412234.059459,
                                                                       actor=L1484),
                                '76105c3de42692569c7f': registry.Entry(timestamp=1190665257.4738071,
                                                                       actor=L323),
                                'c97d9bb0c2aa5df61e6e': registry.Entry(timestamp=1108412101.454735,
                                                                       actor=L1376),
                                'dc10179ce6eb719eddec': registry.Entry(timestamp=1105921587.3464301,
                                                                       actor=L900),
                                '132bd817a0e8acb0485e': registry.Entry(timestamp=1108956833.1580081,
                                                                       actor=L1088),
                                '40e51ffc174da6c81c4f': registry.Entry(timestamp=1108412101.37217,
                                                                       actor=L1278),
                                '5292533547202728044': registry.Entry(timestamp=1104730442.7894969,
                                                                      actor=L1166),
                                'e5fb3e230d899e6a15ec': registry.Entry(timestamp=1208019537.3884959,
                                                                       actor=L815),
                                'f84c449eddb7e174f514': registry.Entry(timestamp=1108956539.883023,
                                                                       actor=L1533),
                                '16495268673511082035': registry.Entry(timestamp=1104795314.0476921,
                                                                       actor=L1715),
                                '89b4ca205464b571e41e': registry.Entry(timestamp=1109428157.5395341,
                                                                       actor=L1254),
                                '8a9f1ac419253f7817c7': registry.Entry(timestamp=1105921826.4286239,
                                                                       actor=L1673),
                                '9462070805789713288': registry.Entry(timestamp=1104650549.652365,
                                                                      actor=L1652),
                                '15604201270503278878': registry.Entry(timestamp=1104632228.3436141,
                                                                       actor=L1713),
                                '12079799893167868995': registry.Entry(timestamp=1104693742.1302421,
                                                                       actor=L584),
                                'daf060d1d66ad487dee3': registry.Entry(timestamp=1109435117.514183,
                                                                       actor=L1005),
                                'c88c9deae9a8bad90c4': registry.Entry(timestamp=1190664334.047466,
                                                                      actor=L319),
                                '5217137786238671049': registry.Entry(timestamp=1104632241.9482341,
                                                                      actor=L1665),
                                '1f966172227f701d36a1': registry.Entry(timestamp=1109434798.857053,
                                                                       actor=L861),
                                '7522505065968084182': registry.Entry(timestamp=1104730507.792691,
                                                                      actor=L1206),
                                '2ce2546b3a61d585544e': registry.Entry(timestamp=1108412161.584934,
                                                                       actor=L505),
                                '10579116576104148034': registry.Entry(timestamp=1104632797.6333671,
                                                                       actor=L1670),
                                'bc6686a069873608f287': registry.Entry(timestamp=1109434503.0064521,
                                                                       actor=L163),
                                'cac21146f6ccd1384dcb': registry.Entry(timestamp=1108956794.6392231,
                                                                       actor=L1386),
                                '12427553908187455670': registry.Entry(timestamp=1104730109.330364,
                                                                       actor=L1161),
                                '4edd14e178ad0c694a5f': registry.Entry(timestamp=1104807944.3474181,
                                                                       actor=L1289),
                                '1f894cedda7a5116c672': registry.Entry(timestamp=1109433555.5110941,
                                                                       actor=L90),
                                '202f42bea33bd7dcb5c7': registry.Entry(timestamp=1105921808.8114059,
                                                                       actor=L1689),
                                '11346868527983282560': registry.Entry(timestamp=1104632803.6578569,
                                                                       actor=L638),
                                '5b87ae2914a9f9836ec7': registry.Entry(timestamp=1208019554.739634,
                                                                       actor=L808),
                                '7c9da28e49e64a268faa': registry.Entry(timestamp=1208019245.8292351,
                                                                       actor=L1047),
                                '12280374078573952893': registry.Entry(timestamp=1104689747.0388479,
                                                                       actor=L536),
                                '5186614581370432354': registry.Entry(timestamp=1104730776.1944089,
                                                                      actor=L865),
                                '3719337025926476596': registry.Entry(timestamp=1104650549.6292789,
                                                                      actor=L1437),
                                '7708682ba51a597e4483': registry.Entry(timestamp=1109427882.6983581,
                                                                       actor=L1255),
                                '3d7fe3f0661198add7d2': registry.Entry(timestamp=1108956216.0018411,
                                                                       actor=L1686),
                                'b6d022a6aab1a9c58c67': registry.Entry(timestamp=1105921513.5993609,
                                                                       actor=L1701),
                                '7838193153830263651': registry.Entry(timestamp=1104730507.7985001,
                                                                      actor=L1703),
                                'ca30c87e605ba765be06': registry.Entry(timestamp=1109428804.8202569,
                                                                       actor=L1708),
                                '5ee3a50d3351e3b67fd4': registry.Entry(timestamp=1104807950.9019289,
                                                                       actor=L1374),
                                '10584963968992807980': registry.Entry(timestamp=1104730109.3000181,
                                                                       actor=L1167),
                                '63af8fe6397a4ec62ec8': registry.Entry(timestamp=1104807978.85042,
                                                                       actor=L466),
                                'fc1d1a3284d605538654': registry.Entry(timestamp=1109422775.0987959,
                                                                       actor=L291),
                                '129f5ab2812ebd35a6f3': registry.Entry(timestamp=1108956527.0244949,
                                                                       actor=L1096),
                                '8d2fd9ab021f90ee5c23': registry.Entry(timestamp=1208019541.593894,
                                                                       actor=L805),
                                '2737335135250149149': registry.Entry(timestamp=1104650724.1311619,
                                                                      actor=L631),
                                'cf3306171571f5115689': registry.Entry(timestamp=1109435018.505995,
                                                                       actor=L1568),
                                '15550032082523474268': registry.Entry(timestamp=1104650556.4493201,
                                                                       actor=L862),
                                'a9cb48105a7013552f52': registry.Entry(timestamp=1108412234.392565,
                                                                       actor=L521),
                                '1245e3bda58496bdf7e7': registry.Entry(timestamp=1105921513.4643559,
                                                                       actor=L902),
                                '1347a00d734365bfd85e': registry.Entry(timestamp=1108956747.616488,
                                                                       actor=L749),
                                '3491372217552124879': registry.Entry(timestamp=1104694604.2031541,
                                                                      actor=L827),
                                '13101820419664547343': registry.Entry(timestamp=1104632307.7753921,
                                                                       actor=L1669),
                                '48c31983ab36c2b93869': registry.Entry(timestamp=1109422775.113838,
                                                                       actor=L1528),
                                '2226060574216469791': registry.Entry(timestamp=1104795314.147552,
                                                                      actor=L641),
                                '6461598025166001448': registry.Entry(timestamp=1104689796.4098401,
                                                                      actor=L535),
                                '11009507096081710421': registry.Entry(timestamp=1104650949.2503321,
                                                                       actor=L1135),
                                'd6b5b4340e8822d2762c': registry.Entry(timestamp=1109434804.450887,
                                                                       actor=L1429),
                                '11031015219216838346': registry.Entry(timestamp=1104730109.341886,
                                                                       actor=L1693),
                                'bb790ac1a0ee7ed3ea5b': registry.Entry(timestamp=1109434798.854404,
                                                                       actor=L860),
                                '1d9f30f9466014fd9845': registry.Entry(timestamp=1208019245.8296211,
                                                                       actor=L1385),
                                'c136252aeda06b05ab25': registry.Entry(timestamp=1108412101.4477329,
                                                                       actor=L1646),
                                '6752b9d510ea35cf88d9': registry.Entry(timestamp=1190664334.057488,
                                                                       actor=L1657),
                                '7451b642c3dd07bfa37e': registry.Entry(timestamp=1208019554.7398829,
                                                                       actor=L809),
                                '40e992d83eee6dfcc7a5': registry.Entry(timestamp=1108412101.3672991,
                                                                       actor=L524),
                                'c16a270d21302658f53d': registry.Entry(timestamp=1108956776.0309,
                                                                       actor=L1099),
                                '35b913d9f1a9ff04226a': registry.Entry(timestamp=1109435098.7016151,
                                                                       actor=L1466),
                                '16622057499147950833': registry.Entry(timestamp=1104697074.9701481,
                                                                       actor=L560),
                                '3112541654131017587': registry.Entry(timestamp=1104633023.2538221,
                                                                      actor=L719),
                                '310e5faab910f546eb10': registry.Entry(timestamp=1109434795.8531029,
                                                                       actor=L1323),
                                '33c2fbb146d136f5d402': registry.Entry(timestamp=1109428835.8112259,
                                                                       actor=L1749),
                                '14245085994013281857': registry.Entry(timestamp=1104640325.6669509,
                                                                       actor=L1645),
                                'd3fa83e2175f56e2183f': registry.Entry(timestamp=1109434779.0693159,
                                                                       actor=L1130),
                                '10084807298204554591': registry.Entry(timestamp=1104730507.8413301,
                                                                       actor=L1663),
                                '2553436941368336606': registry.Entry(timestamp=1104632803.6574349,
                                                                      actor=L639),
                                '8343b425fd8ebf32117': registry.Entry(timestamp=1105921548.351846,
                                                                      actor=L83),
                                'd81a12a2169de556f93d': registry.Entry(timestamp=1108956488.748338,
                                                                       actor=L1694),
                                '18af9ec7344533271914': registry.Entry(timestamp=1109435018.501241,
                                                                       actor=L1574),
                                '16060064330232869464': registry.Entry(timestamp=1104730109.3031399,
                                                                       actor=L1525)})
L877 = actors.Actor(env=envs.Env(parent=L870),
                    script=L879)
L519 = actors.Actor(env=envs.Env(parent=L496),
                    script=L521)
L184 = envs.Env(parent=L168)
L182 = actors.Actor(env=envs.Env(parent=L184),
                    script=L153)

L1579.define(var='makemailbox',
             value=actors.Actor(env=L1579,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                                    inner_map={'sender': actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                                                                                                                                      inner_map={}),
                                                                                                                                                               serial_id=0,
                                                                                                                                                               parameters=['message'],
                                                                                                                                                               selector='send:')],
                                                                                                                                       next_serial_id=1),
                                                                                                               'mailbox': actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                                                                                                                                       inner_map={}),
                                                                                                                                                                serial_id=0,
                                                                                                                                                                parameters=[],
                                                                                                                                                                selector='first'),
                                                                                                                                                  actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                                                                                                                                       inner_map={}),
                                                                                                                                                                serial_id=1,
                                                                                                                                                                parameters=[],
                                                                                                                                                                selector='removefirst'),
                                                                                                                                                  actors.Method(body=actors.Expression(text='sender',
                                                                                                                                                                                       inner_map={}),
                                                                                                                                                                serial_id=2,
                                                                                                                                                                parameters=[],
                                                                                                                                                                selector='sender')],
                                                                                                                                        next_serial_id=3)}),
                                                                             serial_id=0,
                                                                             parameters=[],
                                                                             selector='run')],
                                                     next_serial_id=1)))

L1579.define(var='maildirectory',
              value=builtin.MailDirectory(env=envs.Env(parent=L1580)))

L1580.define(var='false',
              value=builtin.Boolean(value=False,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='falsevalue',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['truevalue',
                                                                                             'falsevalue'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1580.define(var='numberguard',
              value=builtin.TypeGuard(sample_instance=0))

L1580.define(var='listguard',
              value=builtin.TypeGuard(sample_instance=()))

L1580.define(var='makestamp',
              value=builtin.StampMaker())

L1580.define(var='booleanguard',
              value=builtin.TypeGuard(sample_instance=True))

L1580.define(var='makebox',
              value=builtin.BoxMaker())

L1580.define(var='true',
              value=builtin.Boolean(value=True,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='truevalue',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['truevalue',
                                                                                             'falsevalue'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1580.define(var='stringguard',
              value=builtin.TypeGuard(sample_instance=''))

L1580.define(var='if',
              value=actors.Actor(env=L1580,
                                 script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                     inner_map={}),
                                                                              serial_id=0,
                                                                              parameters=['test',
                                                                                          'yes',
                                                                                          'no'],
                                                                              selector='true:then:else:')],
                                                      next_serial_id=1)))

L874.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=(L877,))))

L874.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L874),
                                script=L885))

L874.define(var='mailbox',
             value=L872)

L870.define(var='box',
             value=L871)

L870.define(var='makemailbox',
             value=L869)

L870.define(var='mailbox',
             value=L872)

L870.define(var='makeballot',
             value=L895)

L870.define(var='maildirectory',
             value=L31)

L870.define(var='message',
             value=L877)

L870.define(var='Foo',
             value=L900)

L33.define(var='false',
            value=L34)

L33.define(var='numberguard',
            value=builtin.TypeGuard(sample_instance=0))

L33.define(var='listguard',
            value=builtin.TypeGuard(sample_instance=()))

L33.define(var='makestamp',
            value=builtin.StampMaker())

L33.define(var='booleanguard',
            value=builtin.TypeGuard(sample_instance=True))

L33.define(var='makebox',
            value=L44)

L33.define(var='true',
            value=L45)

L33.define(var='stringguard',
            value=builtin.TypeGuard(sample_instance=''))

L33.define(var='if',
            value=actors.Actor(env=L33,
                               script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                   inner_map={}),
                                                                            serial_id=0,
                                                                            parameters=['test',
                                                                                        'yes',
                                                                                        'no'],
                                                                            selector='true:then:else:')],
                                                    next_serial_id=1)))

L58.define(var='false',
            value=L59)

L58.define(var='numberguard',
            value=builtin.TypeGuard(sample_instance=0))

L58.define(var='listguard',
            value=builtin.TypeGuard(sample_instance=()))

L58.define(var='makestamp',
            value=builtin.StampMaker())

L58.define(var='booleanguard',
            value=builtin.TypeGuard(sample_instance=True))

L58.define(var='makebox',
            value=L69)

L58.define(var='true',
            value=L70)

L58.define(var='stringguard',
            value=builtin.TypeGuard(sample_instance=''))

L58.define(var='if',
            value=actors.Actor(env=L58,
                               script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                   inner_map={}),
                                                                            serial_id=0,
                                                                            parameters=['test',
                                                                                        'yes',
                                                                                        'no'],
                                                                            selector='true:then:else:')],
                                                    next_serial_id=1)))

L532.define(var='htmlguard',
             value=L541)

L532.define(var='markup',
             value=L571)

L532.define(var='html',
             value=L580)

L532.define(var='stamppair',
             value=L539)

L532.define(var='htmlstamp',
             value=L540)

L532.define(var='makeattr',
             value=L591)

L532.define(var='showattr',
             value=L530)

L533.define(var='box',
             value=L534)

L533.define(var='htmlmodule',
             value=L535)

L533.define(var='makemailbox',
             value=L610)

L533.define(var='mailbox',
             value=L624)

L533.define(var='maildirectory',
             value=L12)

L533.define(var='pair',
             value=L631)

L533.define(var='x',
             value=L633)

L533.define(var='Foo',
             value=L635)

L14.define(var='true',
            value=L15)

L14.define(var='makestamp',
            value=L21)

L14.define(var='false',
            value=L22)

L14.define(var='makebox',
            value=L28)

L14.define(var='listguard',
            value=L29)

L87.define(var='playgame',
            value=L85)

L87.define(var='makebranch',
            value=L145)

L87.define(var='call',
            value=L120)

L87.define(var='makeguess',
            value=L167)

L87.define(var='root',
            value=L173)

L88.define(var='box',
            value=L112)

L88.define(var='newanimalgame',
            value=L113)

L88.define(var='makemailbox',
            value=L213)

L88.define(var='animalgame',
            value=L227)

L88.define(var='mailbox',
            value=L280)

L88.define(var='maildirectory',
            value=L287)

L88.define(var='Foo',
            value=L289)

L89.define(var='false',
            value=L90)

L89.define(var='numberguard',
            value=builtin.TypeGuard(sample_instance=0))

L89.define(var='listguard',
            value=builtin.TypeGuard(sample_instance=()))

L89.define(var='makestamp',
            value=builtin.StampMaker())

L89.define(var='booleanguard',
            value=builtin.TypeGuard(sample_instance=True))

L89.define(var='makebox',
            value=L100)

L89.define(var='true',
            value=L101)

L89.define(var='stringguard',
            value=builtin.TypeGuard(sample_instance=''))

L89.define(var='if',
            value=actors.Actor(env=L89,
                               script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                   inner_map={}),
                                                                            serial_id=0,
                                                                            parameters=['test',
                                                                                        'yes',
                                                                                        'no'],
                                                                            selector='true:then:else:')],
                                                    next_serial_id=1)))

L190.define(var='guessernode',
             value=L188)

L190.define(var='animal',
             value=L191)

L807.define(var='mailbox',
             value=L805)

L807.define(var='inbox',
             value=L808)

L807.define(var='sender',
             value=L810)

L777.define(var='box',
             value=L801)

L777.define(var='makemailbox',
             value=L776)

L777.define(var='Foo',
             value=L802)

L777.define(var='mailbox',
             value=L805)

L777.define(var='maildirectory',
             value=L822)

L778.define(var='false',
             value=L779)

L778.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L778.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L778.define(var='makestamp',
             value=builtin.StampMaker())

L778.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L778.define(var='makebox',
             value=L789)

L778.define(var='true',
             value=L790)

L778.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L778.define(var='if',
             value=actors.Actor(env=L778,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L1683.define(var='question',
              value=L1681)

L276.define(var='box',
             value=L257)

L276.define(var='guess',
             value=L274)

L276.define(var='animal',
             value=L277)

L228.define(var='makequestion',
             value=L229)

L228.define(var='makeguess',
             value=L241)

L228.define(var='gamebox',
             value=L257)

L1333.define(var='mailbox',
              value=L1331)

L1333.define(var='sender',
              value=actors.Actor(env=envs.Env(parent=L1333),
                                 script=L1349))

L1333.define(var='inbox',
              value=builtin.Box(initial_value=builtin.List(elements=())))

L1334.define(var='box',
              value=L1344)

L1334.define(var='makemailbox',
              value=L1345)

L1334.define(var='Foo',
              value=L1359)

L1334.define(var='mailbox',
              value=L1331)

L1334.define(var='maildirectory',
              value=L1362)

L1335.define(var='true',
              value=L1336)

L1335.define(var='makestamp',
              value=L863)

L1335.define(var='false',
              value=L947)

L1335.define(var='makebox',
              value=L1342)

L1335.define(var='listguard',
              value=builtin.TypeGuard(sample_instance=()))

L422.define(var='query',
             value=builtin.String(str='Does it bark?'))

L422.define(var='question',
             value=L420)

L422.define(var='animal',
             value=builtin.String(str='dog'))

L299.define(var='box',
             value=L4)

L299.define(var='makemailbox',
             value=L298)

L299.define(var='Foo',
             value=L317)

L299.define(var='mailbox',
             value=L320)

L299.define(var='maildirectory',
             value=L337)

L300.define(var='false',
             value=L5)

L300.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L300.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L300.define(var='makestamp',
             value=builtin.StampMaker())

L300.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L300.define(var='makebox',
             value=L305)

L300.define(var='true',
             value=L306)

L300.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L300.define(var='if',
             value=actors.Actor(env=L300,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L496.define(var='box',
             value=L497)

L496.define(var='makemailbox',
             value=L498)

L496.define(var='mailbox',
             value=L512)

L496.define(var='maildirectory',
             value=L344)

L496.define(var='message',
             value=L519)

L496.define(var='Foo',
             value=L522)

L436.define(var='false',
             value=L437)

L436.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L436.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L436.define(var='makestamp',
             value=builtin.StampMaker())

L436.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L436.define(var='makebox',
             value=L447)

L436.define(var='true',
             value=L448)

L436.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L436.define(var='if',
             value=actors.Actor(env=L436,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L260.define(var='query',
             value=L261)

L260.define(var='yesnoquestion',
             value=L258)

L260.define(var='onno',
             value=L229)

L260.define(var='onyes',
             value=L262)

L1158.define(var='node',
              value=L177)

L1158.define(var='asker',
              value=L1156)

L180.define(var='yesbox',
             value=builtin.Box(initial_value=L182))

L180.define(var='askernode',
             value=L178)

L180.define(var='question',
             value=L186)

L180.define(var='nobox',
             value=builtin.Box(initial_value=L188))

L645.define(var='box',
             value=L655)

L645.define(var='makemailbox',
             value=L656)

L645.define(var='mailbox',
             value=L670)

L645.define(var='maildirectory',
             value=L677)

L645.define(var='message',
             value=L679)

L645.define(var='Foo',
             value=L683)

L645.define(var='tome',
             value=L675)

L646.define(var='false',
             value=L427)

L646.define(var='makebox',
             value=L647)

L646.define(var='true',
             value=L648)

L646.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L960._add_result(result=L962,
                  actor=L956)

L963._add_result(result=L965,
                  actor=L956)

L967._add_result(result=L635,
                  actor=L956)

L970._add_result(result=L534,
                  actor=L956)

L972._add_result(result=L15,
                  actor=L956)

L974._add_result(result=L22,
                  actor=L956)

L976._add_result(result=L978,
                  actor=L956)

L981._add_result(result=L12,
                  actor=L956)

L984._add_result(result=L624,
                  actor=L956)

L988._add_result(result=L535,
                  actor=L956)

L537._add_result(result=L539,
                  actor=L542)

L543._add_result(result=L540,
                  actor=L542)

L545._add_result(result=L541,
                  actor=L542)

L547._add_result(result=L571,
                  actor=L542)

L573._add_result(result=L580,
                  actor=L542)

L582._add_result(result=L591,
                  actor=L542)

L593._add_result(result=L530,
                  actor=L542)

L599._add_result(result=L601,
                  actor=L542)

L602._add_result(result=L604,
                  actor=L542)

L605._add_result(result=L607,
                  actor=L542)

L608._add_result(result='Error: No matching method: show',
                  actor=L542)

L282.define(var='mailbox',
             value=L280)

L282.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=())))

L282.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L282),
                                script=L217))

L1538._add_result(result=L1128,
                   actor=L1534)

L1540._add_result(result=L746,
                   actor=L1534)

L1543._add_result(result=L317,
                   actor=L1534)

L1546._add_result(result=L4,
                   actor=L1534)

L1548._add_result(result=L306,
                   actor=L1534)

L1550._add_result(result=L5,
                   actor=L1534)

L1552._add_result(result=L1470,
                   actor=L1534)

L1555._add_result(result=L337,
                   actor=L1534)

L1558._add_result(result=L320,
                   actor=L1534)

L1563._add_result(result=L306,
                   actor=L1534)

L1209.define(var='box',
              value=L1053)

L1209.define(var='makemailbox',
              value=L1226)

L1209.define(var='Foo',
              value=L1207)

L1209.define(var='mailbox',
              value=L1240)

L1209.define(var='maildirectory',
              value=L1247)

L1210.define(var='false',
              value=L1054)

L1210.define(var='numberguard',
              value=builtin.TypeGuard(sample_instance=0))

L1210.define(var='listguard',
              value=builtin.TypeGuard(sample_instance=()))

L1210.define(var='makestamp',
              value=builtin.StampMaker())

L1210.define(var='booleanguard',
              value=builtin.TypeGuard(sample_instance=True))

L1210.define(var='makebox',
              value=L350)

L1210.define(var='true',
              value=L1215)

L1210.define(var='stringguard',
              value=builtin.TypeGuard(sample_instance=''))

L1210.define(var='if',
              value=actors.Actor(env=L1210,
                                 script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                     inner_map={}),
                                                                              serial_id=0,
                                                                              parameters=['test',
                                                                                          'yes',
                                                                                          'no'],
                                                                              selector='true:then:else:')],
                                                      next_serial_id=1)))

L1719._add_result(result=L865,
                   actor=L1715)

L1721._add_result(result=L1661,
                   actor=L1715)

L1724._add_result(result=L1207,
                   actor=L1715)

L1727._add_result(result=L1053,
                   actor=L1715)

L1729._add_result(result=L1215,
                   actor=L1715)

L1731._add_result(result=L1054,
                   actor=L1715)

L1733._add_result(result=L1434,
                   actor=L1715)

L1736._add_result(result=L1247,
                   actor=L1715)

L1739._add_result(result=L1240,
                   actor=L1715)

L1743._add_result(result=L865,
                   actor=L1715)

L1745._add_result(result=L642,
                   actor=L1715)

L993.define(var='question',
             value=L991)

L264.define(var='box',
             value=L257)

L264.define(var='guess',
             value=L262)

L264.define(var='animal',
             value=L265)

L495.define(var='mailbox',
             value=L525)

L495.define(var='sender',
             value=L493)

L495.define(var='inbox',
             value=L527)

L1488._add_result(result=L1490,
                   actor=L1484)

L1491._add_result(result=L1493,
                   actor=L1484)

L1495._add_result(result=L522,
                   actor=L1484)

L1498._add_result(result=L497,
                   actor=L1484)

L1500._add_result(result=L70,
                   actor=L1484)

L1502._add_result(result=L59,
                   actor=L1484)

L1504._add_result(result=L1377,
                   actor=L1484)

L1507._add_result(result=L344,
                   actor=L1484)

L1510._add_result(result=L512,
                   actor=L1484)

L1514._add_result(result=L57,
                   actor=L1484)

L514.define(var='mailbox',
             value=L512)

L514.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L514),
                                script=L502))

L514.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=(L519,))))

L435.define(var='box',
             value=L459)

L435.define(var='makemailbox',
             value=L434)

L435.define(var='Foo',
             value=L460)

L435.define(var='maildirectory',
             value=L467)

L435.define(var='mailbox',
             value=L469)

L463._add_result(result=L465,
                  actor=L466)

L626.define(var='sender',
             value=actors.Actor(env=envs.Env(parent=L626),
                                script=L614))

L626.define(var='inbox',
             value=builtin.Box(initial_value=builtin.List(elements=())))

L626.define(var='mailbox',
             value=L624)

L672.define(var='mailbox',
             value=L670)

L672.define(var='inbox',
             value=L673)

L672.define(var='sender',
             value=L675)

L202.define(var='node',
             value=L173)

L202.define(var='guesser',
             value=L200)

L196.define(var='guessernode',
             value=L194)

L196.define(var='animal',
             value=L197)

L1260.define(var='false',
              value=builtin.Boolean(value=False,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='falseaction run',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['trueaction',
                                                                                             'falseaction'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1260.define(var='makebox',
              value=builtin.BoxMaker())

L1260.define(var='true',
              value=builtin.Boolean(value=True,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='trueaction run',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['trueaction',
                                                                                             'falseaction'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1260.define(var='listguard',
              value=builtin.TypeGuard(sample_instance=()))

L751.define(var='false',
             value=L752)

L751.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L751.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L751.define(var='makestamp',
             value=builtin.StampMaker())

L751.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L751.define(var='makebox',
             value=L762)

L751.define(var='true',
             value=L763)

L751.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L751.define(var='if',
             value=actors.Actor(env=L751,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L1067.define(var='sender',
              value=L1065)

L1067.define(var='inbox',
              value=L1068)

L1067.define(var='mailbox',
              value=L1070)

L1064.define(var='box',
              value=L997)

L1064.define(var='sender',
              value=L1065)

L1064.define(var='makemailbox',
              value=L1082)

L1064.define(var='mailbox',
              value=L1070)

L1064.define(var='makeballot',
              value=L1086)

L1064.define(var='maildirectory',
              value=L954)

L1064.define(var='message',
              value=L1062)

L1064.define(var='Foo',
              value=L1094)

L353.define(var='makemailbox',
             value=actors.Actor(env=L353,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='let inbox = makebox holding: []. make sender. make mailbox',
                                                                                                    inner_map={'sender': actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox <- ([message] + inbox get)',
                                                                                                                                                                                      inner_map={}),
                                                                                                                                                               serial_id=0,
                                                                                                                                                               parameters=['message'],
                                                                                                                                                               selector='send:')],
                                                                                                                                       next_serial_id=1),
                                                                                                               'mailbox': actors.Script(elements=[actors.Method(body=actors.Expression(text='inbox get at: 1',
                                                                                                                                                                                       inner_map={}),
                                                                                                                                                                serial_id=0,
                                                                                                                                                                parameters=[],
                                                                                                                                                                selector='first'),
                                                                                                                                                  actors.Method(body=actors.Expression(text='inbox <- (inbox get from: 2)',
                                                                                                                                                                                       inner_map={}),
                                                                                                                                                                serial_id=1,
                                                                                                                                                                parameters=[],
                                                                                                                                                                selector='removefirst'),
                                                                                                                                                  actors.Method(body=actors.Expression(text='sender',
                                                                                                                                                                                       inner_map={}),
                                                                                                                                                                serial_id=2,
                                                                                                                                                                parameters=[],
                                                                                                                                                                selector='sender')],
                                                                                                                                        next_serial_id=3)}),
                                                                             serial_id=0,
                                                                             parameters=[],
                                                                             selector='run')],
                                                     next_serial_id=1)))

L353.define(var='maildirectory',
             value=builtin.MailDirectory(env=envs.Env(parent=L354)))

L354.define(var='false',
             value=builtin.Boolean(value=False,
                                   script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                       inner_map={}),
                                                                                serial_id=0,
                                                                                parameters=[],
                                                                                selector='not'),
                                                                  actors.Method(body=actors.Expression(text='falsevalue',
                                                                                                       inner_map={}),
                                                                                serial_id=1,
                                                                                parameters=['truevalue',
                                                                                            'falsevalue'],
                                                                                selector='iftrue:iffalse:')],
                                                        next_serial_id=2)))

L354.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L354.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L354.define(var='makestamp',
             value=builtin.StampMaker())

L354.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L354.define(var='makebox',
             value=builtin.BoxMaker())

L354.define(var='true',
             value=builtin.Boolean(value=True,
                                   script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                       inner_map={}),
                                                                                serial_id=0,
                                                                                parameters=[],
                                                                                selector='not'),
                                                                  actors.Method(body=actors.Expression(text='truevalue',
                                                                                                       inner_map={}),
                                                                                serial_id=1,
                                                                                parameters=['truevalue',
                                                                                            'falsevalue'],
                                                                                selector='iftrue:iffalse:')],
                                                        next_serial_id=2)))

L354.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L354.define(var='if',
             value=actors.Actor(env=L354,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L1007.define(var='node',
              value=L193)

L1007.define(var='guesser',
              value=L1005)

L1104.define(var='box',
              value=L1044)

L1104.define(var='makemailbox',
              value=L1105)

L1104.define(var='Foo',
              value=L1102)

L1104.define(var='maildirectory',
              value=L829)

L1104.define(var='mailbox',
              value=L1119)

L831.define(var='false',
             value=L832)

L831.define(var='numberguard',
             value=builtin.TypeGuard(sample_instance=0))

L831.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L831.define(var='makestamp',
             value=builtin.StampMaker())

L831.define(var='booleanguard',
             value=builtin.TypeGuard(sample_instance=True))

L831.define(var='makebox',
             value=L842)

L831.define(var='true',
             value=L843)

L831.define(var='stringguard',
             value=builtin.TypeGuard(sample_instance=''))

L831.define(var='if',
             value=actors.Actor(env=L831,
                                script=actors.Script(elements=[actors.Method(body=actors.Expression(text='booleanguard check: test. (test iftrue: yes iffalse: no) run',
                                                                                                    inner_map={}),
                                                                             serial_id=0,
                                                                             parameters=['test',
                                                                                         'yes',
                                                                                         'no'],
                                                                             selector='true:then:else:')],
                                                     next_serial_id=1)))

L1257.define(var='question',
              value=L1255)

L1293._add_result(result=L1295,
                   actor=L1289)

L1296._add_result(result=L1298,
                   actor=L1289)

L1300._add_result(result=L460,
                   actor=L1289)

L1303._add_result(result=L459,
                   actor=L1289)

L1305._add_result(result=L448,
                   actor=L1289)

L1307._add_result(result=L437,
                   actor=L1289)

L1309._add_result(result=L1311,
                   actor=L1289)

L1314._add_result(result=L467,
                   actor=L1289)

L1317._add_result(result=L469,
                   actor=L1289)

L267._add_result(result=L257,
                  actor=L269)

L270._add_result(result=L241,
                  actor=L269)

L272._add_result(result=L274,
                  actor=L269)

L278._add_result(result=L258,
                  actor=L269)

L1012._add_result(result=L859,
                   actor=L1008)

L1014._add_result(result=L1016,
                   actor=L1008)

L1018._add_result(result=L289,
                   actor=L1008)

L1021._add_result(result=L112,
                   actor=L1008)

L1023._add_result(result=L101,
                   actor=L1008)

L1025._add_result(result=L90,
                   actor=L1008)

L1027._add_result(result=L1029,
                   actor=L1008)

L1032._add_result(result=L287,
                   actor=L1008)

L1035._add_result(result=L280,
                   actor=L1008)

L1039._add_result(result=L227,
                   actor=L1008)

L1041._add_result(result=L113,
                   actor=L1008)

L115._add_result(result=L120,
                  actor=L122)

L123._add_result(result=L145,
                  actor=L122)

L147._add_result(result=L167,
                  actor=L122)

L169._add_result(result='Error: No matching method: holding:',
                  actor=L122)

L171._add_result(result=L173,
                  actor=L122)

L198._add_result(result=L200,
                  actor=L122)

L203._add_result(result=L205,
                  actor=L122)

L208._add_result(result=L85,
                  actor=L122)

L471.define(var='inbox',
             value=L472)

L471.define(var='sender',
             value=L474)

L471.define(var='mailbox',
             value=L469)

L1242.define(var='mailbox',
              value=L1240)

L1242.define(var='inbox',
              value=builtin.Box(initial_value=builtin.List(elements=())))

L1242.define(var='sender',
              value=actors.Actor(env=envs.Env(parent=L1242),
                                 script=L1230))

L1170._add_result(result=L1172,
                   actor=L1166)

L1173._add_result(result=L1175,
                   actor=L1166)

L1177._add_result(result=L1102,
                   actor=L1166)

L1180._add_result(result=L1044,
                   actor=L1166)

L1182._add_result(result=L843,
                   actor=L1166)

L1184._add_result(result=L832,
                   actor=L1166)

L1186._add_result(result=L1162,
                   actor=L1166)

L1189._add_result(result=L829,
                   actor=L1166)

L1192._add_result(result=L1119,
                   actor=L1166)

L1196._add_result(result=L1166,
                   actor=L1166)

L338.define(var='alice',
             value=L323)

L1382.define(var='node',
              value=L173)

L1382.define(var='asker',
              value=L1380)

L176.define(var='yesbox',
             value=L177)

L176.define(var='askernode',
             value=L174)

L176.define(var='question',
             value=L192)

L176.define(var='nobox',
             value=L193)

L1431.define(var='terminus',
              value=L1429)

L1576.define(var='node',
              value=L177)

L1576.define(var='guesser',
              value=L1574)

L322.define(var='mailbox',
             value=L320)

L322.define(var='sender',
             value=L323)

L322.define(var='inbox',
             value=L328)

L1393._add_result(result=L1201,
                   actor=L1389)

L1395._add_result(result=L1326,
                   actor=L1389)

L1398._add_result(result=L802,
                   actor=L1389)

L1401._add_result(result=L801,
                   actor=L1389)

L1403._add_result(result=L790,
                   actor=L1389)

L1405._add_result(result=L779,
                   actor=L1389)

L1407._add_result(result=L1409,
                   actor=L1389)

L1412._add_result(result=L822,
                   actor=L1389)

L1415._add_result(result=L805,
                   actor=L1389)

L1440._add_result(result=L855,
                   actor=L1436)

L1442._add_result(result=L1277,
                   actor=L1436)

L1445._add_result(result=L1359,
                   actor=L1436)

L1448._add_result(result=L1344,
                   actor=L1436)

L1450._add_result(result=L1336,
                   actor=L1436)

L1452._add_result(result=L947,
                   actor=L1436)

L1454._add_result(result=L1252,
                   actor=L1436)

L1457._add_result(result=L1362,
                   actor=L1436)

L1460._add_result(result=L1331,
                   actor=L1436)

L1464._add_result(result='Error: exceptions.TypeError: unbound method __init__() must be called with Actor instance as first argument (got Stamp instance instead)',
                   actor=L1436)

L1136.define(var='true',
              value=builtin.Boolean(value=True,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='trueaction run',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['trueaction',
                                                                                             'falseaction'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1136.define(var='makestamp',
              value=builtin.StampMaker())

L1136.define(var='false',
              value=builtin.Boolean(value=False,
                                    script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                        inner_map={}),
                                                                                 serial_id=0,
                                                                                 parameters=[],
                                                                                 selector='not'),
                                                                   actors.Method(body=actors.Expression(text='falseaction run',
                                                                                                        inner_map={}),
                                                                                 serial_id=1,
                                                                                 parameters=['trueaction',
                                                                                             'falseaction'],
                                                                                 selector='iftrue:iffalse:')],
                                                         next_serial_id=2)))

L1136.define(var='makebox',
              value=builtin.BoxMaker())

L1136.define(var='listguard',
              value=builtin.TypeGuard(sample_instance=()))

L1712.define(var='terminus',
              value=L1710)

L720.define(var='true',
             value=builtin.Boolean(value=True,
                                   script=actors.Script(elements=[actors.Method(body=actors.Expression(text='false',
                                                                                                       inner_map={}),
                                                                                serial_id=0,
                                                                                parameters=[],
                                                                                selector='not'),
                                                                  actors.Method(body=actors.Expression(text='trueaction run',
                                                                                                       inner_map={}),
                                                                                serial_id=1,
                                                                                parameters=['trueaction',
                                                                                            'falseaction'],
                                                                                selector='iftrue:iffalse:')],
                                                        next_serial_id=2)))

L720.define(var='makebox',
             value=builtin.BoxMaker())

L720.define(var='false',
             value=builtin.Boolean(value=False,
                                   script=actors.Script(elements=[actors.Method(body=actors.Expression(text='true',
                                                                                                       inner_map={}),
                                                                                serial_id=0,
                                                                                parameters=[],
                                                                                selector='not'),
                                                                  actors.Method(body=actors.Expression(text='falseaction run',
                                                                                                       inner_map={}),
                                                                                serial_id=1,
                                                                                parameters=['trueaction',
                                                                                            'falseaction'],
                                                                                selector='iftrue:iffalse:')],
                                                        next_serial_id=2)))

L720.define(var='listguard',
             value=builtin.TypeGuard(sample_instance=()))

L910._add_result(result=L912,
                  actor=L906)

L913._add_result(result=L915,
                  actor=L906)

L917._add_result(result=L900,
                  actor=L906)

L920._add_result(result=L871,
                  actor=L906)

L922._add_result(result=L45,
                  actor=L906)

L924._add_result(result=L34,
                  actor=L906)

L926._add_result(result=L928,
                  actor=L906)

L931._add_result(result=L31,
                  actor=L906)

L934._add_result(result=L872,
                  actor=L906)

L938._add_result(result=L940,
                  actor=L906)

L942._add_result(result='Error: Unbound: makek',
                  actor=L906)

L944._add_result(result=L895,
                  actor=L906)

L207.define(var='node',
             value=L173)

L207.define(var='asker',
             value=L205)

L688._add_result(result=L690,
                  actor=L643)

L691._add_result(result=L490,
                  actor=L643)

L694._add_result(result=L683,
                  actor=L643)

L697._add_result(result=L655,
                  actor=L643)

L699._add_result(result=L648,
                  actor=L643)

L701._add_result(result=L427,
                  actor=L643)

L703._add_result(result=L705,
                  actor=L643)

L708._add_result(result=L677,
                  actor=L643)

L711._add_result(result=L670,
                  actor=L643)

L715._add_result(result=L675,
                  actor=L643)

L717._add_result(result=L719,
                  actor=L643)

L736._add_result(result=L738,
                  actor=L643)

L739._add_result(result='Error: exceptions.ZeroDivisionError: float division',
                  actor=L643)

L741._add_result(result='Error: Unbound: makestamp',
                  actor=L643)

L1121.define(var='sender',
              value=actors.Actor(env=envs.Env(parent=L1121),
                                 script=L1109))

L1121.define(var='inbox',
              value=builtin.Box(initial_value=builtin.List(elements=())))

L1121.define(var='mailbox',
              value=L1119)

L1754._add_result(result=L1427,
                   actor=L1750)

L1756._add_result(result=L857,
                   actor=L1750)

L1759._add_result(result=L1094,
                   actor=L1750)

L1762._add_result(result=L997,
                   actor=L1750)

L1764._add_result(result=L763,
                   actor=L1750)

L1766._add_result(result=L752,
                   actor=L1750)

L1768._add_result(result=L1280,
                   actor=L1750)

L1771._add_result(result=L954,
                   actor=L1750)

L1774._add_result(result=L1070,
                   actor=L1750)

L1778._add_result(result='Error: No matching method: size',
                   actor=L1750)

L1780._add_result(result=L1695,
                   actor=L1750)

L1782._add_result(result=L1065,
                   actor=L1750)

L1784._add_result(result=L750,
                   actor=L1750)

L1786._add_result(result=L1086,
                   actor=L1750)

L184.define(var='guessernode',
             value=L182)

L184.define(var='animal',
             value=builtin.String(str='fraidycat'))

L0
root = L0
